//  -------------------------------------------------------------------------------------
//  Hamilton Company Software Product.
//  File: HSLSchedLib.hsl
//
//  File creation date:  2005-06-02 by GZa
//  Last revision date:  2005-08-19 by GZa
//
//  Copyright (c) 2005 by Hamilton Bonaduz AG.
//
//
//  Modification History
//  --------------------
//  1.00  2005-08-19 by GZa  Initial file creation.
//  1.10  2006-08-26 by GZa  new functions added:
//                             - ResSetDistribution()
//                             - SchedGetCurrentActivityDuration()
//                             - SchedSetTaskViewName()
//                             - SchedGetSchedulerSettings2()
//                             - SchedSetSchedulerSettings2()
//                             - SchedGetEstimatedActivityDuration()
//                             - SchedResetActivityDurationLog()
//                             - SchedGetCurrentActivityPlannedDuration()
//                             - SchedRescheduleActivities()
//  -------------------------------------------------------------------------------------

#pragma once


// --------------------------------------------------------------------------------------
// Declaration
// --------------------------------------------------------------------------------------
#ifndef HSL_RUNTIME

namespace SchedLib
{

	// -----------------------------------------------------------------------------------
	// Resource functions
	// -----------------------------------------------------------------------------------
	function ResGetMaxCount( resource& resObj ) variable					{ return(0); }
	function ResGetEnabledCount( resource& resObj ) variable				{ return(0); }
	function ResGetViewName( resource& resObj ) variable					{ return(0); }
	function ResGetAvailable( resource& resObj ) variable					{ return(0); }
	function ResDisable( resource& resObj, variable unit, variable cancelTaskOnDemand ) variable	{ return(0); }
	function ResEnable( resource& resObj, variable unit ) variable		{ return(0); }
	function ResEqualsToResource( resource& resObj, resource& res ) variable { return(0); }
	function ResIsEnabled( resource& resObj, variable unit ) variable	{ return(0); }
	function ResDisableAll( resource& resObj, variable cancelTaskOnDemand ) variable { return(0); }
	function ResEnableAll( resource& resObj ) variable						{ return(0); }
	function ResSetDistribution( resource& resObj, variable distribution, variable distributionOption ) variable { return(0); }


	// -----------------------------------------------------------------------------------
	// Sequence functions
	// -----------------------------------------------------------------------------------
//	function SeqGetMaxPositions( sequence& seqObj ) variable				{ return(0); }
//	function SeqGetAvailablePositions( sequence& seqObj ) variable		{ return(0); }
//	function SeqAcquirePositions( sequence& seqObj, variable count, variable& currentPosition ) variable { return(0); }
//	function SeqReleasePositions( sequence& seqObj, variable positionsHandle ) variable { return(0); }


	// -----------------------------------------------------------------------------------
	// Scheduler functions
	// -----------------------------------------------------------------------------------
	function SchedGetCurrentTaskId() variable								{ return(0); }
	function SchedGetCurrentTaskViewName() variable						{ return(0); }
	function SchedGetTaskViewName( variable taskId ) variable		{ return(0); }
	function SchedGetMethodViewName( variable taskId ) variable		{ return(0); }
	function SchedGetCurrentActivityViewName() variable				{ return(0); }
	function SchedGetWorkflowFileName() variable							{ return(0); }
	function SchedTaskIsCancelable( variable taskId ) variable		{ return(0); }
	function SchedTaskIsUnschedulable( variable taskId ) variable	{ return(0); }
	function SchedUnscheduleTask( variable taskId, variable removeTask ) variable { return(0); }
	function SchedGetTaskStatus( variable taskId ) variable			{ return(0); }
	function SchedSetMethodProperties( variable methodId, variable isVisible ) variable { return(0); }
	function SchedSetTaskProperties( variable taskId, variable isUnschedulable, variable isCancelable ) variable { return(0); }
	function SchedEnableReschedule()	void									{ }
	function SchedDisableReschedule() void									{ }
	function SchedRescheduleIsEnabled() variable							{ return(0); }
	function SchedGetSchedulerSettings( variable& controlCycleTime, variable& taskPreActivationTime, variable& controlPolicy,
						variable& errorPolicy, variable& branchingMode, variable& maxDisposableTasks, variable& maxOptimizedUnits,
						variable& maxActivityDurationFactor, variable& searchingIntervalFactor ) void { }
	function SchedSetSchedulerSettings( variable controlCycleTime, variable taskPreActivationTime, variable controlPolicy,
						variable errorPolicy, variable branchingMode, variable maxDisposableTasks, variable maxOptimizedUnits,
						variable maxActivityDurationFactor, variable searchingIntervalFactor ) void { }
	function SchedIsSchedule() variable										{ return(0); }
	function SchedWaitForTask( variable taskId, variable timeout ) variable		{ return(0); }
	function SchedGetRunState() variable									{ return(0); }
	function SchedGetTaskIds( variable taskStatus, variable& taskIdArray[] ) variable { return(0); }
	function SchedGetTaskCancelReason( variable taskId ) variable { return(0); }
	function SchedValidateTaskResources( variable taskId ) variable { return(0); }
	function SchedSetTaskDescription( variable taskId, variable description ) variable { return(0); }
	function SchedSetCurrentActivityDescription( variable description ) variable { return(0); }
	function SchedGetMethodProperties( variable methodId, variable& isVisible ) variable { return(0); }
	function SchedGetCancelledActivityViewName( variable taskId ) variable { return(0); }
	function SchedGetCurrentActivityDuration() variable				{ return(0); }
	function SchedSetTaskViewName( variable taskId, variable taskViewName ) variable { return(0); }
	function SchedGetSchedulerSettings2( variable& logActivityDurations, variable& estimateActivityDurations ) void { }
	function SchedSetSchedulerSettings2( variable logActivityDurations, variable estimateActivityDurations ) void { }
	function SchedGetEstimatedActivityDuration( variable activityGUID, variable statisticIndex ) variable { return(0); }
	function SchedResetActivityDurationLog( variable activityGUID, variable& recordsAffected ) variable { return(0); }
	function SchedGetCurrentActivityPlannedDuration() variable 		{ return(0); }
	function SchedRescheduleActivities( variable taskId ) void		{ }
}
#endif


#ifdef HSL_RUNTIME
#include "HSLSchedLibImpl.hs_"
#endif

// $$author=wbarmettler$$valid=1$$time=2008-05-05 14:18$$checksum=4602c8ee$$length=088$$