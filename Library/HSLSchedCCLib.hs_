//  -------------------------------------------------------------------------------------
//  Hamilton Company Software Product.
//  File: HSLSchedLib.hs_
//
//
//
//  File creation date:  2005-04-04 by GZa
//  Last revision date:  2005-04-04 by GZa
//
//  Copyright (c) 2005 by Hamilton Bonaduz AG.
//
//
//  Modification History
//  --------------------
//  1.00  2005-04-04 by GZa  Initial file creation.
//  1.10  2006-08-29 by GZa  New functions added:
//                              - SchedStartActivate
//                              - SchedEndActivate
//  -------------------------------------------------------------------------------------

#pragma once

#ifndef HSL_RUNTIME
namespace SchedCCLib
{


// --------------------------------------------------------------------------------------
// Exported functions
// --------------------------------------------------------------------------------------

	//
	// Checks the parameters for an ActivateAt(..) call.
	//
	static function SchedPreActivateAt(
		variable  YYYY,							// i: year (integer)
		variable  MM,								// i: month (integer)
		variable  DD,								// i: day of the month (integer)
		variable  hh,								// i: hour (integer)
		variable  mm,								// i: minute (integer)
		variable  ss,								// i: second (integer)
		variable  someMethodId,					// i: id of the registered method to be activated
		variable  someTaskViewName,			// i: view name of task to be activated
		variable& someTaskId,					// o resp i/o: id of activated method (task)
		variable  inheritCancel ) void {}	// i: cancel inheritance option


	//
	// Checks the parameters for an ActivateDelay(..), an ActivateAfter(..) or an ActivateBefore(..) call.
	//
	static function SchedPreActivate(
		variable  somePeriod,					// i: relative time span (integer)
		variable  anotherTask,					// i: id of already activated method (task)
		variable  someMethodId,					// i: id of registered method to be activated or
														//		id of already activated method (task)
		variable  someTaskViewName,			// i: view name of task to be activated
		variable& someTaskId,					// o resp. i/o: id of activated method (task)
		variable  inheritCancel ) void {}	// i: cancel inheritance option


	//
	// Checks the return value of an ActivateAt(..), an ActivateDelay(..), an ActivateAfter(..)
	// or an ActivateBefore(..) call.
	//
	static function SchedPostActivate(
		variable  retVal ) void {}		// i: return value of the activate method call


	// 
	// Traces the start of an activate step.
	//
	static function SchedStartActivate() void {}


	// 
	// Traces the end of an activate step.
	//
	static function SchedEndActivate() void {}


	//
	// Cancels the specified task using the built-in function CancelTask.
	//
	static function SchedCancelTask(
		variable taskId ) void {}				// i: id of the task to cancel


	//
	// Checks the parameters for a RegisterMethod(..) call.
	//
	static function SchedPreSelectMethod(
		variable  someMethod,					// i: file name of method to be selected
		variable  someMethodViewName,			// i: view name of method to be selected
		variable& someMethodId ) void {}		// o resp. i: id of selected method


	//
	// Checks the return value of the RegisterMethod(..) call.
	//
	static function SchedPostSelectMethod(
		variable  retVal ) void {}		// i: return value of the select method call

}
#endif


#ifndef __HSLUtilLib2_hsl__
	#include "HSLUtilLib2.hsl"		// Support for functions Util2::VarArrElementAt() and Util2::SeqArrElementAt()
#endif


// Implementation of to the SchedCC Template Library is only included at runtime.
#ifdef HSL_RUNTIME
#include "HSLSchedCCLibImpl.hs_"
#endif

// $$author=wbarmettler$$valid=1$$time=2008-05-05 14:18$$checksum=7ca1b23d$$length=088$$