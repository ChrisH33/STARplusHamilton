// {{{ 2 "IncludeGuard" "PragmaOnce"
#pragma once
// }} ""
#include "HSLMappingReport.hsl"
#include "HSLStrLib.hsl"
#include "HSLTimLib.hsl"
#include "HSLMicrosoftExcel.hsl"
#include "Training\\HSLTrcLib.hsl"
#include "HSLMthLib.hsl"
#include "HSLUtilLib.hsl"
#include "EmailUtilities\\HSLEmailUtilLib.hsl"
#include "HSLFileDirectoryLib.hsl"
#include "RemoveTextDelimitersFromAsciiTextFile.hsl"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
#include "HSLMETEDLib.hs_"
#include "HSLMECCLib.hs_"
// }} ""
// {{{ 2 "LibraryNamespace" "Begin"
namespace MEDIMMUNE_SAMPLETRACKINGDBHELPER_SQLDB_2014 {
// }} ""
global variable SampleTrackingDB_glExperimentID;
global variable SampleTrackingDB_glConnectionString;
global variable SampleTrackingDB_glDBName;
global variable SampleTrackingDB_glRunID;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{{ 2 "SubmethodForwardDeclaration" ""
function Add24WellPlatePipettingDataToDB( variable & iArrSampleTrackingFiles[], variable iCultureVolume, variable iMediaVolume, variable imediatype, variable imedialot ) void ;
function Add384wHitpickPipettingDataToDB( variable & iArrSampleTrackingFiles[], variable icultureVolume, variable imediaVolume, variable imediatype, variable imedialot ) void ;
function Add96wHitpickPipettingDataToDB( variable & iArrSampleTrackingFiles[], variable icultureVolume, variable imediaVolume, variable imediatype, variable imedialot, variable ProcessStep ) void ;
function AddCellDensityDataToDB( variable iTestPlateBarcode, variable iTestPlateWellID, variable iTotalCellDensity, variable iViableCellDensity, variable iViability ) void ;
function AddCellDensityMethodToDB( variable iTestPlateBarcode, variable iAssayDay, variable iDilution, variable iDeviceSerialNumber, variable iResultLocation1, variable iAssaySpecificLot1, variable iAssaySpecificLot1Type, variable iAssaySpecificLot2, variable iAssaySpecificLot2Type ) void ;
function AddCellDensityPipettingDataToDB( variable & iArrSampleTrackingFileNames[], variable & iArrCellCulturePlateBarcodes[], variable iSampleVol ) void ;
function AddConfluenceDataToDB( variable iPlateBarcode, variable iWellID, variable iSampleVesselType, variable iConfluenceReading, variable iRandomNum ) void ;
function AddConfluenceMethodToDB( variable iTestPlateBarcode, variable iTestPlateType, variable iAssayDay, variable iDeviceSerialNumber, variable iResultLocation1 ) void ;
function AddFeedPipettingDataToDB( variable & iArrSampleTrackingFiles[], variable ipartAvol, variable ipartBvol, variable ipartAfeedtype, variable ipartAfeedlot, variable ipartBfeedtype, variable ipartBfeedlot ) void ;
function AddFilterPlatePipettingDataToDB( variable & iArrSampleTrackingFiles[], variable iCultureVolume, variable iSourceFile ) void ;
function AddOctetProAMethodToDB( variable iOctetPlateBarcode, variable iReadType, variable iAssayDay, variable iDilution, variable iBiosensorLot, variable iBiosensorType, variable iOctetMethodFile, variable iOctetDataDir, variable iOctetiniFile, variable iOctetSN ) void ;
function AddOctetProAResultDataToDB_Manual( variable octetPlateBarcode, variable iOctetInputFile, variable NumSamplePlates, variable SampleVesselType ) void ;
function AddOctetTestPlatePipettingDatatoDB( variable & iArrSampleTrackingFileNames[], variable & iArrCellCulturePlateBarcodes[], variable iDiluentName, variable iDiluentLot, variable iSampleVol, variable TotalVol ) void ;
function AddParentalLocationDataToDB( variable iParentalID, variable iCulturePlateBarcode, variable iCulturePlateWellID, variable iPlateType ) void ;
function AddParentalSummaryDataToDB( variable iParentalID, variable iConfluenceLimit, variable iNumWellsAbove, variable iNumWellsPicked ) void ;
function AddPassagePlatePipettingDataToDB( variable & iArrSampleTrackingFiles[], variable & iCultureVolume[], variable & iMediaVolume[], variable & iTargetCellDensity[], variable & iTargetViaCellDensity[], variable & iTargetViability[], variable iDWPsThisTime, variable & iArrBarcodesPassagePlates[], variable iMediaType, variable iMediaLot ) void ;
function AddTerminalPlatePipettingDataToDB( variable & iArrSampleTrackingFiles[], variable & iCultureVolume[], variable & iMediaVolume[], variable & iTargetCellDensity[], variable & iTargetViaCellDensity[], variable & iTargetViability[], variable iDWPsThisTime, variable & iArrBarcodesTerminalPlates[], variable iMediaType, variable iMediaLot ) void ;
function BarcodedPlateListLiconic( variable PlateType, variable & BCPlateList, variable & ArrBCPlate[] ) void ;
function CompareBarcodes( variable NumPlates, variable & LiconicBarcodes[], variable & SQLBarcodes[], variable & Match ) void ;
function ConfluencePlateLookup( variable i_int_QueryType, variable i_int_numConfPlates, variable i_str_platetype, variable & i_arr_LiconicBCList[], variable & o_arr_confluencebarcodes[], variable & str_BarcodeList, variable & o_int_ConfluencePlatesInDB, variable & o_int_GoodFlag ) void ;
function DDI_Confluence( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_int_WellNum ) void ;
function DDI_CriticalReagents( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_str_ReagentName, variable i_str_ReagentLot, variable i_int_WellNum, variable i_str_ProcessStep ) void ;
function DDI_CriticalReagents_Method4( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_str_ReagentName, variable i_str_ReagentLot, variable i_int_WellNum, variable i_str_ProcessStep ) void ;
function DDI_Octet( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_int_WellNum ) void ;
function DDI_SampleTransfer( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_int_DestWellNum, variable i_int_SourcetWellNum, variable i_str_ProcessStep ) void ;
function DDI_ViableCellCount( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_int_WellNum ) void ;
function DualMediaSetupPlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[], variable & GoodFlag ) void ;
function InitializeDBHelperLibrary( variable iExperimentID ) void ;
function Liconic384PlateBarcode( variable & barcode384 ) void ;
function PassagePlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[] ) void ;
function PlatesInLiconic( variable PlateType, variable InventoryType, variable & NumOfPlates ) void ;
function RandomNumberInitialize(  ) void ;
function SendCentrifugationEmail( variable username, variable subject, variable message, variable userdomain ) void ;
function SetErrorEmailSettings( variable username, variable userdomain ) void ;
function SetupPlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[], variable & GoodFlag ) void ;
function TerminalPlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[], variable & GoodFlag ) void ;
function TerminalSetupPlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[], variable & GoodFlag ) void ;
private function TranslateRowCoordinate( variable iRowNumber, variable & oRowAlpha ) void ;
private function XAdd96wHitPickMap( variable i96wMapFile, variable irunNum ) void ;
private function XAddOctetAutoDatatoDB( variable & arrOctetBarcode[], variable & arrOctetDataDir[], variable NumOctetPlates, variable octetDilFactor ) void ;
private function XAddOctetAutoDatatoDB_ManualBatchQuant( variable & arrOctetBarcode[], variable & arrOctetDataDir[], variable NumOctetPlates, variable octetDilFactor ) void ;
private function XAddOctetAutoDatatoDB_OctetV6( variable & arrOctetBarcode[], variable & arrOctetDataDir[], variable NumOctetPlates, variable octetDilFactor ) void ;
private function XAddOctetDataToDB( variable iOctetInputFile, variable octetDilFactor ) void ;
private function XAddOctetResultDataToDB_Auto( variable & arrOctetBarcode[], variable & arrOctetDataDir[], variable NumSamplePlates, variable octetDilFactor, variable SampleVesselType ) void ;
private function XAddOctetRunDateToDB(  ) void ;
private function XAddOctetTestPlatePipettingDatatoDB_Static( variable & iArrSampleTrackingFileNames[], variable & iArrCellCulturePlateBarcodes[], variable iDilution ) void ;
private function XAddTfxnPlatePipettingDatatoDB( variable & iArrSampleTrackingFiles[], variable iCultureVolume, variable iMediaVolume ) void ;
// }} ""
function _InitLibrary() {
// {{ 2 "AutoInitBlock" ""
// }} ""
}
function _ExitLibrary() {
// {{ 2 "AutoExitBlock" ""
// }} ""
}
// {{{ 5 "AddConfluenceDataToDB" "Begin"
function AddConfluenceDataToDB( variable iPlateBarcode, variable iWellID, variable iSampleVesselType, variable iConfluenceReading, variable iRandomNum ) void {
// }} ""
private file WRITE_CELLAVISTA_CONFLUENCE_TABLE;
private variable time;
private variable date;
private variable iResultType;
private variable iResultUnits;
private variable AssayType;
private variable SampleID;
private file WRITE_CELLAVISTA_RANDOM_NUM_TABLE;
// {{ 5 "AddConfluenceDataToDB" "InitLocals"
// }} ""
// {{{ 165 1 0 "122cd4e1_60d5_47ef_81c00f326507ae76" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 166 1 0 "a23e5ba2_06fb_4a5a_9d5d7985f84ddb47" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 167 1 0 "0f8e395f_7f1d_441d_9ed4af9db7e271d4" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 168 1 0 "fa4a2319_6942_465f_b53935b8568e5a44" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
AssayType = "CellConfluence";
SampleID = "NA";

iResultType = "Confluence";
iResultUnits = "%";
// {{ 170 1 0 "33093395_19a6_426e_9dfb54e1e3bd95e1" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("SampleID", SampleID, hslString, 255);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("SampleBarcode", iPlateBarcode, hslString, 255);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("SampleWell", iWellID, hslString, 255);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("SampleVesselType", iSampleVesselType, hslString, 255);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("AssayType", AssayType, hslString, 255);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("Result", iConfluenceReading, hslFloat);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("ResultType", iResultType, hslString, 255);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("ResultUnits", iResultUnits, hslString, 255);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.AddField("DateTime", date, hslString, 255);
WRITE_CELLAVISTA_CONFLUENCE_TABLE.SetDelimiter(";");
if( 0 == WRITE_CELLAVISTA_CONFLUENCE_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 171 1 0 "60c74e1a_a127_4023_8c47b266e3936272" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_CELLAVISTA_CONFLUENCE_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 172 1 0 "334b6437_78e3_4f58_b8f9aa3f5daf40bc" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_CELLAVISTA_CONFLUENCE_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_CELLAVISTA_CONFLUENCE_TABLE.RemoveFields();
// }} ""
// {{ 173 1 0 "04a055b5_0a4c_46f7_9ab7ca20dd7c4c36" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
iResultType = "RandomNum";
iResultUnits = "NA";
// {{ 175 1 0 "b086983b_1112_41d9_b6fc26d551fcc35b" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("SampleID", SampleID, hslString, 255);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("SampleBarcode", iPlateBarcode, hslString, 255);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("SampleWell", iWellID, hslString, 255);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("SampleVesselType", iSampleVesselType, hslString, 255);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("AssayType", AssayType, hslString, 255);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("Result", iRandomNum, hslInteger);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("ResultType", iResultType, hslString, 255);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("ResultUnits", iResultUnits, hslString, 255);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.AddField("DateTime", date, hslString, 255);
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.SetDelimiter(";");
if( 0 == WRITE_CELLAVISTA_RANDOM_NUM_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 176 1 0 "2cf045f9_3dc4_43f0_82170beb00b06598" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_CELLAVISTA_RANDOM_NUM_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 177 1 0 "da1b5129_ea20_403c_9dc0c416b53b7a30" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_CELLAVISTA_RANDOM_NUM_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_CELLAVISTA_RANDOM_NUM_TABLE.RemoveFields();
// }} ""
// {{{ 5 "AddConfluenceDataToDB" "End"
}
// }} ""
// {{{ 5 "Add96wHitpickPipettingDataToDB" "Begin"
function Add96wHitpickPipettingDataToDB( variable & iArrSampleTrackingFiles[], variable icultureVolume, variable imediaVolume, variable imediatype, variable imedialot, variable ProcessStep ) void {
// }} ""
private variable targetPosID;
private variable sourceBarcode;
private variable targetBarcode;
private variable arrSize;
private variable arrIndex;
private variable statusSummary;
private file READ_SAMPLE_TRACKING_FILE;
private variable date;
private variable previousSourcePosID;
private variable previousSourceBarcode;
private variable previousTargetBarcode;
private variable previousTargetPosID;
private variable time;
private variable sourcePosID;
private variable totalVol;
private variable SourceVesselType;
private variable targetVesselType;
private file WRITE_HITPICK_DATA;
private variable SampleID;
// {{ 5 "Add96wHitpickPipettingDataToDB" "InitLocals"
// }} ""
// {{{ 66 1 0 "7b00a09b_8f12_49f4_93fbc5080fd0f586" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 67 1 0 "02299daa_89a9_4cd0_a388914b607e55ef" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 68 1 0 "731b4067_5c72_4f3c_977f0f83ffa5f6c7" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 69 1 0 "a59a2df3_4eac_4a73_8d21669f625c8f11" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SourceVesselType = "96w";
targetVesselType = "96DW";
SampleID = "NA";
// {{ 71 1 0 "4dfe4ece_eb3f_47d4_8d2f56a295a9d09b" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
totalVol = imediaVolume + icultureVolume;
// }} ""
// {{ 72 1 0 "066aaf37_883a_4d1d_abca0ab088794e03" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 73 1 0 "1162fd6e_73c9_4a94_9cd02b1e8a47f243" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 74 1 0 "2a954af6_8fdc_47b9_8604047b7c95754e" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_HITPICK_DATA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_HITPICK_DATA.AddField("SampleID", SampleID, hslString, 255);
WRITE_HITPICK_DATA.AddField("SourceBarcode", sourceBarcode, hslString, 255);
WRITE_HITPICK_DATA.AddField("SourceWell", sourcePosID, hslString, 255);
WRITE_HITPICK_DATA.AddField("SourceVesselType", SourceVesselType, hslString, 255);
WRITE_HITPICK_DATA.AddField("DestinationBarcode", targetBarcode, hslString, 255);
WRITE_HITPICK_DATA.AddField("DestinationWell", targetPosID, hslString, 255);
WRITE_HITPICK_DATA.AddField("DestinationVesselType", targetVesselType, hslString, 255);
WRITE_HITPICK_DATA.AddField("TotalVol", totalVol, hslFloat);
WRITE_HITPICK_DATA.AddField("SampleTransferVol", icultureVolume, hslFloat);
WRITE_HITPICK_DATA.AddField("Reagent1Vol", imediaVolume, hslFloat);
WRITE_HITPICK_DATA.AddField("Reagent1ID", imediatype, hslString, 255);
WRITE_HITPICK_DATA.AddField("Reagent1Lot", imedialot, hslString, 255);
WRITE_HITPICK_DATA.AddField("DateTime", date, hslString, 255);
WRITE_HITPICK_DATA.AddField("ProcessStep", ProcessStep, hslString, 255);
WRITE_HITPICK_DATA.SetDelimiter(";");
if( 0 == WRITE_HITPICK_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [SampleTrackingTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 75 1 0 "0efe26da_5af7_4003_94194a231f9321ef" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 76 1 0 "e2f854fe_3c2b_4c37_8ee4568a4456959e" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
arrSize=iArrSampleTrackingFiles.GetSize();
// }} ""
// {{ 77 1 0 "c9d4eec7_08da_4a50_9b9c377fd04b1409" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourceBarcode = Translate("");
// }} ""
// {{ 78 1 0 "1272d4da_36d6_41e6_83306060e4ffa6af" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetBarcode = Translate("");
// }} ""
// {{ 79 1 0 "7a65cb62_c37b_4d39_ad5def532b252986" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourcePosID = Translate("");
// }} ""
// {{ 80 1 0 "7d6162a4_6c32_4d56_9974700d0d0808d6" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetPosID = Translate("");
// }} ""
// {{ 81 1 0 "b7091282_57e7_42dd_abab515711c63c08" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(arrIndex = 0; arrIndex < arrSize;)
{
arrIndex = arrIndex + 1;
// }} ""
// {{ 82 1 0 "0eb19f07_c3cb_4316_b6c91bedced4f7cf" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SAMPLE_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SRackBC", sourceBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SPositionId", sourcePosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_SAMPLE_TRACKING_FILE.Open(iArrSampleTrackingFiles.ElementAt( arrIndex -1) + " " + "ReportMapping$", hslRead, "SELECT DISTINCT [SPositionId], [SRackBC], [TRackBC], [TPositionID], [TSumStateDescription] FROM [ReportMapping]") )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFiles.ElementAt( arrIndex -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 83 1 0 "5ddb3c99_cc4b_44e7_9c0f8eca52a9f812" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
while (
   (READ_SAMPLE_TRACKING_FILE.Eof() == 0)
)
{
// }} ""
// {{ 84 1 0 "dd983acf_fca2_40f8_96d1afe8011d24a0" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SAMPLE_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 85 1 0 "61bc1c7b_7370_4315_9c095b61164a3ff1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 86 1 0 "a4a4cf00_f9d5_4f67_ba07d9b93deda599" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceBarcode != "----------")
{
// }} ""
// {{ 87 1 0 "40660c3d_4f4d_4f55_81a64b55ca28a91d" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_HITPICK_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 88 1 0 "a4a4cf00_f9d5_4f67_ba07d9b93deda599" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 89 1 0 "61bc1c7b_7370_4315_9c095b61164a3ff1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 90 1 0 "5ddb3c99_cc4b_44e7_9c0f8eca52a9f812" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 91 1 0 "f9af7083_88e2_464f_b6c9dde7c79e7a54" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SAMPLE_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SAMPLE_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 92 1 0 "f8e9e628_2ac3_4177_bac78caa208d0795" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 93 1 0 "3724da38_e2fd_4744_98836e76f43d6d3c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFiles.ElementAt( arrIndex -1));
// }} ""
// {{ 94 1 0 "b7091282_57e7_42dd_abab515711c63c08" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 95 1 0 "b8b37c68_a9b7_435e_bc8763ecc7ff071f" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_HITPICK_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_HITPICK_DATA.RemoveFields();
// }} ""
// {{{ 5 "Add96wHitpickPipettingDataToDB" "End"
}
// }} ""
// {{{ 5 "InitializeDBHelperLibrary" "Begin"
function InitializeDBHelperLibrary( variable iExperimentID ) void {
// }} ""
private file CON_STRING_FILE;
// {{ 5 "InitializeDBHelperLibrary" "InitLocals"
// }} ""
// {{ 963 1 0 "5d9758de_0d06_4764_b7903e246cf657af" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 964 1 0 "48f5def5_57a9_4609_aaf64733c4211df6" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
SampleTrackingDB_glExperimentID = iExperimentID;
// }} ""
// {{ 965 1 0 "7ec27179_5b4b_4cd8_b92968a55efd7900" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 966 1 0 "2ae036c0_cf9b_4bc8_b65abcdbc5c56f45" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 967 1 0 "744935f3_6b06_43f8_b357fae7769d60a2" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
CON_STRING_FILE.AddField(1, SampleTrackingDB_glConnectionString, hslString);
CON_STRING_FILE.SetDelimiter(hslAsciiText);
if( 0 == CON_STRING_FILE.Open("C:\\Program Files (x86)\\HAMILTON\\System\\MedImmune System Files\\MedImmuneDBConString_2008R2.txt", hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Program Files (x86)\\HAMILTON\\System\\MedImmune System Files\\MedImmuneDBConString_2008R2.txt", "HxMetEdCompCmd");
}
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 968 1 0 "a2dde342_3883_49ff_b7b1574fcfeadfff" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
CON_STRING_FILE.AddField(1, SampleTrackingDB_glConnectionString, hslString);
CON_STRING_FILE.SetDelimiter(hslAsciiText);
if( 0 == CON_STRING_FILE.Open("C:\\Program Files (x86)\\HAMILTON\\System\\MedImmune System Files\\MedImmuneDBConString_2014.txt", hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Program Files (x86)\\HAMILTON\\System\\MedImmune System Files\\MedImmuneDBConString_2014.txt", "HxMetEdCompCmd");
}
// }} ""
// {{ 969 1 0 "b36c4d2d_8d31_4b5d_bf677c9f72027df3" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == CON_STRING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 970 1 0 "a15b9714_028c_4a23_b219b355da959136" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != CON_STRING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
CON_STRING_FILE.RemoveFields();
// }} ""
// {{ 971 1 0 "8dda2761_9dba_46b8_82a664580b95e735" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 972 1 0 "691fc14c_1b03_4aac_94c2caeb7ba91bee" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
SampleTrackingDB_glDBName = Translate("C:\\Program Files (x86)\\HAMILTON\\System\\MedImmune System Files\\MedImmuneSampleTrackingDB_2008R2_Data.mdf");
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 973 1 0 "a47a11e1_3bd4_4c29_bb11decd2f5cfcab" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
SampleTrackingDB_glDBName = Translate("C:\\Program Files (x86)\\HAMILTON\\System\\MedImmune System Files\\MedImmuneSampleTrackingDB_2014_Data.mdf");
// }} ""
// {{ 974 1 0 "7477fbef_1d2f_4705_b5291596ca086b88" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 5 "InitializeDBHelperLibrary" "End"
}
// }} ""
// {{{ 5 "AddCellDensityDataToDB" "Begin"
function AddCellDensityDataToDB( variable iTestPlateBarcode, variable iTestPlateWellID, variable iTotalCellDensity, variable iViableCellDensity, variable iViability ) void {
// }} ""
private variable date;
private variable time;
private variable iTestPlateType;
private variable SampleID;
private variable AssayType;
private file WRITE_CELLAVISTA_VIA_TABLE;
private file WRITE_CELLAVISTA_VCD_TABLE;
private file WRITE_CELLAVISTA_TCD_TABLE;
private variable iResultType;
private variable iResultUnits;
// {{ 5 "AddCellDensityDataToDB" "InitLocals"
// }} ""
// {{{ 97 1 0 "817c13ae_66cb_43a6_94ac463123afe0a8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 98 1 0 "08ea12dc_c649_48e6_93b30438e5bf3806" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 99 1 0 "bfe42120_01ab_4fc4_8fe6599877387c6c" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 100 1 0 "2aa47dde_7c66_4194_80bcaf6e97b07bf1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
iTestPlateType = "384w";
AssayType = "CellViability_Hoechst-PI";
SampleID = "NA";
iResultUnits = "Num Total Cells";
iResultType = "TCD";
// {{ 102 1 0 "43b18f0c_488c_4891_bf6d0c0ca5e84274" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_CELLAVISTA_TCD_TABLE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_CELLAVISTA_TCD_TABLE.AddField("SampleID", SampleID, hslString, 255);
WRITE_CELLAVISTA_TCD_TABLE.AddField("DateTime", date, hslString, 255);
WRITE_CELLAVISTA_TCD_TABLE.AddField("SampleBarcode", iTestPlateBarcode, hslString, 255);
WRITE_CELLAVISTA_TCD_TABLE.AddField("SampleWell", iTestPlateWellID, hslString, 255);
WRITE_CELLAVISTA_TCD_TABLE.AddField("SampleVesselType", iTestPlateType, hslString, 255);
WRITE_CELLAVISTA_TCD_TABLE.AddField("AssayType", AssayType, hslString, 255);
WRITE_CELLAVISTA_TCD_TABLE.AddField("Result", iTotalCellDensity, hslFloat);
WRITE_CELLAVISTA_TCD_TABLE.AddField("ResultUnits", iResultUnits, hslString, 255);
WRITE_CELLAVISTA_TCD_TABLE.AddField("ResultType", iResultType, hslString, 255);
WRITE_CELLAVISTA_TCD_TABLE.SetDelimiter(";");
if( 0 == WRITE_CELLAVISTA_TCD_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 103 1 0 "1e302e9d_be53_4f87_869138e25bc8416e" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_CELLAVISTA_TCD_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 104 1 0 "0bfe05f2_1b00_4b2e_ab8c7fc6d3949f03" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_CELLAVISTA_TCD_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_CELLAVISTA_TCD_TABLE.RemoveFields();
// }} ""
// {{ 105 1 0 "fe234267_ecfd_4109_94e963c0ae680c26" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
iResultUnits = "Num Viable Cells";
iResultType = "VCD";
// {{ 107 1 0 "f2576b63_2bae_46b6_9c12f6e11a4946b2" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_CELLAVISTA_VCD_TABLE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_CELLAVISTA_VCD_TABLE.AddField("SampleID", SampleID, hslString, 255);
WRITE_CELLAVISTA_VCD_TABLE.AddField("DateTime", date, hslString, 255);
WRITE_CELLAVISTA_VCD_TABLE.AddField("SampleBarcode", iTestPlateBarcode, hslString, 255);
WRITE_CELLAVISTA_VCD_TABLE.AddField("SampleWell", iTestPlateWellID, hslString, 255);
WRITE_CELLAVISTA_VCD_TABLE.AddField("SampleVesselType", iTestPlateType, hslString, 255);
WRITE_CELLAVISTA_VCD_TABLE.AddField("AssayType", AssayType, hslString, 255);
WRITE_CELLAVISTA_VCD_TABLE.AddField("Result", iViableCellDensity, hslFloat);
WRITE_CELLAVISTA_VCD_TABLE.AddField("ResultUnits", iResultUnits, hslString, 255);
WRITE_CELLAVISTA_VCD_TABLE.AddField("ResultType", iResultType, hslString, 255);
WRITE_CELLAVISTA_VCD_TABLE.SetDelimiter(";");
if( 0 == WRITE_CELLAVISTA_VCD_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 108 1 0 "3ec4f270_4a4c_4ede_98079f78bbb20c7c" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_CELLAVISTA_VCD_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 109 1 0 "17d62935_8d4b_4ca0_bbf5ad7f1956d7b6" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_CELLAVISTA_VCD_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_CELLAVISTA_VCD_TABLE.RemoveFields();
// }} ""
// {{ 110 1 0 "86d01754_c9db_4e45_9600c9c46d5df551" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
iResultUnits = "%";
iResultType = "Viability";
// {{ 112 1 0 "62649169_bf2b_4ee6_99c1cf5bb1d01e65" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_CELLAVISTA_VIA_TABLE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_CELLAVISTA_VIA_TABLE.AddField("SampleID", SampleID, hslString, 255);
WRITE_CELLAVISTA_VIA_TABLE.AddField("DateTime", date, hslString, 255);
WRITE_CELLAVISTA_VIA_TABLE.AddField("SampleBarcode", iTestPlateBarcode, hslString, 255);
WRITE_CELLAVISTA_VIA_TABLE.AddField("SampleWell", iTestPlateWellID, hslString, 255);
WRITE_CELLAVISTA_VIA_TABLE.AddField("SampleVesselType", iTestPlateType, hslString, 255);
WRITE_CELLAVISTA_VIA_TABLE.AddField("AssayType", AssayType, hslString, 255);
WRITE_CELLAVISTA_VIA_TABLE.AddField("Result", iViability, hslFloat);
WRITE_CELLAVISTA_VIA_TABLE.AddField("ResultUnits", iResultUnits, hslString, 255);
WRITE_CELLAVISTA_VIA_TABLE.AddField("ResultType", iResultType, hslString, 255);
WRITE_CELLAVISTA_VIA_TABLE.SetDelimiter(";");
if( 0 == WRITE_CELLAVISTA_VIA_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 113 1 0 "37e580be_2285_4f75_b5b32bacf97e9ac1" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_CELLAVISTA_VIA_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 114 1 0 "faa44919_fad7_4fe0_aaa3daf4b4b4aec2" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_CELLAVISTA_VIA_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_CELLAVISTA_VIA_TABLE.RemoveFields();
// }} ""
// {{{ 5 "AddCellDensityDataToDB" "End"
}
// }} ""
// {{{ 5 "AddCellDensityPipettingDataToDB" "Begin"
function AddCellDensityPipettingDataToDB( variable & iArrSampleTrackingFileNames[], variable & iArrCellCulturePlateBarcodes[], variable iSampleVol ) void {
// }} ""
private variable targetPosID;
private variable sourceBarcode;
private variable targetBarcode;
private variable sourcePosID;
private variable date;
private file WRITE_CELLAVISTA_PLATE_DATA;
private variable arrSize;
private variable fileIndex;
private variable sourceLabID;
private variable statusSummary;
private file READ_SAMPLE_TRACKING_FILE;
private variable time;
private variable sqlStatement;
private variable ProcessStep;
private variable SourceVesselType;
private variable SampleID;
private variable targetVesselType;
// {{ 5 "AddCellDensityPipettingDataToDB" "InitLocals"
// }} ""
// {{{ 126 1 0 "2c63969c_2ace_4fc5_8f10b58df0042e44" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 127 1 0 "89506173_f1db_4152_93cfbb22b7e2e2de" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 128 1 0 "a73b2bbb_cd90_48f7_baa8211f33e22db9" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 129 1 0 "9b513d5f_2390_48ce_b6815b3af58b9f62" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SourceVesselType = "96DW";
targetVesselType = "384w";
ProcessStep = "SuspensionCellCount";
SampleID = "NA";
// {{ 131 1 0 "0fab2a65_bbc9_473b_9526fae8856ba815" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 132 1 0 "c9d4436e_1c21_4205_a56c53f7b38e3a6b" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_CELLAVISTA_PLATE_DATA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.AddField("SampleID", SampleID, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.AddField("DateTime", date, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.AddField("DestinationBarcode", targetBarcode, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.AddField("DestinationWell", targetPosID, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.AddField("DestinationVesselType", targetVesselType, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.AddField("SourceBarcode", sourceBarcode, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.AddField("SourceWell", sourcePosID, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.AddField("SourceVesselType", SourceVesselType, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.AddField("SampleTransferVol", iSampleVol, hslFloat);
WRITE_CELLAVISTA_PLATE_DATA.AddField("ProcessStep", ProcessStep, hslString, 255);
WRITE_CELLAVISTA_PLATE_DATA.SetDelimiter(";");
if( 0 == WRITE_CELLAVISTA_PLATE_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [SampleTrackingTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 133 1 0 "0f46c183_4297_41e1_b9bdf72cb8a6a210" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 134 1 0 "f3871c6c_50d8_424c_a1612c8b2eca831d" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
arrSize=iArrSampleTrackingFileNames.GetSize();
// }} ""
// {{ 135 1 0 "2a72b058_0659_401e_bcad5afdf3ed0195" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(fileIndex = 0; fileIndex < arrSize;)
{
fileIndex = fileIndex + 1;
// }} ""
sqlStatement = "SELECT DISTINCT [TRackBC], [TPositionId], [SLabwareId], [SPositionId], [TSumStateDescription]" +
"FROM [ReportMapping]";
// {{ 137 1 0 "68144259_38cb_4309_aae7bceb0d15c00b" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SAMPLE_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SLabwareId", sourceLabID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SPositionId", sourcePosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_SAMPLE_TRACKING_FILE.Open(iArrSampleTrackingFileNames.ElementAt( fileIndex -1) + " " + "ReportMapping$", hslRead, sqlStatement) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFileNames.ElementAt( fileIndex -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 138 1 0 "e0582f6d_bfa2_4157_b6a6d4412acf2752" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
while (
   (READ_SAMPLE_TRACKING_FILE.Eof() == 0)
)
{
// }} ""
// {{ 139 1 0 "8e667837_78aa_45a9_9ad652df8d8d9365" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SAMPLE_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 140 1 0 "f86cbc27_e85f_43da_8f2beb2478089bb8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 141 1 0 "1539af34_8e6f_44cb_ae352a5019c6fc85" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 142 1 0 "d5a0b3af_708e_4da0_ab5d5da7ef725510" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if ("TRackBC" != "----------")
{
// }} ""
// {{ 143 1 0 "767183cf_5473_4d45_abd81c1b9a7636a0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "SamplingA_1")
{
// }} ""
// {{ 144 1 0 "06e53f94_5435_4010_b87833318e698720" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(1-1);
// }} ""
// {{ 145 1 0 "767183cf_5473_4d45_abd81c1b9a7636a0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 146 1 0 "dd257db4_3c2f_480f_ada980d5e498f055" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "SamplingA_2")
{
// }} ""
// {{ 147 1 0 "3ee9019c_1b62_4b4d_a76fa401083cd3e4" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(2-1);
// }} ""
// {{ 148 1 0 "dd257db4_3c2f_480f_ada980d5e498f055" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 149 1 0 "cb78aa0a_3bcd_4caf_9c2c94f6831e7f8a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "SamplingA_3")
{
// }} ""
// {{ 150 1 0 "afe87375_4626_4345_b19b6ba2ae476588" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(3-1);
// }} ""
// {{ 151 1 0 "cb78aa0a_3bcd_4caf_9c2c94f6831e7f8a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 152 1 0 "517553b8_4a32_4836_b56ae262f5714e74" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "SamplingA_4")
{
// }} ""
// {{ 153 1 0 "e77c513f_4d19_4ab8_b5764d9100c25762" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(4-1);
// }} ""
// {{ 154 1 0 "517553b8_4a32_4836_b56ae262f5714e74" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 155 1 0 "92ca8304_ebf6_4478_bfe14e55f31f0003" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_CELLAVISTA_PLATE_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 156 1 0 "d5a0b3af_708e_4da0_ab5d5da7ef725510" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 157 1 0 "1539af34_8e6f_44cb_ae352a5019c6fc85" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 158 1 0 "e0582f6d_bfa2_4157_b6a6d4412acf2752" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 159 1 0 "9184b786_c6a7_4017_a3848bdd14bd7406" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SAMPLE_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SAMPLE_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 160 1 0 "d0ad8520_bbaf_48a0_91f07bcb8a23432f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 161 1 0 "1aca2158_45c3_437c_9d596018bb46a542" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFileNames.ElementAt( fileIndex -1));
// }} ""
// {{ 162 1 0 "2a72b058_0659_401e_bcad5afdf3ed0195" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 163 1 0 "0f0c0ed1_54a3_4279_b713d62e109b3c3e" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_CELLAVISTA_PLATE_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_CELLAVISTA_PLATE_DATA.RemoveFields();
// }} ""
// {{{ 5 "AddCellDensityPipettingDataToDB" "End"
}
// }} ""
// {{{ 5 "XAddOctetRunDateToDB" "Begin"
private function XAddOctetRunDateToDB(  ) void {
// }} ""
private variable sqlStatement;
private variable date;
private file UPDATE_EXPERIMENT_INFO_TABLE;
private variable time;
// {{ 5 "XAddOctetRunDateToDB" "InitLocals"
// }} ""
// {{ 1520 1 0 "fb52ea47_83d4_4da6_ba2f722be829053b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1521 1 0 "6df6417d_0288_4c87_9e64bc63bf0f6c31" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 1522 1 0 "c62c2b58_9e3d_4dcb_bf56d093f44e268a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 1523 1 0 "a695e7c3_2631_4978_abb3fa653bcadd39" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{{ 1524 1 0 "00350e14_4239_490e_b095d68e00f82fc7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
sqlStatement = StrConcat8(Translate("UPDATE [ExperimentInfoTable] SET [OctetMeasurementDate] = '"), date, Translate("' WHERE [ExperimentID] = '"), SampleTrackingDB_glExperimentID, Translate("'"), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 1525 1 0 "d2f7b6a9_f6e4_46da_95f78b7b491505e5" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
UPDATE_EXPERIMENT_INFO_TABLE.SetDelimiter(";");
if( 0 == UPDATE_EXPERIMENT_INFO_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1526 1 0 "22afb66a_6c57_4dee_bfbbec1d9081e3d3" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != UPDATE_EXPERIMENT_INFO_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
UPDATE_EXPERIMENT_INFO_TABLE.RemoveFields();
// }} ""
// {{{ 5 "XAddOctetRunDateToDB" "End"
}
// }} ""
// {{{ 5 "XAddOctetDataToDB" "Begin"
private function XAddOctetDataToDB( variable iOctetInputFile, variable octetDilFactor ) void {
// }} ""
private variable row;
private variable titerColumn;
private variable posID;
private variable sheetCounter;
private variable positionColumn;
private variable proteinTiter;
private variable readCounter;
private variable sheetNumber;
private variable octetPlateBarcode;
private file WRITE_OCTET_DATA_TO_DB;
private variable proteinTiterDil;
private variable proteinTiterDil2;
private variable time;
private variable date;
private variable sheetname;
// {{ 5 "XAddOctetDataToDB" "InitLocals"
// }} ""
// {{ 1418 1 0 "97830e74_76c2_40a9_990ceda882765ca1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1419 1 0 "7cab8827_a946_43df_88ff21604262bdaa" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 1420 1 0 "840961ad_2a0e_4b32_bf71c30f1a492093" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 1421 1 0 "f1a6115c_4903_4b12_92adb8326049b8b2" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 1422 1 0 "b53bad4c_bc4e_4ef0_a5ef5ce6e51423f1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1423 1 0 "24953f5d_98f7_482e_b1915dfaf6032e2c" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_DATA_TO_DB.AddField("experimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("OctetTestPlateBarcode", octetPlateBarcode, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("OctetTestPlateWellID", posID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("ProteinTiter", proteinTiter, hslFloat);
WRITE_OCTET_DATA_TO_DB.AddField("Date", date, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("RunID", SampleTrackingDB_glRunID, hslInteger);
WRITE_OCTET_DATA_TO_DB.SetDelimiter(";");
if( 0 == WRITE_OCTET_DATA_TO_DB.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [OctetReadDataTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1424 1 0 "6bced682_e102_42e3_be74e6d3f9aa7926" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
positionColumn = 15;
// }} ""
// {{ 1425 1 0 "9564feb7_13dc_4d54_9ec5c23e3b82f68a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
titerColumn = 20;
// }} ""
// {{{ 1426 1 0 "dfddef45_767c_47bc_9300ff48a3d83548" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::Init();
// }} ""
// {{{ 1427 1 0 "b2f8b71b_41a9_45b9_8fd2adfa4adeadf6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::OpenFile(iOctetInputFile);
// }} ""
// {{{ 1428 1 0 "df495868_b1b1_4fd5_96ac3f0207f31622" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetSheetCount(sheetNumber);
// }} ""
// {{ 1429 1 0 "f90cf615_24a5_404f_833de0e5b2ea531b" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(sheetCounter = 0; sheetCounter < sheetNumber;)
{
sheetCounter = sheetCounter + 1;
// }} ""
// {{{ 1430 1 0 "def8c48d_1cec_4514_8185f3cc123ddc7e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::SelectSheet(sheetCounter);
// }} ""
// {{{ 1431 1 0 "4f5de5a2_da2a_4977_8546882c54f4256b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetSheetName(octetPlateBarcode);
// }} ""
// {{ 1432 1 0 "cb12edb6_118a_4505_81efeff73162d2dd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (octetPlateBarcode != "Ini File")
{
// }} ""
// {{{ 1433 1 0 "8ad607f3_39ee_4509_854aac7c3498dd27" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
sheetname = StrLeft(octetPlateBarcode, 5);
// }} ""
// {{ 1434 1 0 "716420de_ad50_4ac6_a8b99448062e16ef" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sheetname != "Sheet")
{
// }} ""
// {{ 1435 1 0 "948332a4_5ed7_4337_8bbe218d586eed9e" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 40;
// }} ""
// {{ 1436 1 0 "184ad8c8_27ee_4a1f_bfa842c30f0e0db4" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(readCounter = 0; readCounter < 96;)
{
readCounter = readCounter + 1;
// }} ""
// {{{ 1437 1 0 "40541e63_53b2_4102_a8c57c833966c2ce" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(positionColumn, row, posID);
// }} ""
// {{{ 1438 1 0 "fb28b685_cbee_4040_b80520e718a4b307" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(titerColumn, row, proteinTiterDil2);
// }} ""
// {{{ 1439 1 0 "94ba4f6f_c381_4bc3_a79b2c62432c85c4" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
proteinTiterDil = StrFVal(proteinTiterDil2);
// }} ""
// {{ 1440 1 0 "b8b01c71_198e_411e_846b5eb810bcbfe0" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = octetDilFactor * proteinTiterDil;
// }} ""
// {{ 1441 1 0 "f382bf84_0afc_404d_95d6f41d3370b263" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_DATA_TO_DB.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1442 1 0 "c346f4c6_4b58_46af_b14425fdd6680542" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
row = row + 1;
// }} ""
// {{ 1443 1 0 "184ad8c8_27ee_4a1f_bfa842c30f0e0db4" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1444 1 0 "716420de_ad50_4ac6_a8b99448062e16ef" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1445 1 0 "cb12edb6_118a_4505_81efeff73162d2dd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1446 1 0 "f90cf615_24a5_404f_833de0e5b2ea531b" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 1447 1 0 "37c5d98c_074c_4478_ab8ed33fe23d01b9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::End();
// }} ""
// {{ 1448 1 0 "4570bd88_90b2_43d4_af090aa787d699b8" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_DATA_TO_DB.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_DATA_TO_DB.RemoveFields();
// }} ""
// {{{ 5 "XAddOctetDataToDB" "End"
}
// }} ""
// {{{ 5 "Add24WellPlatePipettingDataToDB" "Begin"
function Add24WellPlatePipettingDataToDB( variable & iArrSampleTrackingFiles[], variable iCultureVolume, variable iMediaVolume, variable imediatype, variable imedialot ) void {
// }} ""
private variable previousSourcePosID;
private variable arrSize;
private variable previousSourceBarcode;
private variable previousTargetBarcode;
private variable targetPosID;
private variable previousTargetPosID;
private variable arrIndex;
private variable scourcePosID;
private variable statusSummary;
private variable sourceBarcode;
private variable targetBarcode;
private variable date;
private file READ_SAMPLE_TRACKING_FILE;
private file WRITE_HITPICK_DATA;
private variable time;
private variable ProcessStep;
private variable SourceVesselType;
private variable totalvol;
private variable targetVesselType;
private variable SampleID;
// {{ 5 "Add24WellPlatePipettingDataToDB" "InitLocals"
// }} ""
// {{{ 1 1 0 "8dea01b7_809d_4d5c_899ffde9ceef7338" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 2 1 0 "44c5703e_2a72_4baf_9a7eee6e37545f4c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 3 1 0 "aa731063_b537_4a66_96340d76b3743f3c" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 4 1 0 "47d28ed8_b8b9_42db_a944623767c7bbae" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 5 1 0 "66a1d7a7_76ce_4642_b9b740474c0692b0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SourceVesselType = "96DW";
targetVesselType = "24DW";
ProcessStep = "24DW_ScaleUp";
SampleID = "NA";
// {{ 7 1 0 "a42f54bd_9064_4aff_a9deedbda97dcdf4" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
totalvol = iMediaVolume + iCultureVolume;
// }} ""
// {{ 8 1 0 "8149884e_e3ea_43ff_80a8a6c840ac6056" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 9 1 0 "9ae71e03_5c10_4c30_903291eb27d6c484" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_HITPICK_DATA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_HITPICK_DATA.AddField("SampleID", SampleID, hslString, 255);
WRITE_HITPICK_DATA.AddField("SourceBarcode", sourceBarcode, hslString, 255);
WRITE_HITPICK_DATA.AddField("SourceWell", scourcePosID, hslString, 255);
WRITE_HITPICK_DATA.AddField("SourceVesselType", SourceVesselType, hslString, 255);
WRITE_HITPICK_DATA.AddField("DestinationBarcode", targetBarcode, hslString, 255);
WRITE_HITPICK_DATA.AddField("DestinationWell", targetPosID, hslString, 255);
WRITE_HITPICK_DATA.AddField("DestinationVesselType", targetVesselType, hslString, 255);
WRITE_HITPICK_DATA.AddField("DateTime", date, hslString, 255);
WRITE_HITPICK_DATA.AddField("TotalVol", totalvol, hslFloat);
WRITE_HITPICK_DATA.AddField("SampleTransferVol", iCultureVolume, hslFloat);
WRITE_HITPICK_DATA.AddField("Reagent1Vol", iMediaVolume, hslFloat);
WRITE_HITPICK_DATA.AddField("Reagent1ID", imediatype, hslString, 255);
WRITE_HITPICK_DATA.AddField("Reagent1Lot", imedialot, hslString, 255);
WRITE_HITPICK_DATA.AddField("ProcessStep", ProcessStep, hslString, 255);
WRITE_HITPICK_DATA.SetDelimiter(";");
if( 0 == WRITE_HITPICK_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [SampleTrackingTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 10 1 0 "a4c07f92_3903_4d8e_bf2d1d126d317496" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 11 1 0 "038c468c_9ed5_43e9_bc39bc08c123fa46" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
arrSize=iArrSampleTrackingFiles.GetSize();
// }} ""
// {{ 12 1 0 "31cc2421_2a84_4b0b_ac5cd2c916207003" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourceBarcode = Translate("");
// }} ""
// {{ 13 1 0 "2dea0522_8446_4fc6_be673c5d8952d9a1" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetBarcode = Translate("");
// }} ""
// {{ 14 1 0 "b3c53f63_ea5f_4100_99824f16abbb52b8" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourcePosID = Translate("");
// }} ""
// {{ 15 1 0 "d4f8bdc2_52ce_46e1_9bf8dc9584f477a1" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetPosID = Translate("");
// }} ""
// {{ 16 1 0 "8de1f810_caac_41ce_bb611abb3271b17f" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(arrIndex = 0; arrIndex < arrSize;)
{
arrIndex = arrIndex + 1;
// }} ""
// {{ 17 1 0 "a07ba164_a48d_4e96_8baebf8386c8c632" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SAMPLE_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SRackBC", sourceBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SPositionId", scourcePosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_SAMPLE_TRACKING_FILE.Open(iArrSampleTrackingFiles.ElementAt( arrIndex -1) + " " + "ReportMapping$", hslRead, "SELECT DISTINCT [SPositionId], [SRackBC], [TRackBC], [TPositionID], [TSumStateDescription] FROM [ReportMapping]") )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFiles.ElementAt( arrIndex -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 18 1 0 "bc88ce48_d2cb_4d90_b2fcb3d7589a5b42" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
while (
   (READ_SAMPLE_TRACKING_FILE.Eof() == 0)
)
{
// }} ""
// {{ 19 1 0 "1d74b286_c7b0_4b79_b8e2d86c991d8834" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SAMPLE_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 20 1 0 "4bd7cd08_e304_4417_98088e45ddfd467e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 21 1 0 "c569b6bf_e9d2_41c8_a87d114fcec23561" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 22 1 0 "42b3c16b_6bf0_4ef2_bc5601ea4e629096" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceBarcode != "----------")
{
// }} ""
// {{ 23 1 0 "873d4bef_a149_409a_8c37ba5628433639" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_HITPICK_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 24 1 0 "42b3c16b_6bf0_4ef2_bc5601ea4e629096" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 25 1 0 "c569b6bf_e9d2_41c8_a87d114fcec23561" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 26 1 0 "bc88ce48_d2cb_4d90_b2fcb3d7589a5b42" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 27 1 0 "4d23f1d0_97a5_42aa_a086955f4291ba90" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SAMPLE_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SAMPLE_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 28 1 0 "8bd8052b_42a3_489e_9900809c60f542aa" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 29 1 0 "ad1fdec9_dc46_49e8_8b5b00d0f2016abc" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFiles.ElementAt( arrIndex -1));
// }} ""
// {{ 30 1 0 "8de1f810_caac_41ce_bb611abb3271b17f" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 31 1 0 "fc381343_336e_4bee_8ebda68f6faaad24" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_HITPICK_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_HITPICK_DATA.RemoveFields();
// }} ""
// {{{ 5 "Add24WellPlatePipettingDataToDB" "End"
}
// }} ""
// {{{ 5 "AddOctetTestPlatePipettingDatatoDB" "Begin"
function AddOctetTestPlatePipettingDatatoDB( variable & iArrSampleTrackingFileNames[], variable & iArrCellCulturePlateBarcodes[], variable iDiluentName, variable iDiluentLot, variable iSampleVol, variable TotalVol ) void {
// }} ""
private variable arrSize;
private variable fileIndex;
private variable targetPosID;
private variable sourceLabID;
private variable statusSummary;
private variable sourceBarcode;
private variable targetBarcode;
private variable date;
private variable sourcePosID;
private file WRITE_OCTET_PLATE_DATA;
private file READ_SAMPLE_TRACKING_FILE;
private variable time;
private variable sqlStatement;
private variable ProcessStep;
private variable SourceVesselType;
private variable SampleID;
private variable iDiluentVol;
private variable DestinationVesselType;
// {{ 5 "AddOctetTestPlatePipettingDatatoDB" "InitLocals"
// }} ""
// {{ 330 1 0 "54e1a65e_3628_4d0f_904465973f3b36f4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 331 1 0 "d86ecdbc_100e_45d5_88fa7d36bd56ad00" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_PLATE_DATA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("SampleID", SampleID, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("DateTime", date, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("DestinationBarcode", targetBarcode, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("DestinationWell", targetPosID, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("DestinationVesselType", DestinationVesselType, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("SourceBarcode", sourceBarcode, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("SourceWell", sourcePosID, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("SourceVesselType", SourceVesselType, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("TotalVol", TotalVol, hslFloat);
WRITE_OCTET_PLATE_DATA.AddField("SampleTransferVol", iSampleVol, hslFloat);
WRITE_OCTET_PLATE_DATA.AddField("Reagent1Vol", iDiluentVol, hslFloat);
WRITE_OCTET_PLATE_DATA.AddField("Reagent1ID", iDiluentName, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("Reagent1Lot", iDiluentLot, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("ProcessStep", ProcessStep, hslString, 255);
WRITE_OCTET_PLATE_DATA.SetDelimiter(";");
if( 0 == WRITE_OCTET_PLATE_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [SampleTrackingTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{{ 332 1 0 "89d378ee_b234_4205_bd98a5a1b046a90e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 333 1 0 "9c144198_3bd0_4d1b_bcfa794e601639fd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 334 1 0 "229d5936_085f_4e22_9856d0cf1df538eb" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 335 1 0 "ccadbaa2_9c10_4099_8fa4a5de979928b3" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SourceVesselType = "96DW";
DestinationVesselType = "384w_Octet";
ProcessStep = "Octet_ProteinA";
SampleID = "NA";
// {{ 337 1 0 "74c79567_85b3_4b86_a200f4d3ff3628b1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 338 1 0 "27e4e50e_a6da_4a78_8fd15062fad4b6c5" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
arrSize=iArrSampleTrackingFileNames.GetSize();
// }} ""
// {{ 339 1 0 "786bb4ef_d9e8_4e6c_a9a2358eb5f8a87e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(fileIndex = 0; fileIndex < arrSize;)
{
fileIndex = fileIndex + 1;
// }} ""
sqlStatement = "SELECT DISTINCT [TRackBC], [TPositionId], [SLabwareId], [SPositionId], [TSumStateDescription]" +
"FROM [ReportMapping]";
// {{ 341 1 0 "9bc6df56_91ac_49c0_8cf2acd9272adbfa" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SAMPLE_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SLabwareId", sourceLabID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SPositionId", sourcePosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_SAMPLE_TRACKING_FILE.Open(iArrSampleTrackingFileNames.ElementAt( fileIndex -1) + " " + "ReportMapping$", hslRead, sqlStatement) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFileNames.ElementAt( fileIndex -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 342 1 0 "4169814a_df96_4eab_af21b397df9fc955" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
while (
   (READ_SAMPLE_TRACKING_FILE.Eof() == 0)
)
{
// }} ""
// {{ 343 1 0 "e4a1d1de_017d_4dc7_83837ad55f5f91d9" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SAMPLE_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 344 1 0 "f9f95621_84c1_4105_908c81e78ed287ea" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 345 1 0 "e5ca46c3_dc31_4c60_8a07423be6f14833" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if ("TRackBC" != "----------")
{
// }} ""
// {{ 346 1 0 "05553225_756e_4732_a9cd85cbe8397589" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "SamplingA_1")
{
// }} ""
// {{ 347 1 0 "e8c0899d_f7a6_48ac_b8fbe72fe91252d9" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(1-1);
// }} ""
// {{ 348 1 0 "05553225_756e_4732_a9cd85cbe8397589" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 349 1 0 "6f903b71_6b08_4cc0_881333df11b5f13e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "SamplingA_2")
{
// }} ""
// {{ 350 1 0 "a0a6b3e8_940c_4511_a7e10eeece3da77a" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(2-1);
// }} ""
// {{ 351 1 0 "6f903b71_6b08_4cc0_881333df11b5f13e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 352 1 0 "4a4f5c52_c5fa_4ecf_8abd79affee69db3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "SamplingA_3")
{
// }} ""
// {{ 353 1 0 "a2ab8c5a_55fa_43f7_a818e2398c165ae3" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(3-1);
// }} ""
// {{ 354 1 0 "4a4f5c52_c5fa_4ecf_8abd79affee69db3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 355 1 0 "2e53ffb7_1a01_4810_b01d7f147b537e0f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "SamplingA_4")
{
// }} ""
// {{ 356 1 0 "1ed072f6_607f_4676_8faac28763a035a0" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(4-1);
// }} ""
// {{ 357 1 0 "2e53ffb7_1a01_4810_b01d7f147b537e0f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 358 1 0 "c6328e40_3535_4f5f_b0504562c3b203ef" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_PLATE_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 359 1 0 "e5ca46c3_dc31_4c60_8a07423be6f14833" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 360 1 0 "f9f95621_84c1_4105_908c81e78ed287ea" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 361 1 0 "4169814a_df96_4eab_af21b397df9fc955" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 362 1 0 "f0f0f5c1_2fea_4455_a3bcde92175a6f25" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SAMPLE_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SAMPLE_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 363 1 0 "51ea721a_b8b2_4ea0_be35a3e1a3e18010" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 364 1 0 "a3df3aa2_1a8d_466c_b25056b74a4ae0ce" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFileNames.ElementAt( fileIndex -1));
// }} ""
// {{ 365 1 0 "786bb4ef_d9e8_4e6c_a9a2358eb5f8a87e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 366 1 0 "7ba25f10_2176_4e52_a194982c17cd4078" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_PLATE_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_PLATE_DATA.RemoveFields();
// }} ""
// {{{ 5 "AddOctetTestPlatePipettingDatatoDB" "End"
}
// }} ""
// {{{ 5 "AddParentalLocationDataToDB" "Begin"
function AddParentalLocationDataToDB( variable iParentalID, variable iCulturePlateBarcode, variable iCulturePlateWellID, variable iPlateType ) void {
// }} ""
private file WRITE_PARENTAL_DATA_TABLE;
private variable time;
private variable date;
// {{ 5 "AddParentalLocationDataToDB" "InitLocals"
// }} ""
// {{ 368 1 0 "b94110b1_62aa_493c_9114cfa446c9fa90" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_PARENTAL_DATA_TABLE.AddField("ParentalID", iParentalID, hslString, 255);
WRITE_PARENTAL_DATA_TABLE.AddField("Date", date, hslString, 255);
WRITE_PARENTAL_DATA_TABLE.AddField("PlateBarcode", iCulturePlateBarcode, hslString, 255);
WRITE_PARENTAL_DATA_TABLE.AddField("WellID", iCulturePlateWellID, hslString, 255);
WRITE_PARENTAL_DATA_TABLE.AddField("experimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_PARENTAL_DATA_TABLE.AddField("PlateID", iPlateType, hslString, 255);
WRITE_PARENTAL_DATA_TABLE.SetDelimiter(";");
if( 0 == WRITE_PARENTAL_DATA_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [ParentalTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{{ 369 1 0 "adbd726b_8d27_4788_aad18e8b82d67597" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 370 1 0 "6fecb701_ed66_4cdb_b0b1e86e4b0976e2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 371 1 0 "01180739_9f95_4d4b_ad9d73ef78c51293" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 372 1 0 "c72397a8_8863_41a8_94f4da401cacce6c" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_PARENTAL_DATA_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 373 1 0 "78427375_ae39_4e2c_846dacf2497fb209" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_PARENTAL_DATA_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_PARENTAL_DATA_TABLE.RemoveFields();
// }} ""
// {{{ 5 "AddParentalLocationDataToDB" "End"
}
// }} ""
// {{{ 5 "TranslateRowCoordinate" "Begin"
private function TranslateRowCoordinate( variable iRowNumber, variable & oRowAlpha ) void {
// }} ""
// {{ 5 "TranslateRowCoordinate" "InitLocals"
oRowAlpha = 0;
// }} ""
// {{ 1180 1 0 "1e47efcb_655a_4a3a_8f566c557ac2d5c4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (iRowNumber == 1)
{
// }} ""
// {{ 1181 1 0 "16caaa72_7e88_4df1_a8f7f6a520f32793" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
oRowAlpha = Translate("A");
// }} ""
// {{ 1182 1 0 "1e47efcb_655a_4a3a_8f566c557ac2d5c4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1183 1 0 "69403274_b28b_4eb4_8003d303ed9633e1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (iRowNumber == 2)
{
// }} ""
// {{ 1184 1 0 "e2c5fb12_83e0_4aba_a3dcd094a8c611cb" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
oRowAlpha = Translate("B");
// }} ""
// {{ 1185 1 0 "69403274_b28b_4eb4_8003d303ed9633e1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1186 1 0 "020d450a_f8cd_4c3e_bb4b1edb3e5f7df6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (iRowNumber == 3)
{
// }} ""
// {{ 1187 1 0 "b0bdeb27_0640_4a5c_a9f4251d65d8f7f6" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
oRowAlpha = Translate("C");
// }} ""
// {{ 1188 1 0 "020d450a_f8cd_4c3e_bb4b1edb3e5f7df6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1189 1 0 "d29eb2c3_b12f_46f4_9b59ba46effde3d6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (iRowNumber == 4)
{
// }} ""
// {{ 1190 1 0 "05c1f1e0_ea66_41d3_9a0675606f1cb250" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
oRowAlpha = Translate("D");
// }} ""
// {{ 1191 1 0 "d29eb2c3_b12f_46f4_9b59ba46effde3d6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1192 1 0 "7cd048b1_9ac6_4404_a14ef917e559fca9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (iRowNumber == 5)
{
// }} ""
// {{ 1193 1 0 "8d1ed008_5023_4ac1_abdf53907ca32dd3" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
oRowAlpha = Translate("E");
// }} ""
// {{ 1194 1 0 "7cd048b1_9ac6_4404_a14ef917e559fca9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1195 1 0 "99c828e7_b997_4b47_bc063c0ac753dc5a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (iRowNumber == 6)
{
// }} ""
// {{ 1196 1 0 "ef5fc081_1c5c_46ff_a619a7c0606e30fb" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
oRowAlpha = Translate("F");
// }} ""
// {{ 1197 1 0 "99c828e7_b997_4b47_bc063c0ac753dc5a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1198 1 0 "abdec3e6_2ac3_46c4_b8f939512d8982e6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (iRowNumber == 7)
{
// }} ""
// {{ 1199 1 0 "15aa9e8e_cc91_45d1_b0e34097de928259" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
oRowAlpha = Translate("G");
// }} ""
// {{ 1200 1 0 "abdec3e6_2ac3_46c4_b8f939512d8982e6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1201 1 0 "4081b291_7d90_4988_8f2f126bfd22bc1e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (iRowNumber == 8)
{
// }} ""
// {{ 1202 1 0 "d362c080_e287_4a60_b85e4c927f9a5390" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
oRowAlpha = Translate("H");
// }} ""
// {{ 1203 1 0 "4081b291_7d90_4988_8f2f126bfd22bc1e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "TranslateRowCoordinate" "End"
}
// }} ""
// {{{ 5 "XAdd96wHitPickMap" "Begin"
private function XAdd96wHitPickMap( variable i96wMapFile, variable irunNum ) void {
// }} ""
private variable pick;
private variable row;
private variable realrow;
private variable sheetCounter;
private variable posID;
private variable col;
private variable realcol;
private variable readCounter;
private variable loopCounter4;
private variable pick2;
private variable sheetNumber;
private variable rowAlpha;
private variable transfectionBarcode;
private file WRITE_TFXN96W_DATA_TO_DB;
// {{ 5 "XAdd96wHitPickMap" "InitLocals"
// }} ""
// {{ 1205 1 0 "e787eb66_e128_4cef_9df342f4d149b111" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_TFXN96W_DATA_TO_DB.AddField("experimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_TFXN96W_DATA_TO_DB.AddField("runNum", irunNum, hslInteger);
WRITE_TFXN96W_DATA_TO_DB.AddField("Transfection96wBarcode", transfectionBarcode, hslString, 255);
WRITE_TFXN96W_DATA_TO_DB.AddField("Transfection96wWellID", posID, hslString, 255);
WRITE_TFXN96W_DATA_TO_DB.AddField("Pick", pick, hslInteger);
WRITE_TFXN96W_DATA_TO_DB.AddField("RunID", SampleTrackingDB_glRunID, hslInteger);
WRITE_TFXN96W_DATA_TO_DB.SetDelimiter(";");
if( 0 == WRITE_TFXN96W_DATA_TO_DB.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [Transfection96wTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{{ 1206 1 0 "aaf98061_5791_4802_af49d1935e8e2b6d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::Init();
// }} ""
// {{{ 1207 1 0 "aedaca53_2095_4bbd_840b08f65f0d8c89" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::OpenFile(i96wMapFile);
// }} ""
// {{{ 1208 1 0 "08d8d251_874a_4e45_8ad0d4fd339c4f2d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetSheetCount(sheetNumber);
// }} ""
// {{ 1209 1 0 "c63caf7d_1c04_43a1_b28300ce204b5f5f" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(sheetCounter = 0; sheetCounter < sheetNumber;)
{
sheetCounter = sheetCounter + 1;
// }} ""
// {{{ 1210 1 0 "e0dd23c9_c72b_4b3f_b2317f54018f7a35" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::SelectSheet(sheetCounter);
// }} ""
// {{{ 1211 1 0 "a11255c3_0be1_4caf_9276b34a8044020c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetSheetName(transfectionBarcode);
// }} ""
// {{ 1212 1 0 "d4329ab6_284a_4590_82a5ea6c83416895" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
col = 2;
// }} ""
// {{ 1213 1 0 "7ab5fc11_d6be_4be6_94351fae29553cc7" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(readCounter = 0; readCounter < 12;)
{
readCounter = readCounter + 1;
// }} ""
// {{ 1214 1 0 "854c01e8_2f4f_4c7e_b160b2d97f859986" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 2;
// }} ""
// {{ 1215 1 0 "c62216fc_bb2a_4ee9_af28231228c8a945" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter4 = 0; loopCounter4 < 8;)
{
loopCounter4 = loopCounter4 + 1;
// }} ""
// {{{ 1216 1 0 "1a1f2d19_c0fc_4bb9_bd87d8bcdd68dbdd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(col, row, pick2);
// }} ""
// {{{ 1217 1 0 "71ed0520_4318_4fbc_9db62d15989f6a35" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
pick = StrFVal(pick2);
// }} ""
// {{ 1218 1 0 "b9fbcb5b_b6cf_4f5d_b5d9afa0eb82699c" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
realrow = row - 1;
// }} ""
// {{ 1219 1 0 "84f4cc5f_a155_49c9_bb2ac81e8a058e99" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
realcol = col - 1;
// }} ""
// {{{ 1220 1 0 "27a73eaa_d712_47a3_bbd90ff0d3d85939" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
TranslateRowCoordinate(realrow, rowAlpha);
// }} ""
// {{{ 1221 1 0 "53d7faab_4a1b_466b_8db8c5866bd2b48f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
posID = StrConcat2(rowAlpha, realcol);
// }} ""
// {{ 1222 1 0 "ebfc69cc_6d64_470e_9b6322adda8d57d1" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_TFXN96W_DATA_TO_DB.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1223 1 0 "b8b0d72e_0ffe_4d34_92c5d72aaea38133" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
row = row + 1;
// }} ""
// {{ 1224 1 0 "c62216fc_bb2a_4ee9_af28231228c8a945" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1225 1 0 "6ac8ed64_4ede_41c2_9ad91990969d1954" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
col = col + 1;
// }} ""
// {{ 1226 1 0 "7ab5fc11_d6be_4be6_94351fae29553cc7" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1227 1 0 "c63caf7d_1c04_43a1_b28300ce204b5f5f" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 1228 1 0 "ffcd31fe_7eda_4cf1_9ba709fd9ea020ac" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::End();
// }} ""
// {{ 1229 1 0 "9eae19f1_09da_4c63_ab4f9fb71340e22b" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_TFXN96W_DATA_TO_DB.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_TFXN96W_DATA_TO_DB.RemoveFields();
// }} ""
// {{{ 5 "XAdd96wHitPickMap" "End"
}
// }} ""
// {{{ 5 "XAddTfxnPlatePipettingDatatoDB" "Begin"
private function XAddTfxnPlatePipettingDatatoDB( variable & iArrSampleTrackingFiles[], variable iCultureVolume, variable iMediaVolume ) void {
// }} ""
private variable previousSourcePosID;
private variable arrSize;
private variable previousSourceBarcode;
private variable sqlStatement;
private variable previousTargetBarcode;
private variable targetPosID;
private variable previousTargetPosID;
private variable arrIndex;
private variable scourcePosID;
private variable statusSummary;
private variable sourceBarcode;
private variable targetBarcode;
private variable time;
private variable date;
private file UPDATE_EXPERIMENT_INFO_TABLE;
private file READ_SAMPLE_TRACKING_FILE;
private file WRITE_HITPICK_DATA;
// {{ 5 "XAddTfxnPlatePipettingDatatoDB" "InitLocals"
// }} ""
// {{ 1570 1 0 "575b1f9e_8d16_4afe_841b072c391e064a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1571 1 0 "cb7bd0b9_ae26_4704_b3c52f3954ab8fb4" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 1572 1 0 "e5341124_5ea0_48c6_afb367953c04a177" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 1573 1 0 "d2a3f727_1051_4a0e_9776ebbe522e3c84" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{{ 1574 1 0 "867bb487_89f4_4cf6_9dfeeafba4fdb4cb" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
sqlStatement = StrConcat8(Translate("UPDATE [ExperimentInfoTable] SET [TfxnPlateRunDate] = '"), date, Translate("' WHERE [ExperimentID] = '"), SampleTrackingDB_glExperimentID, Translate("'"), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 1575 1 0 "128b9771_86e2_45c2_bae5213dee3a337f" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
UPDATE_EXPERIMENT_INFO_TABLE.SetDelimiter(";");
if( 0 == UPDATE_EXPERIMENT_INFO_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1576 1 0 "79731f80_aadf_47f3_b91669559dfa0488" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != UPDATE_EXPERIMENT_INFO_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
UPDATE_EXPERIMENT_INFO_TABLE.RemoveFields();
// }} ""
// {{ 1577 1 0 "b2f24a09_1b54_431a_8790b968de076eb1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1578 1 0 "ec0f6f14_5feb_43b7_a04508208b224535" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_HITPICK_DATA.AddField("experimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_HITPICK_DATA.AddField("TfxnPlateBarcode", sourceBarcode, hslString, 255);
WRITE_HITPICK_DATA.AddField("TfxnPlateWellID", scourcePosID, hslString, 255);
WRITE_HITPICK_DATA.AddField("ClonePixBarcode", targetBarcode, hslString, 255);
WRITE_HITPICK_DATA.AddField("ClonePixWellID", targetPosID, hslString, 255);
WRITE_HITPICK_DATA.AddField("CultureVolume", iCultureVolume, hslString, 255);
WRITE_HITPICK_DATA.AddField("MediaVolume", iMediaVolume, hslString, 255);
WRITE_HITPICK_DATA.AddField("Date", date, hslString, 255);
WRITE_HITPICK_DATA.AddField("RunID", SampleTrackingDB_glRunID, hslInteger);
WRITE_HITPICK_DATA.SetDelimiter(";");
if( 0 == WRITE_HITPICK_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [TfxnPlateCultureTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1579 1 0 "ab7001ff_1963_4b93_8a3ef213e77ab3c9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1580 1 0 "4c0c682d_ef45_4e60_a79d75944e2f1e8d" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
arrSize=iArrSampleTrackingFiles.GetSize();
// }} ""
// {{ 1581 1 0 "f65625ff_20c6_4ab5_b65d5ffd0f958b78" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourceBarcode = Translate("");
// }} ""
// {{ 1582 1 0 "9a90be9e_9664_4ed2_8e690626a83775b0" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetBarcode = Translate("");
// }} ""
// {{ 1583 1 0 "df62b4cb_7fbd_43ba_a9b5f2ec3ec0a65f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourcePosID = Translate("");
// }} ""
// {{ 1584 1 0 "4214a911_7b44_4e5c_8ff0615b58a90908" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetPosID = Translate("");
// }} ""
// {{ 1585 1 0 "0bcec17e_4307_4c77_ab1e531959e4c2a0" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(arrIndex = 0; arrIndex < arrSize;)
{
arrIndex = arrIndex + 1;
// }} ""
// {{ 1586 1 0 "39a753b1_272b_4ea9_876211231c9d2d24" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SAMPLE_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SRackBC", sourceBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SPositionId", scourcePosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_SAMPLE_TRACKING_FILE.Open(iArrSampleTrackingFiles.ElementAt( arrIndex -1) + " " + "ReportMapping$", hslRead, "SELECT DISTINCT [SPositionId], [SRackBC], [TRackBC], [TPositionID], [TSumStateDescription] FROM [ReportMapping]") )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFiles.ElementAt( arrIndex -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 1587 1 0 "73b93edc_e4bd_49b6_bf1b374422dcdd23" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
while (
   (READ_SAMPLE_TRACKING_FILE.Eof() == 0)
)
{
// }} ""
// {{ 1588 1 0 "ea12fd4b_eaf0_4370_94234adfa2e8a322" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SAMPLE_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1589 1 0 "645cd07f_c5b6_477e_8a13c501de263cc1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 1590 1 0 "8ede3020_9e47_495d_aa53c1684600129b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceBarcode != "----------")
{
// }} ""
// {{ 1591 1 0 "fb1d639f_18ba_4e9d_b1459bbe29cd68c3" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_HITPICK_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1592 1 0 "8ede3020_9e47_495d_aa53c1684600129b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1593 1 0 "645cd07f_c5b6_477e_8a13c501de263cc1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1594 1 0 "73b93edc_e4bd_49b6_bf1b374422dcdd23" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1595 1 0 "02552066_2b8e_47c2_8eb12f5957037fbc" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SAMPLE_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SAMPLE_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 1596 1 0 "c494836a_2d5d_4f17_9da1aa318e8ab70b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1597 1 0 "c777ee84_7e30_4008_b226f27f21b99372" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFiles.ElementAt( arrIndex -1));
// }} ""
// {{ 1598 1 0 "0bcec17e_4307_4c77_ab1e531959e4c2a0" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1599 1 0 "8bd60fbf_c361_4f7f_b37a6290b829b070" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_HITPICK_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_HITPICK_DATA.RemoveFields();
// }} ""
// {{{ 5 "XAddTfxnPlatePipettingDatatoDB" "End"
}
// }} ""
// {{{ 5 "XAddOctetTestPlatePipettingDatatoDB_Static" "Begin"
private function XAddOctetTestPlatePipettingDatatoDB_Static( variable & iArrSampleTrackingFileNames[], variable & iArrCellCulturePlateBarcodes[], variable iDilution ) void {
// }} ""
private variable arrSize;
private variable fileIndex;
private variable targetPosID;
private variable sourceLabID;
private variable sourceBarcode;
private variable statusSummary;
private variable targetBarcode;
private variable time;
private variable sourcePosID;
private variable date;
private file WRITE_OCTET_PLATE_DATA;
private file READ_SAMPLE_TRACKING_FILE;
private variable sqlStatement;
// {{ 5 "XAddOctetTestPlatePipettingDatatoDB_Static" "InitLocals"
// }} ""
// {{ 1528 1 0 "f477009c_961e_4316_963eebee5d2dc4cf" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1529 1 0 "1a51f1c2_de3c_499c_9ef27251171654ab" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_PLATE_DATA.AddField("experimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("Date", date, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("TestPlateBarcode", targetBarcode, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("TestPlateWellID", targetPosID, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("CulturePlateBarcode", sourceBarcode, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("CulturePlateWellID", sourcePosID, hslString, 255);
WRITE_OCTET_PLATE_DATA.AddField("Dilution", iDilution, hslFloat);
WRITE_OCTET_PLATE_DATA.AddField("RunID", SampleTrackingDB_glRunID, hslInteger);
WRITE_OCTET_PLATE_DATA.SetDelimiter(";");
if( 0 == WRITE_OCTET_PLATE_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [OctetTestPlateTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{{ 1530 1 0 "d4091a9f_181d_4658_9396d2e8923a451e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 1531 1 0 "e95e74e2_567c_4022_afc5de0373d48fa9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 1532 1 0 "1bed56b1_ac65_4460_88bd55631475affd" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 1533 1 0 "2f790b71_1dda_4757_9e18dae367c47005" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1534 1 0 "0e12c41d_db6d_4c53_b52c4b614f6fa149" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
arrSize=iArrSampleTrackingFileNames.GetSize();
// }} ""
// {{ 1535 1 0 "33ece8b9_15cc_42c3_a2ad8ae21e1c6725" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(fileIndex = 0; fileIndex < arrSize;)
{
fileIndex = fileIndex + 1;
// }} ""
sqlStatement = "SELECT DISTINCT [TRackBC], [TPositionId], [SLabwareId], [SPositionId], [TSumStateDescription]" +
"FROM [ReportMapping]";
// {{ 1537 1 0 "00c77e32_86bb_43e0_b66f328b41ab4906" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SAMPLE_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SLabwareId", sourceLabID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SPositionId", sourcePosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_SAMPLE_TRACKING_FILE.Open(iArrSampleTrackingFileNames.ElementAt( fileIndex -1) + " " + "ReportMapping$", hslRead, sqlStatement) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFileNames.ElementAt( fileIndex -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 1538 1 0 "b0470c1f_1128_4b87_bdf0ef47f252c61e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
while (
   (READ_SAMPLE_TRACKING_FILE.Eof() == 0)
)
{
// }} ""
// {{ 1539 1 0 "79a92790_fc08_43bc_be677a139aeb05a7" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SAMPLE_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1540 1 0 "29c4be15_4fa4_49be_b7cd0c36782503c4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 1541 1 0 "d4976d22_41b6_4e2f_9f72e293c1001e59" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if ("TRackBC" != "----------")
{
// }} ""
// {{ 1542 1 0 "b5e6110e_c2c5_401b_bb23cb7c760dda00" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "GreinerCellstar_1")
{
// }} ""
// {{ 1543 1 0 "52f4a592_1dfa_4816_825fb30b8e9d874d" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(1-1);
// }} ""
// {{ 1544 1 0 "b5e6110e_c2c5_401b_bb23cb7c760dda00" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1545 1 0 "4a20a0e7_2dc1_483f_a1cb0236675dfb90" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "GreinerCellstar_2")
{
// }} ""
// {{ 1546 1 0 "56b55649_880d_4733_a1a2df6ecd676f0b" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(2-1);
// }} ""
// {{ 1547 1 0 "4a20a0e7_2dc1_483f_a1cb0236675dfb90" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1548 1 0 "0fb0bdad_26a0_4358_9cd4cbdf0cc417f8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "GreinerCellstar_3")
{
// }} ""
// {{ 1549 1 0 "b566fc61_fc7d_4684_873cda69c7e25e61" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(3-1);
// }} ""
// {{ 1550 1 0 "0fb0bdad_26a0_4358_9cd4cbdf0cc417f8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1551 1 0 "b0ef75fd_2001_4841_8ebdbb257c18b658" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "GreinerCellstar_4")
{
// }} ""
// {{ 1552 1 0 "21f62f2f_daab_42a8_a4e9495877603f1c" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(4-1);
// }} ""
// {{ 1553 1 0 "b0ef75fd_2001_4841_8ebdbb257c18b658" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1554 1 0 "d73d7128_b092_4f25_9a51fbe482e7ca00" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "GreinerCellstar_5")
{
// }} ""
// {{ 1555 1 0 "ddfceb7c_8943_4589_8757cb5fcc3e56a1" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(5-1);
// }} ""
// {{ 1556 1 0 "d73d7128_b092_4f25_9a51fbe482e7ca00" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1557 1 0 "11edd740_2405_40d5_89602c19b3576dc0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceLabID == "GreinerCellstar_6")
{
// }} ""
// {{ 1558 1 0 "66d3cef9_9b12_4dd4_bcaafdb5e519b970" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
sourceBarcode=iArrCellCulturePlateBarcodes.GetAt(6-1);
// }} ""
// {{ 1559 1 0 "11edd740_2405_40d5_89602c19b3576dc0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1560 1 0 "5077424d_c3f2_4720_bca752ae48d46d62" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_PLATE_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1561 1 0 "d4976d22_41b6_4e2f_9f72e293c1001e59" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1562 1 0 "29c4be15_4fa4_49be_b7cd0c36782503c4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1563 1 0 "b0470c1f_1128_4b87_bdf0ef47f252c61e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1564 1 0 "2236a2dd_b2fc_446d_aae54dc1cd3491e7" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SAMPLE_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SAMPLE_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 1565 1 0 "ec8ca113_0a6a_4f1c_a7e6c89c0bb7406f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1566 1 0 "a7f79d1d_025b_4be9_88b479908287a265" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFileNames.ElementAt( fileIndex -1));
// }} ""
// {{ 1567 1 0 "33ece8b9_15cc_42c3_a2ad8ae21e1c6725" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1568 1 0 "228bd90f_3406_4682_969223c549309bd8" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_PLATE_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_PLATE_DATA.RemoveFields();
// }} ""
// {{{ 5 "XAddOctetTestPlatePipettingDatatoDB_Static" "End"
}
// }} ""
// {{{ 5 "RandomNumberInitialize" "Begin"
function RandomNumberInitialize(  ) void {
// }} ""
private variable num;
private variable date2;
private variable time2;
private variable letter;
private variable length;
private variable loopCounter1;
private variable ascii;
// {{ 5 "RandomNumberInitialize" "InitLocals"
// }} ""
// {{{ 1022 1 0 "fb2e9bed_2012_4a0c_b1d47e188d14f51f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date2 = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 1023 1 0 "37b16636_9af8_4243_8effc5a8bf5c6802" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time2 = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 1024 1 0 "dac021d8_54a2_4b00_bdbd13e61af5ae06" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date2 = date2 + time2;
// }} ""
// {{{ 1025 1 0 "50ce1475_b26a_41f3_beeffb5266bfee7d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
length = StrGetLength(date2);
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{{ 1026 1 0 "623751e8_baa4_423c_a5d27a924076d61b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Length: "), length);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1027 1 0 "589eb759_052d_4c5d_b7451ff3523ae244" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
num = 0;
// }} ""
// {{ 1028 1 0 "7d196a7e_d4fb_4aed_8c26776e1821e2cd" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < length;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{{ 1029 1 0 "cf7ad44c_9580_4bac_a0a4450b50ed8ea9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
letter = StrMid(date2, loopCounter1, 1);
// }} ""
// {{{ 1030 1 0 "f39c2e23_ba61_495e_85d0f4410f0b0c5b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ascii = StrStrToAscii(letter);
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{{ 1031 1 0 "f76682c1_620d_46ac_9291b4167637a697" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Ascii: "), ascii);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1032 1 0 "23f6d3db_372b_4c99_9a8a8f29b020e650" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
num = num + ascii;
// }} ""
// {{ 1033 1 0 "7d196a7e_d4fb_4aed_8c26776e1821e2cd" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 1034 1 0 "c3c8a015_e7b2_45ef_b738805ca36cef26" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MthR01Init(2147483399, 40692, num);
// }} ""
// {{{ 5 "RandomNumberInitialize" "End"
}
// }} ""
// {{{ 5 "AddPassagePlatePipettingDataToDB" "Begin"
function AddPassagePlatePipettingDataToDB( variable & iArrSampleTrackingFiles[], variable & iCultureVolume[], variable & iMediaVolume[], variable & iTargetCellDensity[], variable & iTargetViaCellDensity[], variable & iTargetViability[], variable iDWPsThisTime, variable & iArrBarcodesPassagePlates[], variable iMediaType, variable iMediaLot ) void {
// }} ""
private variable volumeCounter;
private variable targetPosID;
private variable statusSummary;
private variable sourceBarcode;
private variable cultureVolume;
private variable targetBarcode;
private variable time;
private variable sourcePosID;
private variable mediaVolume;
private variable date;
private file READ_TRACKING_FILE;
private file WRITE_PASSAGE_PLATE_DATA;
private variable PlateBarcode;
private variable PlateNumber;
private variable sqlStatement;
private variable row;
private variable PlateColID;
private variable PlatePosID;
private variable loopCounter1;
private variable loopCounter5;
private variable rowAlpha;
private variable sqlone;
private variable TotalVol;
private variable SourceVesselType;
private variable SampleID;
private variable targetVesselType;
private variable ProcessStep;
private variable TCD;
private variable VCD;
private variable Viabillity;
private variable ResultType;
private variable AssayType;
private variable ResultUnits;
private file WRITE_PASSAGE_PLATE_ANALYTICS_TCD;
private file WRITE_PASSAGE_PLATE_ANALYTICS_VCD;
private file WRITE_PASSAGE_PLATE_ANALYTICS_VIA;
// {{ 5 "AddPassagePlatePipettingDataToDB" "InitLocals"
// }} ""
// {{{ 382 1 0 "fd733fe0_9e8f_4b1b_952797a98e80e31e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 383 1 0 "e5654a66_52df_4362_beceff49abf9756f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 384 1 0 "d8f098f7_f85a_4f87_81d44ef011fc2eae" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 385 1 0 "cb9a5078_1f29_4d22_9ffdbbc4bf4449cc" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SourceVesselType = "96DW";
targetVesselType = "96DW";
ProcessStep = "96DW_Passage";
SampleID = "NA";
AssayType = "Passage_Seeding_Target";
// {{ 387 1 0 "574fd6c0_65c3_4176_91f3b5f4a6444981" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
volumeCounter = 1;
// }} ""
// {{ 388 1 0 "580b2ab0_2e28_400b_83abe30e173f40f9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 389 1 0 "9a8386ac_8fbe_4086_8d79989275d0befa" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_PASSAGE_PLATE_DATA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("SampleID", SampleID, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("DateTime", date, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("DestinationBarcode", targetBarcode, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("SourceBarcode", sourceBarcode, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("SourceWell", sourcePosID, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("SourceVesselType", SourceVesselType, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("DestinationWell", targetPosID, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("DestinationVesselType", targetVesselType, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("TotalVol", TotalVol, hslFloat);
WRITE_PASSAGE_PLATE_DATA.AddField("SampleTransferVol", cultureVolume, hslFloat);
WRITE_PASSAGE_PLATE_DATA.AddField("Reagent1Vol", mediaVolume, hslFloat);
WRITE_PASSAGE_PLATE_DATA.AddField("Reagent1ID", iMediaType, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("Reagent1Lot", iMediaLot, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.AddField("ProcessStep", ProcessStep, hslString, 255);
WRITE_PASSAGE_PLATE_DATA.SetDelimiter(";");
if( 0 == WRITE_PASSAGE_PLATE_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [SampleTrackingTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 390 1 0 "d7a9d7ed_f306_4080_99c34f4342df2205" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 391 1 0 "8f73f160_9c53_45dc_ad95ad6af662c9da" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("SampleID", SampleID, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("DateTime", date, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("SampleBarcode", targetBarcode, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("SampleWell", targetPosID, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("SampleVesselType", targetVesselType, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("Result", TCD, hslFloat);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("ResultUnits", ResultUnits, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("ResultType", ResultType, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.AddField("AssayType", AssayType, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.SetDelimiter(";");
if( 0 == WRITE_PASSAGE_PLATE_ANALYTICS_TCD.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 392 1 0 "8e59f2b1_7114_4bff_a1218c84c6f83c44" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("SampleID", SampleID, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("DateTime", date, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("SampleBarcode", targetBarcode, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("SampleWell", targetPosID, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("SampleVesselType", targetVesselType, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("Result", VCD, hslFloat);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("ResultUnits", ResultUnits, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("ResultType", ResultType, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.AddField("AssayType", AssayType, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.SetDelimiter(";");
if( 0 == WRITE_PASSAGE_PLATE_ANALYTICS_VCD.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 393 1 0 "bd921448_d09d_4dfe_aa6ce66c9cf4bc19" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("SampleID", SampleID, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("DateTime", date, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("SampleBarcode", targetBarcode, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("SampleWell", targetPosID, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("SampleVesselType", targetVesselType, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("Result", Viabillity, hslFloat);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("ResultUnits", ResultUnits, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("ResultType", ResultType, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.AddField("AssayType", AssayType, hslString, 255);
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.SetDelimiter(";");
if( 0 == WRITE_PASSAGE_PLATE_ANALYTICS_VIA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 394 1 0 "6956d6cf_5f88_4711_ac822f34c0929c66" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(PlateNumber = 0; PlateNumber < iDWPsThisTime;)
{
PlateNumber = PlateNumber + 1;
// }} ""
// {{ 395 1 0 "9b2ec8c3_759c_47c8_8fd5008126f89ef9" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 1;
// }} ""
// {{ 396 1 0 "5406f09f_6552_45e3_9de7cb848e839b85" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
PlateColID = 1;
// }} ""
// {{ 397 1 0 "83d58d7d_691b_4d57_b50f05f7bed07fbf" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
PlateBarcode=iArrBarcodesPassagePlates.GetAt(PlateNumber-1);
// }} ""
// {{ 398 1 0 "011a0945_a85b_4fda_a9508629158228ca" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter5 = 0; loopCounter5 < 12;)
{
loopCounter5 = loopCounter5 + 1;
// }} ""
// {{ 399 1 0 "526a7f1d_62bd_4040_be494a6def1aca9c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < 8;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{{ 400 1 0 "8af988a8_913f_4bf6_8dac055c6877d437" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
TranslateRowCoordinate(row, rowAlpha);
// }} ""
// {{{ 401 1 0 "3ae1f54e_df37_4f27_a5fabbd3b26808e6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlatePosID = StrConcat2(rowAlpha, PlateColID);
// }} ""
// {{ 402 1 0 "ba0ed2f9_f262_4db2_91dff414a26ceee7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 403 1 0 "5791bd43_2746_4ee6_b6865a59d2c73876" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
sqlone = Translate("SELECT DISTINCT [SPositionId], [SRackBC], [TRackBC], [TPositionID], [TSumStateDescription] FROM [ReportMapping] WHERE [TRackBC] = '");
// }} ""
// {{{ 404 1 0 "e00affd9_e824_4b44_8204925ad760f67e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
sqlStatement = StrConcat8(sqlone, PlateBarcode, Translate("' AND [TPositionID] = '"), PlatePosID, Translate("'"), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 405 1 0 "5fc4540a_253c_4363_9e9ce6399c9b8dbc" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_TRACKING_FILE.AddField("SRackBC", sourceBarcode, hslString, 255);
READ_TRACKING_FILE.AddField("SPositionId", sourcePosID, hslString, 255);
READ_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_TRACKING_FILE.Open(iArrSampleTrackingFiles.ElementAt( PlateNumber -1) + " " + "ReportMapping$", hslRead, sqlStatement) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFiles.ElementAt( PlateNumber -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 406 1 0 "855ffb4d_218e_4038_8d5a3b81438d6050" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 407 1 0 "1bf0efa8_ec19_4632_bf5e84199a3fd742" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 408 1 0 "8bc9d811_571e_4e01_823b9cd3bf62153e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceBarcode != "----------")
{
// }} ""
// {{ 409 1 0 "f5b06bb8_bb68_4275_a3e7a8f77cbd4340" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
cultureVolume = iCultureVolume.ElementAt( volumeCounter -1);
// }} ""
// {{ 410 1 0 "113811fe_ba56_45f2_bede1940f6287de0" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
mediaVolume = iMediaVolume.ElementAt( volumeCounter -1);
// }} ""
// {{ 411 1 0 "adfda515_c5e9_4057_b53db840e1d80948" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
TotalVol = mediaVolume + cultureVolume;
// }} ""
// {{ 412 1 0 "008940a7_9a1d_48ef_91824c2ebc536bd8" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
TCD = iTargetCellDensity.ElementAt( volumeCounter -1);
// }} ""
// {{ 413 1 0 "d5b7e08a_2bdc_45bf_9f63eebfb8159da9" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
VCD = iTargetViaCellDensity.ElementAt( volumeCounter -1);
// }} ""
// {{ 414 1 0 "b80be0f3_f6a6_41a9_8d616e5f84647e03" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Viabillity = iTargetViability.ElementAt( volumeCounter -1);
// }} ""
// {{ 415 1 0 "0049c47f_9ace_4e80_a30129bdae22daa7" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
volumeCounter = volumeCounter + 1;
// }} ""
// {{ 416 1 0 "7b7d6658_9c42_4b4a_9dc17334404f68ad" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_PASSAGE_PLATE_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
ResultUnits = "Num Total Cells";
ResultType = "TCD";
// {{ 418 1 0 "b8676fbd_fb3e_4126_aa48e80620788dc6" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_PASSAGE_PLATE_ANALYTICS_TCD.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
ResultUnits = "Num Viable Cells";
ResultType = "VCD";
// {{ 420 1 0 "6fc146af_bfd0_4b70_af6f80e30e73bfff" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_PASSAGE_PLATE_ANALYTICS_VCD.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
ResultUnits = "Viability";
ResultType = "%";
// {{ 422 1 0 "98600eeb_a3c3_4157_8bb7f773c1b5728a" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_PASSAGE_PLATE_ANALYTICS_VIA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 423 1 0 "8bc9d811_571e_4e01_823b9cd3bf62153e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 424 1 0 "1bf0efa8_ec19_4632_bf5e84199a3fd742" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 425 1 0 "de89b717_04b5_4b6f_a760502f20ae5960" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 426 1 0 "619808ef_4dd2_4071_81328346635ce60d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (row < 8)
{
// }} ""
// {{ 427 1 0 "cc332034_2145_40de_a252034302f6f40c" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
row = row + 1;
// }} ""
// {{ 428 1 0 "619808ef_4dd2_4071_81328346635ce60d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 429 1 0 "135eea4a_0e69_4b12_b1011d492f22d3be" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 1;
// }} ""
// {{ 430 1 0 "619808ef_4dd2_4071_81328346635ce60d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 431 1 0 "526a7f1d_62bd_4040_be494a6def1aca9c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 432 1 0 "c3e1750b_4fe4_45c3_b979e835fc14b818" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateColID < 12)
{
// }} ""
// {{ 433 1 0 "7edb235e_1e5f_484a_b9661795295fd6e9" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
PlateColID = PlateColID + 1;
// }} ""
// {{ 434 1 0 "c3e1750b_4fe4_45c3_b979e835fc14b818" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 435 1 0 "50c09ea2_651a_4c56_a910f7b344501222" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
PlateColID = 1;
// }} ""
// {{ 436 1 0 "c3e1750b_4fe4_45c3_b979e835fc14b818" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 437 1 0 "011a0945_a85b_4fda_a9508629158228ca" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 438 1 0 "7e998110_48a0_4d82_8ea01ae58caf6e5e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 439 1 0 "7137cc3b_4a1a_4753_bb54abae46ff5e36" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFiles.ElementAt( PlateNumber -1));
// }} ""
// {{ 440 1 0 "6956d6cf_5f88_4711_ac822f34c0929c66" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 441 1 0 "70bf38ad_711f_4e70_9c7d4cca808123b9" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_PASSAGE_PLATE_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_PASSAGE_PLATE_DATA.RemoveFields();
// }} ""
// {{ 442 1 0 "0fc2a8b1_4bed_406d_8c73cec8e3c2e8f9" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_PASSAGE_PLATE_ANALYTICS_TCD.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_PASSAGE_PLATE_ANALYTICS_TCD.RemoveFields();
// }} ""
// {{ 443 1 0 "0b89db25_5234_445c_930e936ed9cf6ff1" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_PASSAGE_PLATE_ANALYTICS_VCD.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_PASSAGE_PLATE_ANALYTICS_VCD.RemoveFields();
// }} ""
// {{ 444 1 0 "d1205265_4c78_4371_ae6eae27079a4c31" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_PASSAGE_PLATE_ANALYTICS_VIA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_PASSAGE_PLATE_ANALYTICS_VIA.RemoveFields();
// }} ""
// {{{ 5 "AddPassagePlatePipettingDataToDB" "End"
}
// }} ""
// {{{ 5 "AddTerminalPlatePipettingDataToDB" "Begin"
function AddTerminalPlatePipettingDataToDB( variable & iArrSampleTrackingFiles[], variable & iCultureVolume[], variable & iMediaVolume[], variable & iTargetCellDensity[], variable & iTargetViaCellDensity[], variable & iTargetViability[], variable iDWPsThisTime, variable & iArrBarcodesTerminalPlates[], variable iMediaType, variable iMediaLot ) void {
// }} ""
private variable PlateNumber;
private variable PlateBarcode;
private variable sqlStatement;
private variable row;
private variable volumeCounter;
private variable targetPosID;
private variable PlateColID;
private variable sqlone;
private variable loopCounter1;
private variable PlatePosID;
private variable statusSummary;
private variable sourceBarcode;
private variable targetBarcode;
private variable cultureVolume;
private variable loopCounter5;
private variable time;
private variable rowAlpha;
private variable sourcePosID;
private variable mediaVolume;
private variable date;
private file READ_TRACKING_FILE;
private file WRITE_TERMINAL_PLATE_DATA;
private variable ProcessStep;
private variable SourceVesselType;
private variable TCD;
private variable VCD;
private variable SampleID;
private variable ResultType;
private variable AssayType;
private variable ResultUnits;
private variable targetVesselType;
private variable Viabillity;
private file WRITE_TERMINAL_PLATE_ANALYTICS_VCD;
private file WRITE_TERMINAL_PLATE_ANALYTICS_VIA;
private file WRITE_TERMINAL_PLATE_ANALYTICS_TCD;
private variable TotalVol;
private dialog dialogHandleDD2439C6EED04fefAC6A86FAE4A0C759;
// {{ 5 "AddTerminalPlatePipettingDataToDB" "InitLocals"
// }} ""
// {{ 446 1 0 "137cd760_a407_4c1a_b3114e1c8c55c3e4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 447 1 0 "001d0599_039e_4aaf_a2bb026ca6a6ecfe" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 448 1 0 "045ebb31_347b_4612_b53939251371bf54" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 449 1 0 "15c8ffba_771c_4775_862bbf8160c0a171" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 450 1 0 "e73a4fd7_0bb8_4777_9edcef0ec80d0da7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SourceVesselType = "96DW";
targetVesselType = "96DW";
ProcessStep = "96DW_Terminal_Setup";
SampleID = "NA";
AssayType = "Terminal_Seeding_Target";
// {{ 452 1 0 "34e0a4e6_9da3_48b1_ac4f5e40d5af6428" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
volumeCounter = 1;
// }} ""
// {{ 453 1 0 "309ffc78_1192_486a_9d041b209a660f45" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 454 1 0 "953eab02_e060_4c40_83fd1cad5980b011" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 455 1 0 "2b40019c_5ba1_478d_b3b7b9130ef0f69c" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_TERMINAL_PLATE_DATA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("SampleID", SampleID, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("DateTime", date, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("DestinationBarcode", targetBarcode, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("SourceBarcode", sourceBarcode, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("SourceWell", sourcePosID, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("DestinationWell", targetPosID, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("SourceVesselType", SourceVesselType, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("DestinationVesselType", targetVesselType, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("TotalVol", TotalVol, hslFloat);
WRITE_TERMINAL_PLATE_DATA.AddField("SampleTransferVol", cultureVolume, hslFloat);
WRITE_TERMINAL_PLATE_DATA.AddField("Reagent1Vol", mediaVolume, hslFloat);
WRITE_TERMINAL_PLATE_DATA.AddField("Reagent1ID", iMediaType, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("Reagent1Lot", iMediaLot, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.AddField("ProcessStep", ProcessStep, hslString, 255);
WRITE_TERMINAL_PLATE_DATA.SetDelimiter(";");
if( 0 == WRITE_TERMINAL_PLATE_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [SampleTrackingTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 456 1 0 "e80ced04_fddb_4a27_9111048f85f288ef" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 457 1 0 "c9a1f4a4_a057_4055_be50503d40a5bd01" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("SampleID", SampleID, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("DateTime", date, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("SampleBarcode", targetBarcode, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("SampleWell", targetPosID, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("SampleVesselType", targetVesselType, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("Result", TCD, hslFloat);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("ResultUnits", ResultUnits, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("ResultType", ResultType, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.AddField("AssayType", AssayType, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.SetDelimiter(";");
if( 0 == WRITE_TERMINAL_PLATE_ANALYTICS_TCD.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 458 1 0 "9b778fe9_5ec8_4992_a9453a8ddfce9bfb" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("SampleID", SampleID, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("DateTime", date, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("SampleBarcode", targetBarcode, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("SampleWell", targetPosID, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("SampleVesselType", targetVesselType, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("Result", VCD, hslFloat);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("ResultUnits", ResultUnits, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("ResultType", ResultType, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.AddField("AssayType", AssayType, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.SetDelimiter(";");
if( 0 == WRITE_TERMINAL_PLATE_ANALYTICS_VCD.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 459 1 0 "8e8a59d3_9d5e_4956_99bc87a77047f6ba" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("SampleID", SampleID, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("DateTime", date, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("SampleBarcode", targetBarcode, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("SampleWell", targetPosID, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("SampleVesselType", targetVesselType, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("Result", Viabillity, hslFloat);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("ResultUnits", ResultUnits, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("ResultType", ResultType, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.AddField("AssayType", AssayType, hslString, 255);
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.SetDelimiter(";");
if( 0 == WRITE_TERMINAL_PLATE_ANALYTICS_VIA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 460 1 0 "f7a66c2b_8905_433c_9345fa43fce97751" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 461 1 0 "c327c306_9ed2_4d17_ade2b4d8ec77dac0" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(PlateNumber = 0; PlateNumber < iDWPsThisTime;)
{
PlateNumber = PlateNumber + 1;
// }} ""
// {{ 462 1 0 "679d59ab_3b31_422c_b4f1106308d5e46a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 1;
// }} ""
// {{ 463 1 0 "4f53b0ac_6a5f_4013_942314b679e50284" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
PlateColID = 1;
// }} ""
// {{ 464 1 0 "34bdaa63_f66d_467b_999de902fe1c4130" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
PlateBarcode=iArrBarcodesTerminalPlates.GetAt(PlateNumber-1);
// }} ""
// {{ 465 1 0 "36e8ac12_7b4d_4579_89181f53e62d90f6" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter5 = 0; loopCounter5 < 12;)
{
loopCounter5 = loopCounter5 + 1;
// }} ""
// {{ 466 1 0 "9d947139_ee90_47a6_8baa03ea7362e596" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < 8;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{{ 467 1 0 "cd97fd5f_bbbb_4605_836439aef94bac32" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
TranslateRowCoordinate(row, rowAlpha);
// }} ""
// {{{ 468 1 0 "63ada72b_88b0_4602_a921b21efd796f27" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlatePosID = StrConcat2(rowAlpha, PlateColID);
// }} ""
// {{ 469 1 0 "0e3ab693_25c5_4148_ba7bcf538d2bf7e4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 470 1 0 "255abede_d929_4d93_85a65b7e8c93f961" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
sqlone = Translate("SELECT DISTINCT [SPositionId], [SRackBC], [TRackBC], [TPositionID], [TSumStateDescription] FROM [ReportMapping] WHERE [TRackBC] = '");
// }} ""
// {{{ 471 1 0 "b77ff215_9cca_46e1_b8afb1d89184f674" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
sqlStatement = StrConcat8(sqlone, PlateBarcode, Translate("' AND [TPositionID] = '"), PlatePosID, Translate("'"), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 472 1 0 "96f38163_08e3_4bec_97a6e2e33343b565" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_TRACKING_FILE.AddField("SRackBC", sourceBarcode, hslString, 255);
READ_TRACKING_FILE.AddField("SPositionId", sourcePosID, hslString, 255);
READ_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_TRACKING_FILE.Open(iArrSampleTrackingFiles.ElementAt( PlateNumber -1) + " " + "ReportMapping$", hslRead, sqlStatement) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFiles.ElementAt( PlateNumber -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 473 1 0 "ccccc75e_d332_4bbc_abd6ddad1cf5fbba" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 474 1 0 "ac4f7016_5e48_4959_99129d591e4980b4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 475 1 0 "844aac11_879d_41df_be49620b01c885ef" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceBarcode != "----------")
{
// }} ""
// {{ 476 1 0 "9ea9d14c_c099_44a0_93d63033f9dd67ff" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
cultureVolume = iCultureVolume.ElementAt( volumeCounter -1);
// }} ""
// {{ 477 1 0 "227a255d_f64b_4f40_87f17e53799f4b90" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
mediaVolume = iMediaVolume.ElementAt( volumeCounter -1);
// }} ""
// {{ 478 1 0 "fb50f1d0_4f6d_418e_a28eaac665452da9" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
TotalVol = mediaVolume + cultureVolume;
// }} ""
// {{ 479 1 0 "7a722e0c_3d7c_4d27_8675f82f898944a6" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
TCD = iTargetCellDensity.ElementAt( volumeCounter -1);
// }} ""
// {{ 480 1 0 "73d26a38_e2af_43be_a84bbf3ff125d016" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
VCD = iTargetViaCellDensity.ElementAt( volumeCounter -1);
// }} ""
// {{ 481 1 0 "1178bd8e_17f9_4a3b_bb8b91422b0f3ceb" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Viabillity = iTargetViability.ElementAt( volumeCounter -1);
// }} ""
// {{ 482 1 0 "193bf0ce_f659_4f14_bc862e156d3ffa9d" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
volumeCounter = volumeCounter + 1;
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 483 1 0 "995b9bdf_2011_47da_97b41cf23c137be7" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleDD2439C6EED04fefAC6A86FAE4A0C759.SetOutput(Translate("date - "), date, "\n", Translate("targetBarcode - "), targetBarcode, "\n", Translate("targetPosID - "), targetPosID, "\n", Translate("targetVesselType - "), targetVesselType, "\n", Translate("sourceBarcode - "), sourceBarcode, "\n", Translate("sourcePosID - "), sourcePosID, "\n", Translate("sourceVesselType - "), SourceVesselType, "\n", Translate("TotalVol - "), TotalVol, "\n", Translate("CultureVol - "), cultureVolume, "\n", Translate("mediaVolume - "), mediaVolume, "\n", Translate("iMediaType - "), iMediaType, "\n", Translate("iMediaLot - "), iMediaLot, "\n", Translate("ProcessStep - "), ProcessStep);
dialogHandleDD2439C6EED04fefAC6A86FAE4A0C759.ShowOutput(Translate("Output"), hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 484 1 0 "a4fc511b_95cb_40a5_8780e3bffc882eea" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_TERMINAL_PLATE_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
ResultUnits = "Num Total Cells";
ResultType = "TCD";
// {{ 486 1 0 "64709588_c863_4a09_bcf89e7132b9e9c4" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_TERMINAL_PLATE_ANALYTICS_TCD.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
ResultUnits = "Num Viable Cells";
ResultType = "VCD";
// {{ 488 1 0 "c0a3f469_4af4_414c_bd68ce340a6795f9" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_TERMINAL_PLATE_ANALYTICS_VCD.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
ResultUnits = "Viability";
ResultType = "%";
// {{ 490 1 0 "475db9d6_76c5_4f6e_9d19676ed19856cf" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_TERMINAL_PLATE_ANALYTICS_VIA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 491 1 0 "844aac11_879d_41df_be49620b01c885ef" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 492 1 0 "ac4f7016_5e48_4959_99129d591e4980b4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 493 1 0 "d1f4101f_8614_4fe7_a2ef8a0f395f7e2f" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 494 1 0 "68e09a92_07a4_4941_b1a0e608865e5525" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (row < 8)
{
// }} ""
// {{ 495 1 0 "efec8dc5_70bb_4f4a_b5c7689031f6d1ab" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
row = row + 1;
// }} ""
// {{ 496 1 0 "68e09a92_07a4_4941_b1a0e608865e5525" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 497 1 0 "9b9cc62c_2325_4b29_a8ed055581036f66" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 1;
// }} ""
// {{ 498 1 0 "68e09a92_07a4_4941_b1a0e608865e5525" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 499 1 0 "9d947139_ee90_47a6_8baa03ea7362e596" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 500 1 0 "3fa77c07_d113_4894_b3dc45cbb100c052" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateColID < 12)
{
// }} ""
// {{ 501 1 0 "b689c907_24fd_43d7_83b64a8e611ed9fd" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
PlateColID = PlateColID + 1;
// }} ""
// {{ 502 1 0 "3fa77c07_d113_4894_b3dc45cbb100c052" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 503 1 0 "af638bd4_e711_4ff0_b44f61926ee9927a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
PlateColID = 1;
// }} ""
// {{ 504 1 0 "3fa77c07_d113_4894_b3dc45cbb100c052" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 505 1 0 "36e8ac12_7b4d_4579_89181f53e62d90f6" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 506 1 0 "681aa481_0b7c_4cfc_aad662b5eb9f9035" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 507 1 0 "745cde6c_9554_41c6_b0d7c8512b5f05ac" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFiles.ElementAt( PlateNumber -1));
// }} ""
// {{ 508 1 0 "c327c306_9ed2_4d17_ade2b4d8ec77dac0" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 509 1 0 "25b65471_0d08_48e3_837fb26a982fc332" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_TERMINAL_PLATE_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_TERMINAL_PLATE_DATA.RemoveFields();
// }} ""
// {{ 510 1 0 "b9aab468_86ad_4bd4_945489230cd06b8c" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_TERMINAL_PLATE_ANALYTICS_TCD.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_TERMINAL_PLATE_ANALYTICS_TCD.RemoveFields();
// }} ""
// {{ 511 1 0 "8b935fe4_8290_4e04_9e53b824a8b763dc" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_TERMINAL_PLATE_ANALYTICS_VCD.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_TERMINAL_PLATE_ANALYTICS_VCD.RemoveFields();
// }} ""
// {{ 512 1 0 "a384bf7e_5d86_4989_b8aef4fda72c38dd" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_TERMINAL_PLATE_ANALYTICS_VIA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_TERMINAL_PLATE_ANALYTICS_VIA.RemoveFields();
// }} ""
// {{{ 5 "AddTerminalPlatePipettingDataToDB" "End"
}
// }} ""
// {{{ 5 "AddFeedPipettingDataToDB" "Begin"
function AddFeedPipettingDataToDB( variable & iArrSampleTrackingFiles[], variable ipartAvol, variable ipartBvol, variable ipartAfeedtype, variable ipartAfeedlot, variable ipartBfeedtype, variable ipartBfeedlot ) void {
// }} ""
private variable arrSize;
private variable fileIndex;
private variable statusSummary;
private variable targetBarcode;
private variable time;
private variable date;
private file READ_TRACKING_FILE;
private file WRITE_FEEDING_DATA;
private variable targetPosID;
private variable SourceVesselType;
private variable TotalVol;
private variable SourceBarcode;
private variable SourcePosID;
private variable ProcessStep;
private variable sampleVol;
private variable targetVesselType;
private variable SampleID;
// {{ 5 "AddFeedPipettingDataToDB" "InitLocals"
// }} ""
// {{{ 188 1 0 "5e5794f7_8d12_49a6_b4a0ba7ec5b20b59" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 189 1 0 "b4839921_797c_4c10_9f8c0f8c17347f36" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 190 1 0 "1b1d979f_9488_45ab_a737254c559f227c" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 191 1 0 "92ec1ea2_2c21_4b9e_ad809449bcd38f72" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SourceVesselType = "Reservoir";
SourceBarcode = "NA";
SourcePosID = "NA";
sampleVol = 0.0;
targetVesselType = "96DW";
ProcessStep = "96DW_Feed";
SampleID = "NA";
// {{ 193 1 0 "ac7ca23c_1b08_4be8_abda7e16cd389afe" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
TotalVol = ipartAvol + ipartBvol;
// }} ""
// {{ 194 1 0 "de7b37a9_9a41_4f93_b60c56f3b34984e4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 195 1 0 "f01e671c_63bc_415c_982eee1f49aa18d1" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_FEEDING_DATA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_FEEDING_DATA.AddField("SampleID", SampleID, hslString, 255);
WRITE_FEEDING_DATA.AddField("DateTime", date, hslString, 255);
WRITE_FEEDING_DATA.AddField("SourceBarcode", SourceBarcode, hslString, 255);
WRITE_FEEDING_DATA.AddField("SourceWell", SourcePosID, hslString, 255);
WRITE_FEEDING_DATA.AddField("SourceVesselType", SourceVesselType, hslString, 255);
WRITE_FEEDING_DATA.AddField("DestinationBarcode", targetBarcode, hslString, 255);
WRITE_FEEDING_DATA.AddField("DestinationWell", targetPosID, hslString, 255);
WRITE_FEEDING_DATA.AddField("DestinationVesselType", targetVesselType, hslString, 255);
WRITE_FEEDING_DATA.AddField("Reagent1Vol", ipartAvol, hslFloat);
WRITE_FEEDING_DATA.AddField("TotalVol", TotalVol, hslFloat);
WRITE_FEEDING_DATA.AddField("SampleTransferVol", sampleVol, hslFloat);
WRITE_FEEDING_DATA.AddField("Reagent2Vol", ipartBvol, hslFloat);
WRITE_FEEDING_DATA.AddField("Reagent1ID", ipartAfeedtype, hslString, 255);
WRITE_FEEDING_DATA.AddField("Reagent1Lot", ipartAfeedlot, hslString, 255);
WRITE_FEEDING_DATA.AddField("Reagent2ID", ipartBfeedtype, hslString, 255);
WRITE_FEEDING_DATA.AddField("Reagent2Lot", ipartBfeedlot, hslString, 255);
WRITE_FEEDING_DATA.AddField("ProcessStep", ProcessStep, hslString, 255);
WRITE_FEEDING_DATA.SetDelimiter(";");
if( 0 == WRITE_FEEDING_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [SampleTrackingTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 196 1 0 "5b7f7c35_036b_4563_84e6811c431667dc" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 197 1 0 "364f6929_fe76_421f_a8e1ce3229c8eaef" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
arrSize=iArrSampleTrackingFiles.GetSize();
// }} ""
// {{ 198 1 0 "b679bf40_af9e_4ec2_af1e08933c11a550" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(fileIndex = 0; fileIndex < arrSize;)
{
fileIndex = fileIndex + 1;
// }} ""
// {{ 199 1 0 "1575b57f_fcea_4bef_90eda9c67ed61546" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_TRACKING_FILE.Open(iArrSampleTrackingFiles.ElementAt( fileIndex -1) + " " + "ReportMapping$", hslRead, "SELECT DISTINCT [TRackBC], [TPositionID], [TSumStateDescription] FROM [ReportMapping]") )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFiles.ElementAt( fileIndex -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 200 1 0 "8b2f2f0a_b6e8_4837_8b064d3fb9d2d49d" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
while (
   (READ_TRACKING_FILE.Eof() == 0)
)
{
// }} ""
// {{ 201 1 0 "9e833d55_57be_403f_92377af68f775a10" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 202 1 0 "1889fc87_0bc5_4b4e_b08fca7accb47637" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 203 1 0 "3bbdec16_71d1_43f3_89c8627d0108003d" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_FEEDING_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 204 1 0 "1889fc87_0bc5_4b4e_b08fca7accb47637" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 205 1 0 "8b2f2f0a_b6e8_4837_8b064d3fb9d2d49d" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 206 1 0 "210e63d0_56d1_48ff_ab43e71710823cd5" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 207 1 0 "ed0f9944_02ff_4427_9b0e6fcfd0c06441" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 208 1 0 "8d601bd1_5126_452d_9e46172c2c402a20" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFiles.ElementAt( fileIndex -1));
// }} ""
// {{ 209 1 0 "b679bf40_af9e_4ec2_af1e08933c11a550" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 210 1 0 "fe74f888_8904_41fa_b9f5d44e14d6fff6" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_FEEDING_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_FEEDING_DATA.RemoveFields();
// }} ""
// {{{ 5 "AddFeedPipettingDataToDB" "End"
}
// }} ""
// {{{ 5 "AddParentalSummaryDataToDB" "Begin"
function AddParentalSummaryDataToDB( variable iParentalID, variable iConfluenceLimit, variable iNumWellsAbove, variable iNumWellsPicked ) void {
// }} ""
private variable time;
private variable date;
private file WRITE_PARENTAL_SUMMARY_DATA_TABLE;
// {{ 5 "AddParentalSummaryDataToDB" "InitLocals"
// }} ""
// {{ 375 1 0 "3bc040f9_f874_4488_9ca49c12c86c49f5" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_PARENTAL_SUMMARY_DATA_TABLE.AddField("ParentalID", iParentalID, hslString, 255);
WRITE_PARENTAL_SUMMARY_DATA_TABLE.AddField("Date", date, hslString, 255);
WRITE_PARENTAL_SUMMARY_DATA_TABLE.AddField("ConfluenceLimit", iConfluenceLimit, hslString, 255);
WRITE_PARENTAL_SUMMARY_DATA_TABLE.AddField("NumWellsAboveConfLim", iNumWellsAbove, hslString, 255);
WRITE_PARENTAL_SUMMARY_DATA_TABLE.AddField("NumWellsPicked", iNumWellsPicked, hslString, 255);
WRITE_PARENTAL_SUMMARY_DATA_TABLE.AddField("experimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_PARENTAL_SUMMARY_DATA_TABLE.SetDelimiter(";");
if( 0 == WRITE_PARENTAL_SUMMARY_DATA_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [ParentalSummaryTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{{ 376 1 0 "41254a6a_f66d_48d7_b6aa348b71c0d5e3" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 377 1 0 "ad91c24f_a1ca_4add_9639107102b97a47" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 378 1 0 "1b955c53_0fba_4dd3_9cb1819060e3dff1" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 379 1 0 "10894c7e_787e_4058_bb1182fbf135f6f4" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_PARENTAL_SUMMARY_DATA_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 380 1 0 "bb181169_7c03_4150_9f8353b84dc5012a" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_PARENTAL_SUMMARY_DATA_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_PARENTAL_SUMMARY_DATA_TABLE.RemoveFields();
// }} ""
// {{{ 5 "AddParentalSummaryDataToDB" "End"
}
// }} ""
// {{{ 5 "AddOctetProAMethodToDB" "Begin"
function AddOctetProAMethodToDB( variable iOctetPlateBarcode, variable iReadType, variable iAssayDay, variable iDilution, variable iBiosensorLot, variable iBiosensorType, variable iOctetMethodFile, variable iOctetDataDir, variable iOctetiniFile, variable iOctetSN ) void {
// }} ""
private variable time;
private variable date;
private file WRITE_OCTET_METHOD_TABLE;
private variable AssayType;
private variable SampleVesselType;
// {{ 5 "AddOctetProAMethodToDB" "InitLocals"
// }} ""
// {{ 251 1 0 "90b81dde_41d4_4a6e_ba7287f7f664df37" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_METHOD_TABLE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("DateTime", date, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("SampleBarcode", iOctetPlateBarcode, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("SampleVesselType", SampleVesselType, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("AssayType", AssayType, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("IntermediateOrFinal", iReadType, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("AssayDay", iAssayDay, hslInteger);
WRITE_OCTET_METHOD_TABLE.AddField("Dilution", iDilution, hslFloat);
WRITE_OCTET_METHOD_TABLE.AddField("AssaySpecificLotNum1", iBiosensorLot, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("AssaySpecificLotNum1Type", iBiosensorType, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("DeviceSerialNumber", iOctetSN, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("ResultsLocation1", iOctetMethodFile, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("ResultsLocation2", iOctetDataDir, hslString, 255);
WRITE_OCTET_METHOD_TABLE.AddField("ResultsLocation3", iOctetiniFile, hslString, 255);
WRITE_OCTET_METHOD_TABLE.SetDelimiter(";");
if( 0 == WRITE_OCTET_METHOD_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticMethodTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{{ 252 1 0 "e7caa2cc_1ffe_4d9f_8959b8f34967be92" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 253 1 0 "48a18e51_1716_4366_9465c1d7c9d7ebd1" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 254 1 0 "ef8f5886_1168_4a2c_bf67b2a4bc57d5de" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 255 1 0 "36933dd7_f4ac_4057_901d5803e2afdb06" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SampleVesselType = "384w_Octet";
AssayType = "Octet_ProteinA";
// {{ 257 1 0 "f0911712_3af0_4917_9fb40ee068e51c91" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_METHOD_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 258 1 0 "3d41f0cf_4c99_4cf3_81597b313091c657" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_METHOD_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_METHOD_TABLE.RemoveFields();
// }} ""
// {{{ 5 "AddOctetProAMethodToDB" "End"
}
// }} ""
// {{{ 5 "PlatesInLiconic" "Begin"
function PlatesInLiconic( variable PlateType, variable InventoryType, variable & NumOfPlates ) void {
// }} ""
private variable number;
private variable loopCounter1;
private variable mySQLCommand;
private variable myFileName;
private variable myTableName;
private file QUERY_LICONIC_DB;
// {{ 5 "PlatesInLiconic" "InitLocals"
NumOfPlates = 0;
// }} ""
// {{ 1006 1 0 "ee7eb14f_80e9_45a4_9811f60b1b6fad12" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
myFileName = Translate("C:\\Program Files (x86)\\HAMILTON\\System\\MedImmune System Files\\MedImmune_STXManagment.mdb");
// }} ""
// {{ 1007 1 0 "91c14511_7af3_4660_8929e257a42d3528" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
myTableName = Translate("STXCarouselTable");
// }} ""
// {{ 1008 1 0 "d5e18f84_7304_4aa2_a1feddc415338c91" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (InventoryType == 1)
{
// }} ""
// {{ 1009 1 0 "1dbfc2c0_e3c6_4e09_93e4eed2328915f9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1010 1 0 "62d7203c_a147_4a33_b42a6bc8eb91032e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
mySQLCommand = StrConcat8(Translate("SELECT COUNT(*) AS [Number] FROM ["), myTableName, Translate("] WHERE [Partition] = '"), PlateType, Translate("' AND [PlatePresent] = 1 AND [Status] = 'INCUBATOR'"), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 1011 1 0 "d5e18f84_7304_4aa2_a1feddc415338c91" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 1012 1 0 "99f93405_2c4c_4208_9b8f89753b843149" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1013 1 0 "d7016885_6bfc_4cb0_9d42ddc66cbf7d59" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
mySQLCommand = StrConcat8(Translate("SELECT COUNT([Barcode]) AS [Number] FROM ["), myTableName, Translate("] WHERE [Partition] = '"), PlateType, Translate("' AND [PlatePresent] = 1 AND [Status] = 'INCUBATOR'"), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 1014 1 0 "d5e18f84_7304_4aa2_a1feddc415338c91" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1015 1 0 "720818be_dc50_403a_adbe3397595b32c3" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
QUERY_LICONIC_DB.AddField("Number", number, hslInteger);
if( 0 == QUERY_LICONIC_DB.Open(myFileName + " " + myTableName, hslRead, mySQLCommand) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, myFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1016 1 0 "e46d1c2b_3196_47fc_aca1fca8c1c81681" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (
   (QUERY_LICONIC_DB.Eof() == 0)
)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 1017 1 0 "8c6d7892_a620_48c8_8a8da56f55c57751" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == QUERY_LICONIC_DB.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1018 1 0 "e46d1c2b_3196_47fc_aca1fca8c1c81681" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1019 1 0 "4d8e142c_881d_42fd_8c3f56a62b6157ed" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != QUERY_LICONIC_DB.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
QUERY_LICONIC_DB.RemoveFields();
// }} ""
// {{ 1020 1 0 "4e478893_3570_45ce_af46862351094830" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumOfPlates = number;
// }} ""
// {{{ 5 "PlatesInLiconic" "End"
}
// }} ""
// {{{ 5 "BarcodedPlateListLiconic" "Begin"
function BarcodedPlateListLiconic( variable PlateType, variable & BCPlateList, variable & ArrBCPlate[] ) void {
// }} ""
private variable loopCounter1;
private variable barcode;
private variable mySQLCommand;
private variable myFileName;
private variable myTableName;
private file QUERY_LICONIC_DB_BARCODES;
// {{ 5 "BarcodedPlateListLiconic" "InitLocals"
BCPlateList = 0;
ArrBCPlate.SetSize( 0);
// }} ""
// {{ 514 1 0 "c7103b96_d5ce_4755_9171da46a4a6040c" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
myFileName = Translate("C:\\Program Files (x86)\\HAMILTON\\System\\MedImmune System Files\\MedImmune_STXManagment.mdb");
// }} ""
// {{ 515 1 0 "057e213b_0cbf_4956_a1816eab7d4e738a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
myTableName = Translate("STXCarouselTable");
// }} ""
// {{ 516 1 0 "d1e09ea9_7054_4c93_b3f9683472f97e92" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
ArrBCPlate.SetSize(0);
// }} ""
// {{ 517 1 0 "f510d19c_581c_4c54_b90ce12fcbb04531" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 518 1 0 "1228c211_9134_429b_bfba1afff5481bce" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
mySQLCommand = StrConcat8(Translate("SELECT [Barcode] FROM ["), myTableName, Translate("] WHERE [Partition] = '"), PlateType, Translate("' AND [PlatePresent] = 1 AND [Status] = 'INCUBATOR' AND [Barcode] <> ''"), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 519 1 0 "8f1bc380_cf74_4fa7_b5f2bfeefbc9caf6" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
QUERY_LICONIC_DB_BARCODES.AddField("Barcode", barcode, hslString, 255);
if( 0 == QUERY_LICONIC_DB_BARCODES.Open(myFileName + " " + myTableName, hslRead, mySQLCommand) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, myFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 520 1 0 "5abd8f82_a472_47e7_9fa43626bfd69024" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (
   (QUERY_LICONIC_DB_BARCODES.Eof() == 0)
)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 521 1 0 "0246ea39_b4c7_48d8_8ab8650b80b6388c" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == QUERY_LICONIC_DB_BARCODES.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 522 1 0 "86bbbea7_5ed7_436f_bb479ec2a1475d84" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
ArrBCPlate.AddAsLast(barcode);
// }} ""
// {{ 523 1 0 "c659cd47_13d2_4c73_993e93bcd0707d98" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (loopCounter1 == 1)
{
// }} ""
// {{ 524 1 0 "aba3639f_1dd8_4e3d_a9a2e10ba9761cc0" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
BCPlateList = barcode;
// }} ""
// {{ 525 1 0 "c659cd47_13d2_4c73_993e93bcd0707d98" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
BCPlateList = BCPlateList + ", " + barcode;
// {{ 527 1 0 "c659cd47_13d2_4c73_993e93bcd0707d98" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 528 1 0 "5abd8f82_a472_47e7_9fa43626bfd69024" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 529 1 0 "8b2ec4a5_d2ea_413f_91010d6b0bd49069" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != QUERY_LICONIC_DB_BARCODES.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
QUERY_LICONIC_DB_BARCODES.RemoveFields();
// }} ""
// {{{ 5 "BarcodedPlateListLiconic" "End"
}
// }} ""
// {{{ 5 "TerminalPlateLookup" "Begin"
function TerminalPlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[], variable & GoodFlag ) void {
// }} ""
private variable sqlStatement;
private variable TerminalPlateFileReadCounter;
private variable terminalPlateBarcode;
private file READ_TERMINAL_PLATES;
private variable BarcodeDialog;
private dialog dialogHandleEF21FDC89478435692E45DCD133AB736;
// {{ 5 "TerminalPlateLookup" "InitLocals"
barcodes = 0;
Arrbarcodes.SetSize( 0);
GoodFlag = 0;
// }} ""
// {{ 1100 1 0 "6e14071e_2f97_47bd_852b00f7fabe2ca3" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
GoodFlag = 1;
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
sqlStatement = "SELECT DISTINCT Date, TerminalPlateBarcode FROM TerminalPlateTable " +
"WHERE experimentID = '" + SampleTrackingDB_glExperimentID + "' ORDER BY Date DESC";
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1102 1 0 "108b1730_ef69_4786_8478ebe9f09c0ec1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
sqlStatement = "SELECT DISTINCT  DateTime, DestinationBarcode, ProcessStep, DestinationVesselType FROM SampleTrackingTable" +
" WHERE ExperimentID = '" + SampleTrackingDB_glExperimentID + "' AND ProcessStep = '96DW_Terminal_Setup' AND DestinationVesselType = '96DW' ORDER BY DateTime DESC";
// {{ 1104 1 0 "a2386bb6_e075_4a6f_a80d5afbf1dcafab" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = Translate("");
// }} ""
// {{ 1105 1 0 "5ca5a9cb_c918_4085_b95b25cbfa2f73ad" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
Arrbarcodes.SetSize(0);
// }} ""
// {{ 1106 1 0 "de8a42ca_9fdb_457c_b0466f65b5cfd02d" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_TERMINAL_PLATES.AddField("DestinationBarcode", terminalPlateBarcode, hslString, 255);
READ_TERMINAL_PLATES.SetDelimiter(";");
if( 0 == READ_TERMINAL_PLATES.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1107 1 0 "d388afce_a416_4841_b4e5b8b2ef4b8272" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(TerminalPlateFileReadCounter = 0; TerminalPlateFileReadCounter < NumPlates;)
{
TerminalPlateFileReadCounter = TerminalPlateFileReadCounter + 1;
// }} ""
// {{ 1108 1 0 "f6c163f0_3cfa_49a8_95ac6d8ef5eac5f0" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_D2AF050FD8974dcd9B7F8D7E1DD341A5 ;
err.Clear();
// }} ""
// {{ 1109 1 0 "71d1f810_fd95_4ce1_adfc106c13bd0ce9" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_TERMINAL_PLATES.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1110 1 0 "3fc39150_de5e_49df_b1809f2fad67f451" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
Arrbarcodes.AddAsLast(terminalPlateBarcode);
// }} ""
// {{ 1111 1 0 "dba3cf11_bde7_4045_ad186aca83bec4dd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (TerminalPlateFileReadCounter == 1)
{
// }} ""
// {{ 1112 1 0 "800e800a_f1dc_4585_9ff8c4cf32fe2451" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = terminalPlateBarcode;
// }} ""
// {{ 1113 1 0 "dba3cf11_bde7_4045_ad186aca83bec4dd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
barcodes = barcodes + ", " + terminalPlateBarcode;
// {{ 1115 1 0 "dba3cf11_bde7_4045_ad186aca83bec4dd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1116 1 0 "f6c163f0_3cfa_49a8_95ac6d8ef5eac5f0" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_D2AF050FD8974dcd9B7F8D7E1DD341A5 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1117 1 0 "3289aa8b_ce7d_42ce_b7505557dd4f66db" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleEF21FDC89478435692E45DCD133AB736.SetOutput(Translate("Fewer than "), NumPlates, Translate(" terminal plates for this experiment ID exist in the SQL database.\n"), Translate("\nDo you want to continue?\n"), Translate("Press YES if this list is correct or press NO to abort run."));
BarcodeDialog = dialogHandleEF21FDC89478435692E45DCD133AB736.ShowOutput(Translate("Number of Terminal Plates in SQL Database Error"), hslYesNo | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1118 1 0 "4fa805df_ec2f_4830_b3c989b4951abadd" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
GoodFlag = 0;
// }} ""
// {{ 1119 1 0 "3458a7ec_3acd_47c1_9131a85d4fc9689a" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 1120 1 0 "f6c163f0_3cfa_49a8_95ac6d8ef5eac5f0" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1121 1 0 "d388afce_a416_4841_b4e5b8b2ef4b8272" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1122 1 0 "89a0edcd_5173_4b07_acae5fef3c49f7eb" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_TERMINAL_PLATES.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_TERMINAL_PLATES.RemoveFields();
// }} ""
// {{ 1123 1 0 "27bfe8cd_ac01_4aa4_b445bfa1757782cd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (BarcodeDialog == 7)
{
// }} ""
// {{ 1124 1 0 "8f4b7c1c_a2c8_4cbf_8b6b80ef62e6523f" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 1125 1 0 "27bfe8cd_ac01_4aa4_b445bfa1757782cd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "TerminalPlateLookup" "End"
}
// }} ""
// {{{ 5 "PassagePlateLookup" "Begin"
function PassagePlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[] ) void {
// }} ""
private variable PassagePlateFileReadCounter;
private variable sqlStatement;
private variable passagePlateBarcode;
private file READ_PASSAGE_PLATES;
// {{ 5 "PassagePlateLookup" "InitLocals"
barcodes = 0;
Arrbarcodes.SetSize( 0);
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
sqlStatement = "SELECT DISTINCT Date, PassagePlateBarcode FROM PassagePlateTable" +
"WHERE experimentID = '" + SampleTrackingDB_glExperimentID + "' ORDER BY Date DESC";
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 986 1 0 "0a727dca_2a25_4a1e_9448e8813102eccb" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
sqlStatement = "SELECT DISTINCT DateTime, DestinationBarcode, ProcessStep, DestinationVesselType FROM SampleTrackingTable" +
"WHERE experimentID = '" + SampleTrackingDB_glExperimentID + "' AND ProcessStep = '96DW_Passage' AND DestinationVesselType = '96DW' ORDER BY DateTime DESC";
// {{ 988 1 0 "49471609_f3a4_4c0d_81a9b74fd62a19ec" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = Translate("");
// }} ""
// {{ 989 1 0 "c99423c5_fc29_4752_93187ed7bb341a76" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
Arrbarcodes.SetSize(0);
// }} ""
// {{ 990 1 0 "68491914_0a6e_4292_85bc2c590d6bd697" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_PASSAGE_PLATES.AddField("DestinationBarcode", passagePlateBarcode, hslString, 255);
READ_PASSAGE_PLATES.SetDelimiter(";");
if( 0 == READ_PASSAGE_PLATES.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 991 1 0 "9793ecd6_e5ec_4bdd_be5f11b341930a71" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(PassagePlateFileReadCounter = 0; PassagePlateFileReadCounter < NumPlates;)
{
PassagePlateFileReadCounter = PassagePlateFileReadCounter + 1;
// }} ""
// {{ 992 1 0 "bb1fd85c_a9f2_46c8_9fcff80eb86737fe" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_18EE9BE686304b61868E15A02F317BDE ;
err.Clear();
// }} ""
// {{ 993 1 0 "71dbff35_5fc9_4e3d_a1cc005e2589538f" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_PASSAGE_PLATES.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 994 1 0 "1cb99901_6ab1_48bc_a34d1cdc5184f16b" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
Arrbarcodes.AddAsLast(passagePlateBarcode);
// }} ""
// {{ 995 1 0 "ecd88c20_ef45_423a_a18aee421ee0e971" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PassagePlateFileReadCounter == 1)
{
// }} ""
// {{ 996 1 0 "a8ca5377_d5d0_4042_9e5b9c96d84933ed" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = passagePlateBarcode;
// }} ""
// {{ 997 1 0 "ecd88c20_ef45_423a_a18aee421ee0e971" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
barcodes = barcodes + ", " + passagePlateBarcode;
// {{ 999 1 0 "ecd88c20_ef45_423a_a18aee421ee0e971" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1000 1 0 "bb1fd85c_a9f2_46c8_9fcff80eb86737fe" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_18EE9BE686304b61868E15A02F317BDE : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1001 1 0 "abc09e88_cdde_4d7e_87350096230d1c63" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 1002 1 0 "bb1fd85c_a9f2_46c8_9fcff80eb86737fe" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1003 1 0 "9793ecd6_e5ec_4bdd_be5f11b341930a71" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1004 1 0 "aa4cd718_2ba1_4e6d_bf927ee9fdd9ecae" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_PASSAGE_PLATES.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_PASSAGE_PLATES.RemoveFields();
// }} ""
// {{{ 5 "PassagePlateLookup" "End"
}
// }} ""
// {{{ 5 "CompareBarcodes" "Begin"
function CompareBarcodes( variable NumPlates, variable & LiconicBarcodes[], variable & SQLBarcodes[], variable & Match ) void {
// }} ""
private variable loopCounter1;
private variable NumMatches;
private variable loopCounter2;
private variable NumPlatesDB;
// {{ 5 "CompareBarcodes" "InitLocals"
Match = 0;
// }} ""
// {{ 531 1 0 "05f54711_26fc_4bfd_be8b26c6bea3c662" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumMatches = 0;
// }} ""
// {{ 532 1 0 "454752e8_a2b4_4b85_bec47f49ea3b2971" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
NumPlatesDB=SQLBarcodes.GetSize();
// }} ""
// {{ 533 1 0 "9e0b30d7_77b2_4788_a8fd675294bc0ba8" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < NumPlates;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 534 1 0 "6a2d8dbe_c1c0_4831_be6700d735506c78" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter2 = 0; loopCounter2 < NumPlatesDB;)
{
loopCounter2 = loopCounter2 + 1;
// }} ""
// {{ 535 1 0 "c175f712_e1d5_4bed_a4c0965f90a0575c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (LiconicBarcodes.ElementAt( loopCounter1 -1) == SQLBarcodes.ElementAt( loopCounter2 -1))
{
// }} ""
// {{ 536 1 0 "ea226dda_469d_4da5_bb367da01892745d" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
NumMatches = NumMatches + 1;
// }} ""
// {{ 537 1 0 "c175f712_e1d5_4bed_a4c0965f90a0575c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 538 1 0 "6a2d8dbe_c1c0_4831_be6700d735506c78" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 539 1 0 "9e0b30d7_77b2_4788_a8fd675294bc0ba8" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 540 1 0 "030e9776_16be_4246_8b224fc98a8f885c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (NumMatches == NumPlates)
{
// }} ""
// {{ 541 1 0 "65b5b557_bae0_4b99_9efbace327caf49d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Match = 1;
// }} ""
// {{ 542 1 0 "030e9776_16be_4246_8b224fc98a8f885c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 543 1 0 "77a80fd7_dd71_4edd_8d14a4abac0d9e68" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Match = 0;
// }} ""
// {{ 544 1 0 "030e9776_16be_4246_8b224fc98a8f885c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "CompareBarcodes" "End"
}
// }} ""
// {{{ 5 "SetupPlateLookup" "Begin"
function SetupPlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[], variable & GoodFlag ) void {
// }} ""
private variable sqlStatement;
private variable setupPlateBarcode;
private variable SetupPlateFileReadCounter;
private file READ_SETUP_PLATES;
private variable BarcodeDialog;
private variable NumPlatesFound;
private file READ_SETUP_PLATES_FROM_CLONEPIX;
private dialog dialogHandleFA00DBB90CB443f2ADDAD8F6A54D2E16;
private dialog dialogHandle20359EB1347C4b7d857367DA4294B07D;
// {{ 5 "SetupPlateLookup" "InitLocals"
barcodes = 0;
Arrbarcodes.SetSize( 0);
GoodFlag = 0;
// }} ""
// {{ 1047 1 0 "f2e0385f_cf8c_462e_9bb7d142ad9f506c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1048 1 0 "27c04b74_1a49_45df_bce61cb21623907a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
GoodFlag = 1;
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
sqlStatement = "SELECT DISTINCT Date, PassagePlateBarcode FROM PassagePlateTable " +
"WHERE experimentID = '" + SampleTrackingDB_glExperimentID + "' ORDER BY Date DESC";
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1050 1 0 "8bd97902_de7f_451e_af5bdec01e15b9a2" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
sqlStatement = "SELECT DISTINCT DateTime, DestinationBarcode, ProcessStep, DestinationVesselType FROM SampleTrackingTable" +
"WHERE ExperimentID = '" + SampleTrackingDB_glExperimentID + "' AND ProcessStep = '96DW_Passage' AND DestinationVesselType = '96DW' ORDER BY DateTime DESC";
// {{ 1052 1 0 "db48806a_470d_4afb_8c196596e95fe875" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = Translate("");
// }} ""
// {{ 1053 1 0 "5844c5e1_e9c9_4e4f_a44d24707384c4a9" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumPlatesFound = 0;
// }} ""
// {{ 1054 1 0 "c9adee0c_11f2_41ea_bbfe6dde0d5f2c75" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
Arrbarcodes.SetSize(0);
// }} ""
// {{ 1055 1 0 "91f8c7bc_78bc_482b_bcc38e9efbfe40c9" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SETUP_PLATES.AddField("DestinationBarcode", setupPlateBarcode, hslString, 255);
READ_SETUP_PLATES.SetDelimiter(";");
if( 0 == READ_SETUP_PLATES.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1056 1 0 "0268e56d_2553_44f4_acc9dff206502c6f" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(SetupPlateFileReadCounter = 0; SetupPlateFileReadCounter < NumPlates;)
{
SetupPlateFileReadCounter = SetupPlateFileReadCounter + 1;
// }} ""
// {{ 1057 1 0 "919add4f_198a_4a7f_8e4fd940cb7acb3c" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_016B435AF8CA4893AB227BEF01D41A16 ;
err.Clear();
// }} ""
// {{ 1058 1 0 "122b8964_3f82_4836_9c682b7b93aba138" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SETUP_PLATES.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1059 1 0 "eb17ba9d_f920_4d6d_85c922969c56e67d" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
Arrbarcodes.AddAsLast(setupPlateBarcode);
// }} ""
// {{ 1060 1 0 "20ceb950_abae_48a1_9a38ebaf9ee4a01c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SetupPlateFileReadCounter == 1)
{
// }} ""
// {{ 1061 1 0 "2d597148_7dcc_4b18_b58ce52737aa3029" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = setupPlateBarcode;
// }} ""
// {{ 1062 1 0 "20ceb950_abae_48a1_9a38ebaf9ee4a01c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
barcodes = barcodes + ", " + setupPlateBarcode;
// {{ 1064 1 0 "20ceb950_abae_48a1_9a38ebaf9ee4a01c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1065 1 0 "e7825255_27ea_409b_acac63fd59f46781" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
NumPlatesFound = NumPlatesFound + 1;
// }} ""
// {{ 1066 1 0 "919add4f_198a_4a7f_8e4fd940cb7acb3c" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_016B435AF8CA4893AB227BEF01D41A16 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1067 1 0 "0eeaca78_24c2_4fc3_b43da83d15145013" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (NumPlatesFound != 0)
{
// }} ""
// {{ 1068 1 0 "9aa49cdb_dda5_4de2_a78436394a43bc4a" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle20359EB1347C4b7d857367DA4294B07D.SetOutput(Translate("Fewer than "), NumPlates, Translate(" setup plates for this experiment ID exist in the SQL database.\n"), Translate("\nDo you want to continue?\n"), Translate("Press YES if this list is correct or press NO to abort run."));
BarcodeDialog = dialogHandle20359EB1347C4b7d857367DA4294B07D.ShowOutput(Translate("Number of Setup Plates in SQL Database Error"), hslYesNo | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1069 1 0 "ffcb1074_3875_435d_abb43aaa489a60d5" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
GoodFlag = 0;
// }} ""
// {{ 1070 1 0 "0eeaca78_24c2_4fc3_b43da83d15145013" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1071 1 0 "395ca1ef_05d9_41ed_abd135a2bc9bab91" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 1072 1 0 "919add4f_198a_4a7f_8e4fd940cb7acb3c" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1073 1 0 "0268e56d_2553_44f4_acc9dff206502c6f" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1074 1 0 "b20ca23c_8d94_4087_b227ebff2b21f03c" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SETUP_PLATES.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SETUP_PLATES.RemoveFields();
// }} ""
// {{ 1075 1 0 "556049d3_c2fd_425a_9227863ceccae5e5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1076 1 0 "ebf83666_d825_4099_85072e5fd6218603" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1077 1 0 "ec6e8f99_7691_4ad1_b56f40589f3892a7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (NumPlatesFound == 0)
{
// }} ""
sqlStatement = "SELECT DISTINCT Date, CulturePlateBarcode FROM ClonePixPassageTable " +
"WHERE experimentID = '" + SampleTrackingDB_glExperimentID + "' ORDER BY Date DESC";
// {{ 1079 1 0 "2cd959f7_0cc5_4d34_bdbec818df627cad" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SETUP_PLATES_FROM_CLONEPIX.AddField("CulturePlateBarcode", setupPlateBarcode, hslString, 255);
READ_SETUP_PLATES_FROM_CLONEPIX.SetDelimiter(";");
if( 0 == READ_SETUP_PLATES_FROM_CLONEPIX.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1080 1 0 "fce3d4c3_c8e1_45e5_b5410f388f405fc9" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(SetupPlateFileReadCounter = 0; SetupPlateFileReadCounter < NumPlates;)
{
SetupPlateFileReadCounter = SetupPlateFileReadCounter + 1;
// }} ""
// {{ 1081 1 0 "553b2f79_20c4_402a_b5e52e025bd3f507" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_8C6A924E145D4165AE70C2C2CCC1A5C8 ;
err.Clear();
// }} ""
// {{ 1082 1 0 "bccb7446_545e_49c3_98df4d518203f981" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SETUP_PLATES_FROM_CLONEPIX.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1083 1 0 "f10f9d9f_82f1_489b_852c7200c4fdeb61" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
Arrbarcodes.AddAsLast(setupPlateBarcode);
// }} ""
// {{ 1084 1 0 "60e5898c_b39c_4c0c_9b8249255818da04" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SetupPlateFileReadCounter == 1)
{
// }} ""
// {{ 1085 1 0 "680d655b_b5a1_4b3a_9fca3ccd3fb563f7" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = setupPlateBarcode;
// }} ""
// {{ 1086 1 0 "60e5898c_b39c_4c0c_9b8249255818da04" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
barcodes = barcodes + ", " + setupPlateBarcode;
// {{ 1088 1 0 "60e5898c_b39c_4c0c_9b8249255818da04" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1089 1 0 "553b2f79_20c4_402a_b5e52e025bd3f507" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_8C6A924E145D4165AE70C2C2CCC1A5C8 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1090 1 0 "6d6c6fac_3028_4ea6_a4b53adad5682cc2" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleFA00DBB90CB443f2ADDAD8F6A54D2E16.SetOutput(Translate("Fewer than "), NumPlates, Translate(" setup plates for this experiment ID exist in the SQL database.\n"), Translate("\nDo you want to continue?\n"), Translate("Press YES if this list is correct or press NO to abort run."));
BarcodeDialog = dialogHandleFA00DBB90CB443f2ADDAD8F6A54D2E16.ShowOutput(Translate("Number of Setup Plates in SQL Database Error"), hslYesNo | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1091 1 0 "d16cf243_ef83_452e_a42012e1ed69f5e2" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 1092 1 0 "553b2f79_20c4_402a_b5e52e025bd3f507" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1093 1 0 "fce3d4c3_c8e1_45e5_b5410f388f405fc9" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1094 1 0 "da5aece4_8867_4e20_98f9c1ecb6e73225" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SETUP_PLATES_FROM_CLONEPIX.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SETUP_PLATES_FROM_CLONEPIX.RemoveFields();
// }} ""
// {{ 1095 1 0 "ec6e8f99_7691_4ad1_b56f40589f3892a7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1096 1 0 "7b3f2760_6661_4257_91234b201ab6126a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (BarcodeDialog == 7)
{
// }} ""
// {{ 1097 1 0 "44f795a4_aafd_4dc9_bb9d5335aa33f161" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 1098 1 0 "7b3f2760_6661_4257_91234b201ab6126a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "SetupPlateLookup" "End"
}
// }} ""
// {{{ 5 "Liconic384PlateBarcode" "Begin"
function Liconic384PlateBarcode( variable & barcode384 ) void {
// }} ""
private variable mySQLCommand;
private variable myFileName;
private variable myTableName;
private file QUERY_LICONIC_DB;
private variable PlateType;
// {{ 5 "Liconic384PlateBarcode" "InitLocals"
barcode384 = 0;
// }} ""
// {{ 976 1 0 "ce0dcf30_d6a7_486f_94c9370a66b68b29" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
myFileName = Translate("C:\\Program Files (x86)\\HAMILTON\\System\\MedImmune System Files\\MedImmune_STXManagment.mdb");
// }} ""
// {{ 977 1 0 "ece75843_f07b_4c7e_87f9ae02d5de36d3" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
myTableName = Translate("STXCarouselTable");
// }} ""
// {{ 978 1 0 "28e2bce7_af1c_4394_a4ce2c0b0feb80fc" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
PlateType = Translate("ASSAY_PLATES_384");
// }} ""
// {{ 979 1 0 "4692b4dc_842d_4dc6_a7d0e58b1a2bdcfc" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 980 1 0 "42c01650_de18_46f4_826ed660ad78ab18" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
mySQLCommand = StrConcat8(Translate("SELECT [Barcode] FROM ["), myTableName, Translate("] WHERE [Partition] = '"), PlateType, Translate("' AND [PlatePresent] = 1 AND [Status] = 'INCUBATOR'"), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 981 1 0 "1d575050_2eaa_4244_b1cd1540e382f95f" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
QUERY_LICONIC_DB.AddField("Barcode", barcode384, hslString, 255);
if( 0 == QUERY_LICONIC_DB.Open(myFileName + " " + myTableName, hslRead, mySQLCommand) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, myFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 982 1 0 "cb518835_09a9_4688_998962aed3158059" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == QUERY_LICONIC_DB.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 983 1 0 "cafc9009_1bc7_49b7_993b335cc732957e" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != QUERY_LICONIC_DB.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
QUERY_LICONIC_DB.RemoveFields();
// }} ""
// {{{ 5 "Liconic384PlateBarcode" "End"
}
// }} ""
// {{{ 5 "SendCentrifugationEmail" "Begin"
function SendCentrifugationEmail( variable username, variable subject, variable message, variable userdomain ) void {
// }} ""
private variable sendEmailAddress;
// {{ 5 "SendCentrifugationEmail" "InitLocals"
// }} ""
// {{ 1036 1 0 "fa1f49ed_2cf6_4d1e_9383b17cd21beebf" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1037 1 0 "b852a3fd_be94_4902_bf75d54dd86cd2e7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Util::SetSMTPServerHostName(Translate("relay.astrazeneca.net"));
// }} ""
// {{{ 1038 1 0 "5d9d301c_7222_4d5b_bfddb4ade312d2a4" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
sendEmailAddress = StrConcat4(username, Translate("@"), userdomain, Translate(""));
// }} ""
// {{{ 1039 1 0 "2a393b3a_0e25_4a3d_942acca5fd85d8d5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Util::SetEMailAddressOfSender(sendEmailAddress);
// }} ""
// {{{ 1040 1 0 "7d6ade2b_f869_4f8e_8f302c2b5034cee0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Util::SendEMail(sendEmailAddress, subject, message);
// }} ""
// {{{ 5 "SendCentrifugationEmail" "End"
}
// }} ""
// {{{ 5 "SetErrorEmailSettings" "Begin"
function SetErrorEmailSettings( variable username, variable userdomain ) void {
// }} ""
private variable errorEmailAddress;
// {{ 5 "SetErrorEmailSettings" "InitLocals"
// }} ""
// {{{ 1042 1 0 "bc513c5d_1d5e_42bb_919f9abcf683fb35" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
errorEmailAddress = StrConcat4(username, Translate("@"), userdomain, Translate(""));
// }} ""
// {{{ 1043 1 0 "37d281aa_ba0c_43a7_8a665a1e6273b7e2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
EmailUtilLib::SetSMTPServerHostName(Translate("relay.astrazeneca.net"));
// }} ""
// {{{ 1044 1 0 "3bf7856b_1b3c_4ef1_8515cb5ab41849dc" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
EmailUtilLib::ChangeRecieverAddress(errorEmailAddress);
// }} ""
// {{{ 1045 1 0 "6a2c902c_1dc5_4844_9daf2df1aca3ff27" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
EmailUtilLib::SetEMailAddressOfSender(errorEmailAddress);
// }} ""
// {{{ 5 "SetErrorEmailSettings" "End"
}
// }} ""
// {{{ 5 "Add384wHitpickPipettingDataToDB" "Begin"
function Add384wHitpickPipettingDataToDB( variable & iArrSampleTrackingFiles[], variable icultureVolume, variable imediaVolume, variable imediatype, variable imedialot ) void {
// }} ""
private variable arrSize;
private variable previousSourcePosID;
private variable previousSourceBarcode;
private variable previousTargetBarcode;
private variable targetPosID;
private variable previousTargetPosID;
private variable arrIndex;
private variable statusSummary;
private variable sourceBarcode;
private variable targetBarcode;
private variable time;
private variable date;
private variable sourcePosID;
private file READ_SAMPLE_TRACKING_FILE;
private file WRITE_FACS_HITPICK_DATA;
private variable totalVol;
private variable ProcessStep;
private variable SourceVesselType;
private variable SampleID;
private variable targetVesselType;
// {{ 5 "Add384wHitpickPipettingDataToDB" "InitLocals"
// }} ""
// {{ 33 1 0 "286c29ee_193c_40e5_88b48859c2f01623" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 34 1 0 "c7260124_f9a3_4269_92d3da7385b877dd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 35 1 0 "5e112438_a858_415e_8306124bea78a8dd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 36 1 0 "887698b0_823a_484b_95bac8f599a4b8b8" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 37 1 0 "1d9d9260_da69_412c_848d902de8a0d63c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 38 1 0 "17e50dd0_fd87_4f14_99ee78d59c6db928" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SourceVesselType = "384w";
targetVesselType = "96w";
ProcessStep = "384w_Hitpick";
SampleID = "NA";
// {{ 40 1 0 "35503f8f_90f4_4cce_8d8c013bfe0ab316" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
totalVol = imediaVolume + icultureVolume;
// }} ""
// {{ 41 1 0 "880e68a8_298a_490f_b4623a17c1d10614" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 42 1 0 "011698f9_c2d8_4da3_8761acc885b2efac" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_FACS_HITPICK_DATA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("SampleID", SampleID, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("SourceBarcode", sourceBarcode, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("SourceWell", sourcePosID, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("SourceVesselType", SourceVesselType, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("DestinationBarcode", targetBarcode, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("DestinationWell", targetPosID, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("DestinationVesselType", targetVesselType, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("TotalVol", totalVol, hslFloat);
WRITE_FACS_HITPICK_DATA.AddField("SampleTransferVol", icultureVolume, hslFloat);
WRITE_FACS_HITPICK_DATA.AddField("Reagent1Vol", imediaVolume, hslFloat);
WRITE_FACS_HITPICK_DATA.AddField("DateTime", date, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("Reagent1ID", imediatype, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("Reagent1Lot", imedialot, hslString, 255);
WRITE_FACS_HITPICK_DATA.AddField("ProcessStep", ProcessStep, hslString, 255);
WRITE_FACS_HITPICK_DATA.SetDelimiter(";");
if( 0 == WRITE_FACS_HITPICK_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [SampleTrackingTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 43 1 0 "9cf5f6e2_c6cd_4e65_85a1ab2725355b73" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 44 1 0 "210afda9_5381_4072_b2e17af58c2f67a8" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
arrSize=iArrSampleTrackingFiles.GetSize();
// }} ""
// {{ 45 1 0 "899403dc_27fd_41e9_ba21b681d85f66b0" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourceBarcode = Translate("");
// }} ""
// {{ 46 1 0 "39550644_7a29_41e7_be51a7a97acd545b" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetBarcode = Translate("");
// }} ""
// {{ 47 1 0 "5cdbfd73_95ad_493f_addef9d851a5f530" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourcePosID = Translate("");
// }} ""
// {{ 48 1 0 "76088562_1fbd_4ce5_99a3299de083e8c4" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetPosID = Translate("");
// }} ""
// {{ 49 1 0 "0b01f37c_f5e0_450e_969143220be4c7db" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(arrIndex = 0; arrIndex < arrSize;)
{
arrIndex = arrIndex + 1;
// }} ""
// {{ 50 1 0 "9336cd25_d7af_42be_8ee2be0d85d58c07" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SAMPLE_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SRackBC", sourceBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SPositionId", sourcePosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_SAMPLE_TRACKING_FILE.Open(iArrSampleTrackingFiles.ElementAt( arrIndex -1) + " " + "ReportMapping$", hslRead, "SELECT DISTINCT [SPositionId], [SRackBC], [TRackBC], [TPositionID], [TSumStateDescription] FROM [ReportMapping]") )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFiles.ElementAt( arrIndex -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 51 1 0 "60d80110_0674_4e81_b59d84986b869434" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
while (
   (READ_SAMPLE_TRACKING_FILE.Eof() == 0)
)
{
// }} ""
// {{ 52 1 0 "74754c84_cec9_44db_b363b5823ed6828f" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SAMPLE_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 53 1 0 "e2fadc10_a73a_4db3_9fafa3a5749d3822" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{ 54 1 0 "28b0f4a5_5572_4eb9_baf1f26a53a5d2e2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceBarcode != "----------")
{
// }} ""
// {{ 55 1 0 "05b70214_e838_4c17_87327de6b88a9bf1" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_FACS_HITPICK_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 56 1 0 "28b0f4a5_5572_4eb9_baf1f26a53a5d2e2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 57 1 0 "e2fadc10_a73a_4db3_9fafa3a5749d3822" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 58 1 0 "60d80110_0674_4e81_b59d84986b869434" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 59 1 0 "b937793e_e260_4719_8db813d98dcaa3f5" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SAMPLE_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SAMPLE_TRACKING_FILE.RemoveFields();
// }} ""
// {{{ 60 1 0 "ac0eefe6_591d_4484_85a3a54c9d345734" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Database Upload Complete for : "), iArrSampleTrackingFiles.ElementAt( arrIndex -1));
// }} ""
// {{ 61 1 0 "5f7f2a1f_5413_4d88_8b9af51fa1689ea1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 62 1 0 "c5cfe4a4_7724_4b3f_95eb568f5bdaaed2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFiles.ElementAt( arrIndex -1));
// }} ""
// {{ 63 1 0 "0b01f37c_f5e0_450e_969143220be4c7db" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 64 1 0 "6d50f7c1_a439_4c66_9d6941451cbeab3b" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_FACS_HITPICK_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_FACS_HITPICK_DATA.RemoveFields();
// }} ""
// {{{ 5 "Add384wHitpickPipettingDataToDB" "End"
}
// }} ""
// {{{ 5 "XAddOctetAutoDatatoDB" "Begin"
private function XAddOctetAutoDatatoDB( variable & arrOctetBarcode[], variable & arrOctetDataDir[], variable NumOctetPlates, variable octetDilFactor ) void {
// }} ""
private variable octetPlateBarcode;
private variable row;
private variable proteinTiterDil2;
private variable titerColumn;
private variable posID;
private variable positionColumn;
private variable proteinTiterDil;
private variable readCounter;
private variable time;
private variable proteinTiter;
private variable date;
private file WRITE_OCTET_DATA_TO_DB;
private variable loopCounter1;
private variable iOctetInputFile;
private variable shortDir;
private variable Directory;
private variable length;
private variable lengthMid;
private variable start;
private dialog dialogHandleB4167AA362F442ae8BC1ECB66F1DEA09;
private dialog dialogHandle3;
private timer timer3;
private dialog dialogHandle1;
private dialog dialogHandle2;
private dialog dialogHandle6CA96FA1810F455e8D45C68F31568430;
private dialog dialogHandleDD2016C28FF949a6BA1F8A310A4558E7;
private dialog dialogHandle78E54165CBD546338193E43CBC18B9D7;
// {{ 5 "XAddOctetAutoDatatoDB" "InitLocals"
// }} ""
// {{ 1231 1 0 "30200508_c522_438d_84bca99e3b048a1d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1232 1 0 "dea4ecfc_073f_4455_8d82e8e46173fe71" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 1233 1 0 "510a7056_870f_4406_aa7cfd1763f624c5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 1234 1 0 "9741cde8_fa8a_4f78_99d6222d82855be8" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = 0;
// }} ""
// {{ 1235 1 0 "95e30487_f41f_48f3_b3a2def5fb768cd6" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 1236 1 0 "047b4a03_1d01_440c_bc7a0b8953976cfe" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1237 1 0 "07d1668d_f160_4ea5_b271bca34ae4cf99" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
start = 46;
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1238 1 0 "bad4fe24_3613_49b0_86dc5ca6f6d20f29" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
start = 13;
// }} ""
// {{ 1239 1 0 "292a6e05_423e_49ed_acceca6b840591f5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1240 1 0 "4400a107_8fc2_4f9f_be8e59f5a4948643" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_DATA_TO_DB.AddField("experimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("OctetTestPlateBarcode", octetPlateBarcode, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("OctetTestPlateWellID", posID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("ProteinTiter", proteinTiter, hslFloat);
WRITE_OCTET_DATA_TO_DB.AddField("Date", date, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("RunID", SampleTrackingDB_glRunID, hslInteger);
WRITE_OCTET_DATA_TO_DB.SetDelimiter(";");
if( 0 == WRITE_OCTET_DATA_TO_DB.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [OctetReadDataTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1241 1 0 "f5f84176_6a3d_43c0_ad607e474c0e4b8a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
positionColumn = 6;
// }} ""
// {{ 1242 1 0 "a86c607f_cabd_4daa_928885e503ffd15c" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
titerColumn = 13;
// }} ""
// {{ 1243 1 0 "7ef53bd5_5fa1_4efc_8147ed48e9f5a4cb" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < NumOctetPlates;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 1244 1 0 "9b0b5b62_e3e6_45d8_b65ceec5afb692e1" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
Directory=arrOctetDataDir.GetAt(loopCounter1-1);
// }} ""
// {{ 1245 1 0 "66b0ebfd_69e8_4617_86dee1866f98217b" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
octetPlateBarcode=arrOctetBarcode.GetAt(loopCounter1-1);
// }} ""
// {{{ 1246 1 0 "71e47a79_62e8_449c_b3fd4ad2040a864d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
length = StrGetLength(Directory);
// }} ""
// {{ 1247 1 0 "0e342e6a_0f56_459d_a29c67a707d61cbb" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
lengthMid = length - start;
// }} ""
// {{{ 1248 1 0 "4a44db6a_38c3_4ef3_b46fcec4ee7d7ebf" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
shortDir = StrMid(Directory, start, lengthMid);
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1249 1 0 "7f9a58cb_ec33_4517_853ec3cfa071972a" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle1.SetOutput(shortDir);
dialogHandle1.ShowOutput(Translate("shortDir"), hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
iOctetInputFile = "Z:" + shortDir + "ExcelExportQ.xls";
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1251 1 0 "339ba197_dc37_430c_aaa4ec3add867a93" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle2.SetOutput(iOctetInputFile);
dialogHandle2.ShowOutput(Translate("iOctet"), hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1252 1 0 "d84073d7_c27c_4da8_95f633b2050eccd5" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer3.SetTimer(5) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1253 1 0 "730f9164_cc04_405f_841a4b05631fa704" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer3.WaitTimer(hslFalse, hslFalse) )
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 1254 1 0 "6579eeaa_731f_4ec3_ba60299b03f96e9b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::Init();
// }} ""
// {{{ 1255 1 0 "722be305_6dde_4999_a1f7f2f4feda74a3" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::OpenFile(iOctetInputFile);
// }} ""
// {{{ 1256 1 0 "3bb1593d_1434_4c65_a6d1a84af92fc799" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Octet data file: "), iOctetInputFile);
// }} ""
// {{{ 1257 1 0 "17e9df7f_df25_4861_a0b8ea7276b9e9f7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::SelectSheet(4);
// }} ""
// {{ 1258 1 0 "ec5af8ae_1385_4d48_9637c627ed24775d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 2;
// }} ""
// {{ 1259 1 0 "b78ea17a_b1ab_4470_8fa9783df3201588" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(readCounter = 0; readCounter < 96;)
{
readCounter = readCounter + 1;
// }} ""
// {{ 1260 1 0 "649e09e0_ef99_461d_949c5a40017acb90" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_8C3B529A51C64ee0906F896AF5C8BCA7 ;
err.Clear();
// }} ""
// {{{ 1261 1 0 "cec1cba2_dc94_4da4_b68af995b3c1d39d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(positionColumn, row, posID);
// }} ""
// {{ 1262 1 0 "649e09e0_ef99_461d_949c5a40017acb90" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_8C3B529A51C64ee0906F896AF5C8BCA7 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1263 1 0 "d1996b13_30e3_41cf_86dd7c8e28918f57" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle3.SetOutput(Translate("Well Error\n"), octetPlateBarcode);
dialogHandle3.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1264 1 0 "649e09e0_ef99_461d_949c5a40017acb90" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1265 1 0 "c293b27b_aa6a_44be_9f21440fc2b519de" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_4D1BCCD73AC346ffB1ED2F4AAE4B9424 ;
err.Clear();
// }} ""
// {{{ 1266 1 0 "8b6fe8e5_53a3_451b_a53aaaf633a5069f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(titerColumn, row, proteinTiterDil2);
// }} ""
// {{ 1267 1 0 "c293b27b_aa6a_44be_9f21440fc2b519de" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_4D1BCCD73AC346ffB1ED2F4AAE4B9424 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1268 1 0 "41b06160_7a88_4568_967b775deb66f674" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleB4167AA362F442ae8BC1ECB66F1DEA09.SetOutput(Translate("Titer Error\n"), octetPlateBarcode);
dialogHandleB4167AA362F442ae8BC1ECB66F1DEA09.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1269 1 0 "c293b27b_aa6a_44be_9f21440fc2b519de" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1270 1 0 "1734fed8_0560_4c8b_baf73c243686389d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1271 1 0 "9e8b4e99_2686_487f_b7c55af20af75a3c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (proteinTiterDil2 == "Too High")
{
// }} ""
// {{ 1272 1 0 "737b24b9_c2e1_4f45_9aba40deb4276610" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1273 1 0 "b5c0d5cd_0e1a_41b2_8a0e101462c83f4f" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle6CA96FA1810F455e8D45C68F31568430.SetOutput(Translate("Result Too High"));
dialogHandle6CA96FA1810F455e8D45C68F31568430.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1274 1 0 "899b9bd8_4507_4d50_b749462c8e023452" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiterDil = 99999;
// }} ""
// {{ 1275 1 0 "fcd0d928_7a48_4387_9d5a23ff968d4441" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = proteinTiterDil;
// }} ""
// {{ 1276 1 0 "9e8b4e99_2686_487f_b7c55af20af75a3c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 1277 1 0 "3c7a2ba5_7e26_457d_8bd8c9de0618c44b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (proteinTiterDil2 == "")
{
// }} ""
// {{ 1278 1 0 "41317457_b690_4c05_b88fe71d5f2e7381" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1279 1 0 "4e48f8d0_9978_4207_8f716e1a1fa5fe9f" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle78E54165CBD546338193E43CBC18B9D7.SetOutput(Translate("Result Empty"));
dialogHandle78E54165CBD546338193E43CBC18B9D7.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1280 1 0 "fe597ee1_904d_4224_800e8630dbe45305" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiterDil = 0;
// }} ""
// {{ 1281 1 0 "91405330_b8f3_4770_8132841e80105390" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = octetDilFactor * proteinTiterDil;
// }} ""
// {{ 1282 1 0 "3c7a2ba5_7e26_457d_8bd8c9de0618c44b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 1283 1 0 "7cdaacd0_0e4c_4e10_8a05e5b217bc56d4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (proteinTiterDil2 == "Too Low")
{
// }} ""
// {{ 1284 1 0 "b2a826f2_5004_4333_94240830fa7873e4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1285 1 0 "d333c2d1_ae11_4b7c_b69e08e2ca9f28e6" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleDD2016C28FF949a6BA1F8A310A4558E7.SetOutput(Translate("Result Too Low"));
dialogHandleDD2016C28FF949a6BA1F8A310A4558E7.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1286 1 0 "798d3e7e_7140_460f_9d210d4e67d71442" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiterDil = 0.1;
// }} ""
// {{ 1287 1 0 "4d7cea9f_bb44_4ba8_af57c1956c145b94" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = proteinTiterDil;
// }} ""
// {{ 1288 1 0 "7cdaacd0_0e4c_4e10_8a05e5b217bc56d4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 1289 1 0 "a9d93525_6c2d_48f6_96a913f4eab2c10d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1290 1 0 "6cfdd6f7_0b30_4f19_a5f0b34173a27ab6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
proteinTiterDil = StrFVal(proteinTiterDil2);
// }} ""
// {{ 1291 1 0 "74950dc0_218a_452e_8f11259994d3551e" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = octetDilFactor * proteinTiterDil;
// }} ""
// {{ 1292 1 0 "7cdaacd0_0e4c_4e10_8a05e5b217bc56d4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1293 1 0 "3c7a2ba5_7e26_457d_8bd8c9de0618c44b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1294 1 0 "9e8b4e99_2686_487f_b7c55af20af75a3c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1295 1 0 "163b6d00_6c43_4830_884234f0a7ee7c1b" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_DATA_TO_DB.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1296 1 0 "5bcf16b9_9789_405d_88d523274266fd01" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
row = row + 1;
// }} ""
// {{ 1297 1 0 "b78ea17a_b1ab_4470_8fa9783df3201588" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 1298 1 0 "46130319_c1d6_40d0_8d85c6d53766c2a9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::End();
// }} ""
// {{ 1299 1 0 "7ef53bd5_5fa1_4efc_8147ed48e9f5a4cb" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1300 1 0 "be538ce6_cd45_47cd_9e9ad81543702a1d" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_DATA_TO_DB.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_DATA_TO_DB.RemoveFields();
// }} ""
// {{{ 5 "XAddOctetAutoDatatoDB" "End"
}
// }} ""
// {{{ 5 "XAddOctetAutoDatatoDB_OctetV6" "Begin"
private function XAddOctetAutoDatatoDB_OctetV6( variable & arrOctetBarcode[], variable & arrOctetDataDir[], variable NumOctetPlates, variable octetDilFactor ) void {
// }} ""
private dialog dialogHandle01D4321C2C864f4eA226083B736E8A08;
private dialog dialogHandleF472D767E7DE4021A8042840AF8CC06D;
private variable iOctetInputFile;
private variable octetPlateBarcode;
private variable row;
private variable shortDir;
private variable Directory;
private variable length;
private variable proteinTiterDil2;
private variable titerColumn;
private variable lengthMid;
private variable posID;
private variable loopCounter1;
private variable positionColumn;
private variable start;
private variable proteinTiterDil;
private variable readCounter;
private variable time;
private variable proteinTiter;
private variable date;
private timer timer3;
private file WRITE_OCTET_DATA_TO_DB;
// {{ 5 "XAddOctetAutoDatatoDB_OctetV6" "InitLocals"
// }} ""
// {{ 1372 1 0 "8b934a7b_87ca_4636_add33c94006c48f8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1373 1 0 "e780433b_f9b4_4cbd_b3cb4790459ea02a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 1374 1 0 "3e3c9ebd_3659_44ff_a092c77275e7670f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 1375 1 0 "730cb00c_2920_444b_bb31b304874dd4c1" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = 0;
// }} ""
// {{ 1376 1 0 "8646daa9_7157_4b1c_9e890d1bd905aaac" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 1377 1 0 "4b62c319_e3aa_480a_83210d83ee42ee9d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1378 1 0 "52504b84_9236_44a5_9c1042766db4bd88" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
start = 46;
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1379 1 0 "7cd0cdd4_3062_4479_8419d9683551daf2" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
start = 13;
// }} ""
// {{ 1380 1 0 "7f3a805c_8023_4232_8d25dee133170c5f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1381 1 0 "2401b447_faf4_4b30_b5d1cf8be67474c6" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_DATA_TO_DB.AddField("experimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("OctetTestPlateBarcode", octetPlateBarcode, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("OctetTestPlateWellID", posID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("ProteinTiter", proteinTiter, hslFloat);
WRITE_OCTET_DATA_TO_DB.AddField("Date", date, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("RunID", SampleTrackingDB_glRunID, hslInteger);
WRITE_OCTET_DATA_TO_DB.SetDelimiter(";");
if( 0 == WRITE_OCTET_DATA_TO_DB.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [OctetReadDataTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1382 1 0 "534af447_22ed_41f2_b1033592d7e31e72" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
positionColumn = 11;
// }} ""
// {{ 1383 1 0 "ac1b85ea_1330_4a7b_ab141d622ec7dbf6" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
titerColumn = 16;
// }} ""
// {{ 1384 1 0 "63d66f3b_6048_4f92_8d8e6437080ccacf" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < NumOctetPlates;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 1385 1 0 "a0157f63_29d2_492d_8afc6383d0d4b605" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
Directory=arrOctetDataDir.GetAt(loopCounter1-1);
// }} ""
// {{ 1386 1 0 "648f855d_1824_41ee_830c4ed0ddd10229" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
octetPlateBarcode=arrOctetBarcode.GetAt(loopCounter1-1);
// }} ""
// {{{ 1387 1 0 "e199b989_ad9d_4c10_95dfe88bec1c25c8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
length = StrGetLength(Directory);
// }} ""
// {{ 1388 1 0 "937a2a61_23f1_4d1b_9a30baeb976e220b" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
lengthMid = length - start;
// }} ""
// {{{ 1389 1 0 "0e9df492_f807_493d_81d258e26ba0efbb" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
shortDir = StrMid(Directory, start, lengthMid);
// }} ""
iOctetInputFile = "Z:" + shortDir + "ExcelReport.xls";
// {{ 1391 1 0 "6fa5e09f_8bfd_40ce_9bd12ad4d50ba533" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer3.SetTimer(5) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1392 1 0 "e1447f33_5a14_45c6_9017b68166fe0f15" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer3.WaitTimer(hslFalse, hslFalse) )
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 1393 1 0 "a960c8a5_a424_451e_bf30a6b3170d23bf" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::Init();
// }} ""
// {{{ 1394 1 0 "6c308884_13b6_4a7c_be51969a0fef60c8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::OpenFile(iOctetInputFile);
// }} ""
// {{{ 1395 1 0 "33c9b5f3_6029_4dc3_ac29c34b08f5317e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Octet data file: "), iOctetInputFile);
// }} ""
// {{{ 1396 1 0 "20f4f83d_be0b_438e_a28ec5c6e76417e6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::SelectSheet(2);
// }} ""
// {{ 1397 1 0 "9d043bc1_8c82_4f1b_ad352f86e9997893" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 39;
// }} ""
// {{ 1398 1 0 "31089133_b1fa_4eca_96cc8003e5f56f89" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(readCounter = 0; readCounter < 96;)
{
readCounter = readCounter + 1;
// }} ""
// {{ 1399 1 0 "6a3238f5_d7ca_4f6a_8b5da0bc53a8283e" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_5517F5A7E5094798A30F9C1D22EE7EE8 ;
err.Clear();
// }} ""
// {{{ 1400 1 0 "cefa6536_65b5_472b_88c574d80dfa3771" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(positionColumn, row, posID);
// }} ""
// {{ 1401 1 0 "6a3238f5_d7ca_4f6a_8b5da0bc53a8283e" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_5517F5A7E5094798A30F9C1D22EE7EE8 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1402 1 0 "6bf04e88_c438_4b23_a8bfcf4029f163f2" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle01D4321C2C864f4eA226083B736E8A08.SetOutput(Translate("Well Error\n"), octetPlateBarcode);
dialogHandle01D4321C2C864f4eA226083B736E8A08.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1403 1 0 "6a3238f5_d7ca_4f6a_8b5da0bc53a8283e" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1404 1 0 "7fdebeec_b190_449c_988dc2be92126413" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_7A43F450EA50461481656CC76F96D70B ;
err.Clear();
// }} ""
// {{{ 1405 1 0 "67383eaf_9438_4151_be8a8411e76ea49e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(titerColumn, row, proteinTiterDil2);
// }} ""
// {{ 1406 1 0 "7fdebeec_b190_449c_988dc2be92126413" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_7A43F450EA50461481656CC76F96D70B : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1407 1 0 "56d17df4_525f_44a7_a1fdab435f826df9" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleF472D767E7DE4021A8042840AF8CC06D.SetOutput(Translate("Titer Error\n"), octetPlateBarcode);
dialogHandleF472D767E7DE4021A8042840AF8CC06D.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1408 1 0 "7fdebeec_b190_449c_988dc2be92126413" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{{ 1409 1 0 "78d90d7b_e91c_4d6b_baf8c70515585dc6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
proteinTiterDil = StrFVal(proteinTiterDil2);
// }} ""
// {{ 1410 1 0 "ed3524b2_bc0d_4804_bb2166f8c6b51ac2" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = octetDilFactor * proteinTiterDil;
// }} ""
// {{ 1411 1 0 "94884b1f_4e27_42cb_a6a416a75bfd82a4" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_DATA_TO_DB.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1412 1 0 "51622cea_4047_4f3e_990deaf64b5f522a" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
row = row + 1;
// }} ""
// {{ 1413 1 0 "31089133_b1fa_4eca_96cc8003e5f56f89" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 1414 1 0 "e76016dc_006b_46c0_ba206332a69a2e22" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::End();
// }} ""
// {{ 1415 1 0 "63d66f3b_6048_4f92_8d8e6437080ccacf" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1416 1 0 "ef38008c_1e1b_4b9c_8466411b8d661a0e" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_DATA_TO_DB.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_DATA_TO_DB.RemoveFields();
// }} ""
// {{{ 5 "XAddOctetAutoDatatoDB_OctetV6" "End"
}
// }} ""
// {{{ 5 "XAddOctetAutoDatatoDB_ManualBatchQuant" "Begin"
private function XAddOctetAutoDatatoDB_ManualBatchQuant( variable & arrOctetBarcode[], variable & arrOctetDataDir[], variable NumOctetPlates, variable octetDilFactor ) void {
// }} ""
private dialog dialogHandle6B444358AEB746fa81A92152CA2D604D;
private dialog dialogHandle9E37268AE75948e3BC66BCBB312093BA;
private variable iOctetInputFile;
private variable octetPlateBarcode;
private variable row;
private variable shortDir;
private variable Directory;
private variable length;
private variable proteinTiterDil2;
private variable titerColumn;
private variable posID;
private variable lengthMid;
private variable loopCounter1;
private variable positionColumn;
private variable proteinTiterDil;
private variable start;
private variable readCounter;
private variable time;
private variable proteinTiter;
private variable date;
private timer timer3;
private file WRITE_OCTET_DATA_TO_DB;
private dialog dialogHandle41984EE43E4245dbA55B44AE485F1173;
private dialog dialogHandleC2ADA1E30D68440aA5E7FB810FFF3168;
private dialog dialogHandleDA5D9C92D30D4ddc866A5B8D1C4BD0DC;
// {{ 5 "XAddOctetAutoDatatoDB_ManualBatchQuant" "InitLocals"
// }} ""
// {{ 1302 1 0 "70bf18e3_d658_471e_a642f562d1f8b85c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1303 1 0 "ff01cec7_87d1_4ba4_8a085f1a2577c13d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 1304 1 0 "625e2288_5ca4_4853_a2fd3db60af14e59" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 1305 1 0 "a3c55753_bf75_4141_927f99eb9e6464dc" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = 0;
// }} ""
// {{ 1306 1 0 "aae1bfd6_159d_46db_8cb04621194432b9" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 1307 1 0 "64bccdc2_a391_4c46_92d18eb535eec236" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1308 1 0 "9d9a9875_f579_45c3_97bb90102603e396" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
start = 46;
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1309 1 0 "b8924fe5_1b1a_426d_ac0ffa89d191e630" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
start = 13;
// }} ""
// {{ 1310 1 0 "a9670288_e92c_45f1_b3d06ef28f9da191" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1311 1 0 "e0e6c3a3_dbcb_4198_b7cf8e1952af8218" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_DATA_TO_DB.AddField("experimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("OctetTestPlateBarcode", octetPlateBarcode, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("OctetTestPlateWellID", posID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("ProteinTiter", proteinTiter, hslFloat);
WRITE_OCTET_DATA_TO_DB.AddField("Date", date, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("RunID", SampleTrackingDB_glRunID, hslInteger);
WRITE_OCTET_DATA_TO_DB.SetDelimiter(";");
if( 0 == WRITE_OCTET_DATA_TO_DB.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [OctetReadDataTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1312 1 0 "7b008497_1cc4_498e_b893707b8859a2bb" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
positionColumn = 6;
// }} ""
// {{ 1313 1 0 "247a0157_8519_4403_8aa180be852a3364" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
titerColumn = 13;
// }} ""
// {{ 1314 1 0 "58257d3e_bbed_40ba_a91c59026583cd6a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < NumOctetPlates;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 1315 1 0 "43ce9ee7_f716_4627_9fbc259cb5455dda" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
Directory=arrOctetDataDir.GetAt(loopCounter1-1);
// }} ""
// {{ 1316 1 0 "e19670f4_1df9_4281_9940c4d00b304d57" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
octetPlateBarcode=arrOctetBarcode.GetAt(loopCounter1-1);
// }} ""
// {{{ 1317 1 0 "4ff05138_76b3_49f5_a1916e7b9a16a1c1" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
length = StrGetLength(Directory);
// }} ""
// {{ 1318 1 0 "07b96be0_8038_4437_9b6eecd8175e6d35" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
lengthMid = length - start;
// }} ""
// {{{ 1319 1 0 "4e2f912d_05d2_4e3b_b13356529260a05d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
shortDir = StrMid(Directory, start, lengthMid);
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
iOctetInputFile = "Z:" + shortDir + "ExcelReportQ.xls";
/* {{ 1 "" "1" */ } /* }} "" */
iOctetInputFile = "Z:" + shortDir + "ExcelExportQ.xls";
// {{ 1322 1 0 "9415aefb_5206_4c0b_b6144e82c3c80aa1" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer3.SetTimer(5) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1323 1 0 "f8f6646f_6f8a_46cd_a25a23e60a01b1b9" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer3.WaitTimer(hslFalse, hslFalse) )
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 1324 1 0 "1afcd2cd_cc47_4077_9998b8cdef42b25a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::Init();
// }} ""
// {{{ 1325 1 0 "7c990a21_2b44_47c0_ae5c7abe9201112e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::OpenFile(iOctetInputFile);
// }} ""
// {{{ 1326 1 0 "9fb1d6bf_7f46_42b0_8bca013af60c79b6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Octet data file: "), iOctetInputFile);
// }} ""
// {{{ 1327 1 0 "13f49bf9_f9c8_4b94_8b0da144c5450986" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::SelectSheet(4);
// }} ""
// {{ 1328 1 0 "dd6b9e90_0c18_4359_af7fd36e3e1b6520" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 3;
// }} ""
// {{ 1329 1 0 "b60ef5dd_ad42_4eee_88ef0c97664efbc7" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(readCounter = 0; readCounter < 96;)
{
readCounter = readCounter + 1;
// }} ""
// {{ 1330 1 0 "e4c00a79_16a2_48b5_b50043898e4f9585" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_453195D3B0C44c319E6EDE0F20FCE88A ;
err.Clear();
// }} ""
// {{{ 1331 1 0 "4fe0be28_e56f_4fcb_92f62a20739d0b26" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(positionColumn, row, posID);
// }} ""
// {{ 1332 1 0 "e4c00a79_16a2_48b5_b50043898e4f9585" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_453195D3B0C44c319E6EDE0F20FCE88A : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1333 1 0 "ba50c08b_8ea4_4b70_bce349fb9511127a" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle9E37268AE75948e3BC66BCBB312093BA.SetOutput(Translate("Well Error\n"), octetPlateBarcode);
dialogHandle9E37268AE75948e3BC66BCBB312093BA.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1334 1 0 "e4c00a79_16a2_48b5_b50043898e4f9585" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1335 1 0 "bb0c0805_d0f6_4fca_a58d416edfdec081" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_8FDBA2A9FD7A4177B40833D0F8DF4B53 ;
err.Clear();
// }} ""
// {{{ 1336 1 0 "356f8ba7_61cd_47a9_8a04bbc4414cd23e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(titerColumn, row, proteinTiterDil2);
// }} ""
// {{ 1337 1 0 "bb0c0805_d0f6_4fca_a58d416edfdec081" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_8FDBA2A9FD7A4177B40833D0F8DF4B53 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1338 1 0 "6f83cd20_822a_4831_8c3336f28b2dca2a" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle6B444358AEB746fa81A92152CA2D604D.SetOutput(Translate("Titer Error\n"), octetPlateBarcode);
dialogHandle6B444358AEB746fa81A92152CA2D604D.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1339 1 0 "bb0c0805_d0f6_4fca_a58d416edfdec081" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1340 1 0 "75a0bbde_bd64_4c37_bcb969b9ec40e935" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1341 1 0 "b18d7396_339e_4a3c_9a7e45e781cf9b93" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (proteinTiterDil2 == "Too High")
{
// }} ""
// {{ 1342 1 0 "9fcb84b3_aba1_49ea_84d464dacaffc16e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1343 1 0 "035f817f_00a0_4476_80a51074c036c4a7" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle41984EE43E4245dbA55B44AE485F1173.SetOutput(Translate("Result Too High"));
dialogHandle41984EE43E4245dbA55B44AE485F1173.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1344 1 0 "d6b9ef5b_c9d3_48ff_93fbbc11a5781507" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiterDil = 99999;
// }} ""
// {{ 1345 1 0 "9ab368aa_65c4_4533_8e2e5312cfefeb19" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = proteinTiterDil;
// }} ""
// {{ 1346 1 0 "b18d7396_339e_4a3c_9a7e45e781cf9b93" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 1347 1 0 "62352a5d_40d7_47c4_aa7118dc48ea1201" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (proteinTiterDil2 == "")
{
// }} ""
// {{ 1348 1 0 "860968c2_f780_413f_aa5e75ee05ae555f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1349 1 0 "7747d477_a388_4939_be173f3695b66018" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleC2ADA1E30D68440aA5E7FB810FFF3168.SetOutput(Translate("Result Empty"));
dialogHandleC2ADA1E30D68440aA5E7FB810FFF3168.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1350 1 0 "b90d4f84_c592_4117_a01d92f9b357d8ec" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiterDil = 0;
// }} ""
// {{ 1351 1 0 "896b3ff7_8020_4ec3_9601417946417e09" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = octetDilFactor * proteinTiterDil;
// }} ""
// {{ 1352 1 0 "62352a5d_40d7_47c4_aa7118dc48ea1201" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 1353 1 0 "d6e38722_abfd_4b05_8d9b665c1c1bfdfb" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (proteinTiterDil2 == "Too Low")
{
// }} ""
// {{ 1354 1 0 "c87f1dc9_e96c_45a4_97dab03013326a3a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1355 1 0 "a0cbefdc_fe31_458d_a744cb34ee150206" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleDA5D9C92D30D4ddc866A5B8D1C4BD0DC.SetOutput(Translate("Result Too Low"));
dialogHandleDA5D9C92D30D4ddc866A5B8D1C4BD0DC.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1356 1 0 "f1bfc8e3_47ea_4506_a146da74704c1dae" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiterDil = 0.1;
// }} ""
// {{ 1357 1 0 "6f6102bb_0acf_49b4_8f4766a2909d9416" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = proteinTiterDil;
// }} ""
// {{ 1358 1 0 "d6e38722_abfd_4b05_8d9b665c1c1bfdfb" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 1359 1 0 "310dc6e5_c421_4886_9e5aae4d84d52cf9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1360 1 0 "f096fdf3_fb61_48ad_a2ac823cdf7016e6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
proteinTiterDil = StrFVal(proteinTiterDil2);
// }} ""
// {{ 1361 1 0 "3dc683b0_8b5a_453e_9f1b7538943e3ca5" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = octetDilFactor * proteinTiterDil;
// }} ""
// {{ 1362 1 0 "d6e38722_abfd_4b05_8d9b665c1c1bfdfb" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1363 1 0 "62352a5d_40d7_47c4_aa7118dc48ea1201" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1364 1 0 "b18d7396_339e_4a3c_9a7e45e781cf9b93" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1365 1 0 "6173211a_5dd5_480c_926cfa4a1642719b" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_DATA_TO_DB.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1366 1 0 "dbefd7e4_6398_4dc7_9f6cdf82a4cf67e9" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
row = row + 1;
// }} ""
// {{ 1367 1 0 "b60ef5dd_ad42_4eee_88ef0c97664efbc7" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 1368 1 0 "f1c46045_0fc9_416e_9ceadee29923a76b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::End();
// }} ""
// {{ 1369 1 0 "58257d3e_bbed_40ba_a91c59026583cd6a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1370 1 0 "2354bf80_2a2f_473d_aae15f41958f831e" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_DATA_TO_DB.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_DATA_TO_DB.RemoveFields();
// }} ""
// {{{ 5 "XAddOctetAutoDatatoDB_ManualBatchQuant" "End"
}
// }} ""
// {{{ 5 "DualMediaSetupPlateLookup" "Begin"
function DualMediaSetupPlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[], variable & GoodFlag ) void {
// }} ""
private dialog dialogHandleDADD8E2931BB48ce9B42BCBA46E9AA9E;
private dialog dialogHandleAAD045122E634a9a89B4B297A221A9AB;
private variable sqlStatement;
private variable NumPlatesFound;
private variable BarcodeDialog;
private variable setupPlateBarcode;
private variable SetupPlateFileReadCounter;
private file READ_SETUP_PLATES;
private file READ_SETUP_PLATES_FROM_CLONEPIX;
// {{ 5 "DualMediaSetupPlateLookup" "InitLocals"
barcodes = 0;
Arrbarcodes.SetSize( 0);
GoodFlag = 0;
// }} ""
// {{ 908 1 0 "86a1e810_8564_4fcc_8cf2f31f1cce6973" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 909 1 0 "733b9e61_15d8_4db2_9201dffd42c4f84d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
GoodFlag = 1;
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
sqlStatement = "SELECT DISTINCT Date, PassagePlateBarcode FROM PassagePlateTable " +
"WHERE experimentID = '" + SampleTrackingDB_glExperimentID + "'AND MediaSwitchFlag <> 1" + "ORDER BY Date DESC";
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 911 1 0 "7359f293_d223_4e01_80e4f6988d6ffe44" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
sqlStatement = "SELECT DISTINCT DateTime, DestinationBarcode, ProcessStep, DestinationVesselType FROM SampleTrackingTable " +
"WHERE ExperimentID = '" + SampleTrackingDB_glExperimentID + "' AND ProcessStep = '96DW_Passage' AND DestinationVesselType = '96DW' ORDER BY DateTime DESC";
/* {{ 1 "" "1" */ } /* }} "" */
sqlStatement = "SELECT DISTINCT DateTime, DestinationBarcode, ProcessStep, DestinationVesselType FROM SampleTrackingTable " +
"WHERE ExperimentID = '" + SampleTrackingDB_glExperimentID + "' AND (ProcessStep = '96DW_Passage' OR ProcessStep = '96w_Clone_Hitpick') AND DestinationVesselType = '96DW' ORDER BY DateTime DESC";
// {{{ 914 1 0 "f0fc567f_ab01_4760_bbb108273beff580" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Statement - "), sqlStatement);
// }} ""
// {{ 915 1 0 "48123981_8a26_4411_8997261fc6907d7b" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = Translate("");
// }} ""
// {{ 916 1 0 "deaf2b36_c097_448f_bdd2770f974058ad" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumPlatesFound = 0;
// }} ""
// {{ 917 1 0 "9a58f0f6_699f_474e_bdea1dedbe97acfe" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
Arrbarcodes.SetSize(0);
// }} ""
// {{ 918 1 0 "0aae0b6c_998b_43c2_99891531e5577411" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SETUP_PLATES.AddField("DestinationBarcode", setupPlateBarcode, hslString, 255);
READ_SETUP_PLATES.SetDelimiter(";");
if( 0 == READ_SETUP_PLATES.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 919 1 0 "d4b5f748_c401_492d_ae4733efda40168b" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(SetupPlateFileReadCounter = 0; SetupPlateFileReadCounter < NumPlates;)
{
SetupPlateFileReadCounter = SetupPlateFileReadCounter + 1;
// }} ""
// {{ 920 1 0 "a90eb27f_e24a_4a97_a34871f48f44d02f" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_2E9F6DE551844a3d9D970BC4FFB1CBE6 ;
err.Clear();
// }} ""
// {{ 921 1 0 "66b44a37_b2f1_47f3_9a042cee49d61221" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SETUP_PLATES.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 922 1 0 "706c90cf_0928_47a2_8203d24ab0714f23" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
Arrbarcodes.AddAsLast(setupPlateBarcode);
// }} ""
// {{ 923 1 0 "8fd54585_ec17_4b91_922c8efcfe81d2b3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SetupPlateFileReadCounter == 1)
{
// }} ""
// {{ 924 1 0 "8d4f78a7_d13b_4266_9400f2fe2e45a3c5" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = setupPlateBarcode;
// }} ""
// {{ 925 1 0 "8fd54585_ec17_4b91_922c8efcfe81d2b3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
barcodes = barcodes + ", " + setupPlateBarcode;
// {{ 927 1 0 "8fd54585_ec17_4b91_922c8efcfe81d2b3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 928 1 0 "d05c7e7f_9f8f_48ed_8b78ee21cdaf3073" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
NumPlatesFound = NumPlatesFound + 1;
// }} ""
// {{ 929 1 0 "a90eb27f_e24a_4a97_a34871f48f44d02f" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_2E9F6DE551844a3d9D970BC4FFB1CBE6 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 930 1 0 "bd9ce6d1_f351_479c_b2a794570c3dbc95" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (NumPlatesFound != 0)
{
// }} ""
// {{ 931 1 0 "d9b05787_e995_42b0_9d616b8ed8f94526" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleAAD045122E634a9a89B4B297A221A9AB.SetOutput(Translate("Fewer than "), NumPlates, Translate(" setup plates for this experiment ID exist in the SQL database.\n"), Translate("\nDo you want to continue?\n"), Translate("Press YES if this list is correct or press NO to abort run."));
BarcodeDialog = dialogHandleAAD045122E634a9a89B4B297A221A9AB.ShowOutput(Translate("Number of Setup Plates in SQL Database Error"), hslYesNo | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 932 1 0 "a984883c_6877_4b18_81f01b7deac8366f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
GoodFlag = 0;
// }} ""
// {{ 933 1 0 "bd9ce6d1_f351_479c_b2a794570c3dbc95" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 934 1 0 "045b7b84_6ef8_4de1_aa482e2bfc43553a" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 935 1 0 "a90eb27f_e24a_4a97_a34871f48f44d02f" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 936 1 0 "d4b5f748_c401_492d_ae4733efda40168b" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 937 1 0 "fc285d50_4eff_4e33_967c542d737119e0" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SETUP_PLATES.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SETUP_PLATES.RemoveFields();
// }} ""
// {{ 938 1 0 "2035c181_0a47_4788_b8fddec0ee85d3f7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 939 1 0 "db79cfce_701f_4a5b_8dc726609ba15ae5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 940 1 0 "5d13931a_6148_40de_861f0eb483fcfe18" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (NumPlatesFound == 0)
{
// }} ""
sqlStatement = "SELECT DISTINCT Date, CulturePlateBarcode FROM ClonePixPassageTable " +
"WHERE experimentID = '" + SampleTrackingDB_glExperimentID + "' ORDER BY Date DESC";
// {{ 942 1 0 "781a4936_801b_4ca3_ab4a0cfc8a4e1942" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SETUP_PLATES_FROM_CLONEPIX.AddField("CulturePlateBarcode", setupPlateBarcode, hslString, 255);
READ_SETUP_PLATES_FROM_CLONEPIX.SetDelimiter(";");
if( 0 == READ_SETUP_PLATES_FROM_CLONEPIX.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 943 1 0 "7a686d46_0cc6_4ac7_bffff2ac07614b7b" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(SetupPlateFileReadCounter = 0; SetupPlateFileReadCounter < NumPlates;)
{
SetupPlateFileReadCounter = SetupPlateFileReadCounter + 1;
// }} ""
// {{ 944 1 0 "646ea225_c9e8_4e1a_88cca12de64da7bb" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_455FD92038DF4a969C958F782EFE77DC ;
err.Clear();
// }} ""
// {{ 945 1 0 "b2d1274a_dc15_410d_b6d0e8f211f6b923" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SETUP_PLATES_FROM_CLONEPIX.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 946 1 0 "aae1fde9_7f49_4ad9_bd800f2a0ce1c26c" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
Arrbarcodes.AddAsLast(setupPlateBarcode);
// }} ""
// {{ 947 1 0 "7291eb34_d1be_49de_9d2b4b074eb50faf" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SetupPlateFileReadCounter == 1)
{
// }} ""
// {{ 948 1 0 "fe55a0cb_34ec_4e97_b23a46fe7c326d00" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = setupPlateBarcode;
// }} ""
// {{ 949 1 0 "7291eb34_d1be_49de_9d2b4b074eb50faf" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
barcodes = barcodes + ", " + setupPlateBarcode;
// {{ 951 1 0 "7291eb34_d1be_49de_9d2b4b074eb50faf" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 952 1 0 "646ea225_c9e8_4e1a_88cca12de64da7bb" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_455FD92038DF4a969C958F782EFE77DC : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 953 1 0 "1565e960_8f2c_4ae1_9cc03642b680ec0e" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleDADD8E2931BB48ce9B42BCBA46E9AA9E.SetOutput(Translate("Fewer than "), NumPlates, Translate(" setup plates for this experiment ID exist in the SQL database.\n"), Translate("\nDo you want to continue?\n"), Translate("Press YES if this list is correct or press NO to abort run."));
BarcodeDialog = dialogHandleDADD8E2931BB48ce9B42BCBA46E9AA9E.ShowOutput(Translate("Number of Setup Plates in SQL Database Error"), hslYesNo | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 954 1 0 "dd3fa2c8_6934_40b1_b70a3602e6765686" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 955 1 0 "646ea225_c9e8_4e1a_88cca12de64da7bb" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 956 1 0 "7a686d46_0cc6_4ac7_bffff2ac07614b7b" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 957 1 0 "4daba4bc_aa79_4faa_b8c3d95c64247d27" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SETUP_PLATES_FROM_CLONEPIX.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SETUP_PLATES_FROM_CLONEPIX.RemoveFields();
// }} ""
// {{ 958 1 0 "5d13931a_6148_40de_861f0eb483fcfe18" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 959 1 0 "ee654337_8bd3_4029_be8c8c05693f7b9f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (BarcodeDialog == 7)
{
// }} ""
// {{ 960 1 0 "015e5874_378e_44fd_a5f28402a563c4e8" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 961 1 0 "ee654337_8bd3_4029_be8c8c05693f7b9f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "DualMediaSetupPlateLookup" "End"
}
// }} ""
// {{{ 5 "TerminalSetupPlateLookup" "Begin"
function TerminalSetupPlateLookup( variable NumPlates, variable & barcodes, variable & Arrbarcodes[], variable & GoodFlag ) void {
// }} ""
private dialog dialogHandle4BEDC1CB84B247a2A079963EDB7CA136;
private dialog dialogHandle7B77314935D946b1BC7A4FDE8EA566AC;
private variable sqlStatement;
private variable NumPlatesFound;
private variable BarcodeDialog;
private variable setupPlateBarcode;
private variable SetupPlateFileReadCounter;
private file READ_SETUP_PLATES;
private file READ_SETUP_PLATES_FROM_CLONEPIX;
// {{ 5 "TerminalSetupPlateLookup" "InitLocals"
barcodes = 0;
Arrbarcodes.SetSize( 0);
GoodFlag = 0;
// }} ""
// {{ 1127 1 0 "f84cc463_9c47_4789_abe36b931fce8ec0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1128 1 0 "40db2c53_7c1d_45f5_ba0935994808848b" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
GoodFlag = 1;
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
sqlStatement = "SELECT DISTINCT Date, PassagePlateBarcode FROM PassagePlateTable " +
"WHERE experimentID = '" + SampleTrackingDB_glExperimentID + "'AND MediaSwitchFlag = 1" + "ORDER BY Date DESC";
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1130 1 0 "e4b4988e_8a9f_456b_a0facf0d78afceac" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
sqlStatement = "SELECT DISTINCT DateTime,  DestinationBarcode, ProcessStep, DestinationVesselType FROM SampleTrackingTable" +
"WHERE ExperimentID = '" + SampleTrackingDB_glExperimentID + "' AND ProcessStep = '96DW_Passage' AND DestinationVesselType = '96DW' ORDER BY DateTime DESC";
// {{ 1132 1 0 "daac39c1_a72c_4825_afe404f4caba69c7" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = Translate("");
// }} ""
// {{ 1133 1 0 "e1da7997_99eb_4d91_970782a02ef34f31" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumPlatesFound = 0;
// }} ""
// {{ 1134 1 0 "5faca2e1_2c0e_410c_ae9ebd8f14535063" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
Arrbarcodes.SetSize(0);
// }} ""
// {{ 1135 1 0 "a38b92dd_ffbc_4730_b9e8686f59be85cb" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SETUP_PLATES.AddField("DestinationBarcode", setupPlateBarcode, hslString, 255);
READ_SETUP_PLATES.SetDelimiter(";");
if( 0 == READ_SETUP_PLATES.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1136 1 0 "5e57641e_68a9_4549_8caabbcfa955961d" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(SetupPlateFileReadCounter = 0; SetupPlateFileReadCounter < NumPlates;)
{
SetupPlateFileReadCounter = SetupPlateFileReadCounter + 1;
// }} ""
// {{ 1137 1 0 "7ce74b27_04df_4357_ab1573d6875e62d6" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_38AEFCBA190A4d66982E689EF9CE59B7 ;
err.Clear();
// }} ""
// {{ 1138 1 0 "e8bee135_e868_44d3_932e737d0863218b" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SETUP_PLATES.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1139 1 0 "960381f4_58f9_4daf_917eb5791b05ff58" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
Arrbarcodes.AddAsLast(setupPlateBarcode);
// }} ""
// {{ 1140 1 0 "1e57d626_12fa_494d_838a6943665bb734" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SetupPlateFileReadCounter == 1)
{
// }} ""
// {{ 1141 1 0 "27b5853d_5c17_49cf_9e45fc283a58e79e" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = setupPlateBarcode;
// }} ""
// {{ 1142 1 0 "1e57d626_12fa_494d_838a6943665bb734" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
barcodes = barcodes + ", " + setupPlateBarcode;
// {{ 1144 1 0 "1e57d626_12fa_494d_838a6943665bb734" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1145 1 0 "f188f627_71f7_4b02_974f44709e8ef6e5" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
NumPlatesFound = NumPlatesFound + 1;
// }} ""
// {{ 1146 1 0 "7ce74b27_04df_4357_ab1573d6875e62d6" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_38AEFCBA190A4d66982E689EF9CE59B7 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1147 1 0 "5b8baf2c_a99f_469a_bee7df2bde79dc72" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (NumPlatesFound != 0)
{
// }} ""
// {{ 1148 1 0 "b9d436d6_86fd_48d5_a6ec92769b17a40e" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle7B77314935D946b1BC7A4FDE8EA566AC.SetOutput(Translate("Fewer than "), NumPlates, Translate(" setup plates for this experiment ID exist in the SQL database.\n"), Translate("\nDo you want to continue?\n"), Translate("Press YES if this list is correct or press NO to abort run."));
BarcodeDialog = dialogHandle7B77314935D946b1BC7A4FDE8EA566AC.ShowOutput(Translate("Number of Setup Plates in SQL Database Error"), hslYesNo | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1149 1 0 "08332d9d_8219_4951_adff297af2968daa" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
GoodFlag = 0;
// }} ""
// {{ 1150 1 0 "5b8baf2c_a99f_469a_bee7df2bde79dc72" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1151 1 0 "ae56734e_d477_4fb1_bae9ebb97456bb6d" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 1152 1 0 "7ce74b27_04df_4357_ab1573d6875e62d6" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1153 1 0 "5e57641e_68a9_4549_8caabbcfa955961d" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1154 1 0 "86541706_feda_4444_adf3ce795faf12ea" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SETUP_PLATES.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SETUP_PLATES.RemoveFields();
// }} ""
// {{ 1155 1 0 "c5841480_b0c1_4b0b_b4feafd89ab49b1b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1156 1 0 "62417bbd_61c8_4739_bb498a6e1ed777e2" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1157 1 0 "16e8684d_c192_47af_b55df6cfb143ed27" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (NumPlatesFound == 0)
{
// }} ""
sqlStatement = "SELECT DISTINCT Date, CulturePlateBarcode FROM ClonePixPassageTable " +
"WHERE experimentID = '" + SampleTrackingDB_glExperimentID + "' ORDER BY Date DESC";
// {{ 1159 1 0 "43203456_6fc2_45c7_b0d3758aeb826e85" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SETUP_PLATES_FROM_CLONEPIX.AddField("CulturePlateBarcode", setupPlateBarcode, hslString, 255);
READ_SETUP_PLATES_FROM_CLONEPIX.SetDelimiter(";");
if( 0 == READ_SETUP_PLATES_FROM_CLONEPIX.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1160 1 0 "50acaf74_5864_406c_8118397ba4d8e7e3" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(SetupPlateFileReadCounter = 0; SetupPlateFileReadCounter < NumPlates;)
{
SetupPlateFileReadCounter = SetupPlateFileReadCounter + 1;
// }} ""
// {{ 1161 1 0 "017aabe8_a430_4e6b_a036e0385018bd8e" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_CA9111CFFD414096B148D0273DE07B71 ;
err.Clear();
// }} ""
// {{ 1162 1 0 "b1062e77_7787_4bb3_9d91cc6823a81b1f" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SETUP_PLATES_FROM_CLONEPIX.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1163 1 0 "0aebf011_a4fe_4069_ba688cb4f4910959" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
Arrbarcodes.AddAsLast(setupPlateBarcode);
// }} ""
// {{ 1164 1 0 "02cad908_b227_462b_a3e2da8935ed0dbf" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SetupPlateFileReadCounter == 1)
{
// }} ""
// {{ 1165 1 0 "ef67e067_2dcf_416d_912fd5a3be28b879" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
barcodes = setupPlateBarcode;
// }} ""
// {{ 1166 1 0 "02cad908_b227_462b_a3e2da8935ed0dbf" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
barcodes = barcodes + ", " + setupPlateBarcode;
// {{ 1168 1 0 "02cad908_b227_462b_a3e2da8935ed0dbf" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1169 1 0 "017aabe8_a430_4e6b_a036e0385018bd8e" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_CA9111CFFD414096B148D0273DE07B71 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1170 1 0 "b46e1a9f_93c1_43e3_bb8edced31a1c501" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle4BEDC1CB84B247a2A079963EDB7CA136.SetOutput(Translate("Fewer than "), NumPlates, Translate(" setup plates for this experiment ID exist in the SQL database.\n"), Translate("\nDo you want to continue?\n"), Translate("Press YES if this list is correct or press NO to abort run."));
BarcodeDialog = dialogHandle4BEDC1CB84B247a2A079963EDB7CA136.ShowOutput(Translate("Number of Setup Plates in SQL Database Error"), hslYesNo | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1171 1 0 "3d946cd4_eca3_4206_85065fe7e5b7044b" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 1172 1 0 "017aabe8_a430_4e6b_a036e0385018bd8e" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1173 1 0 "50acaf74_5864_406c_8118397ba4d8e7e3" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1174 1 0 "d1009001_08d9_4be5_80e07c7229a9c49c" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SETUP_PLATES_FROM_CLONEPIX.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SETUP_PLATES_FROM_CLONEPIX.RemoveFields();
// }} ""
// {{ 1175 1 0 "16e8684d_c192_47af_b55df6cfb143ed27" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1176 1 0 "2a07027b_63a6_4e0f_96c9efbd4cbdd993" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (BarcodeDialog == 7)
{
// }} ""
// {{ 1177 1 0 "a4268733_a59d_4d51_8af978191f01089e" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 1178 1 0 "2a07027b_63a6_4e0f_96c9efbd4cbdd993" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "TerminalSetupPlateLookup" "End"
}
// }} ""
// {{{ 5 "AddFilterPlatePipettingDataToDB" "Begin"
function AddFilterPlatePipettingDataToDB( variable & iArrSampleTrackingFiles[], variable iCultureVolume, variable iSourceFile ) void {
// }} ""
private variable previousSourcePosID;
private variable arrSize;
private variable previousSourceBarcode;
private variable sqlStatement;
private variable previousTargetBarcode;
private variable targetPosID;
private variable arrIndex;
private variable previousTargetPosID;
private variable statusSummary;
private variable sourceBarcode;
private variable targetBarcode;
private variable time;
private variable date;
private file READ_SAMPLE_TRACKING_FILE;
private file WRITE_HITPICK_DATA;
private variable var384PosID;
private variable varTermBC;
private variable cloneName;
private variable varTermPosID;
private variable var384BC;
private variable var96PosID;
private variable var96BC;
private variable sourcePosID;
private file READ_WORKLIST_FILE;
private variable day14titer;
private variable loopcounter;
private variable SourceVesselType;
private variable targetVesselType;
private variable ProcessStep;
// {{ 5 "AddFilterPlatePipettingDataToDB" "InitLocals"
// }} ""
// {{{ 212 1 0 "9b990c87_56da_453e_937b01837d9f45ac" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 213 1 0 "c0c02202_9f9e_44e3_8aaf5be622f97285" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 214 1 0 "c981e220_005b_40bd_8d3de38b974ce1b8" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 215 1 0 "ee1fd78e_2f99_4195_927d0cbdb88af285" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
SourceVesselType = "96DW";
targetVesselType = "96w_FilterPlate";
ProcessStep = "96DWFB_FilterPlateHitpick";
// {{ 217 1 0 "6e4331b9_c7b9_4631_9d420fad6d5504b4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 218 1 0 "d9e3e044_abe0_433b_b3dc22b619f91421" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_HITPICK_DATA.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_HITPICK_DATA.AddField("SampleID", cloneName, hslString, 255);
WRITE_HITPICK_DATA.AddField("SourceBarcode", sourceBarcode, hslString, 255);
WRITE_HITPICK_DATA.AddField("SourceWell", sourcePosID, hslString, 255);
WRITE_HITPICK_DATA.AddField("SourceVesselType", SourceVesselType, hslString, 255);
WRITE_HITPICK_DATA.AddField("DestinationBarcode", targetBarcode, hslString, 255);
WRITE_HITPICK_DATA.AddField("DestinationWell", targetPosID, hslString, 255);
WRITE_HITPICK_DATA.AddField("DestinationVesselType", targetVesselType, hslString, 255);
WRITE_HITPICK_DATA.AddField("DateTime", date, hslString, 255);
WRITE_HITPICK_DATA.AddField("SampleTransferVol", iCultureVolume, hslString, 255);
WRITE_HITPICK_DATA.AddField("TotalVol", iCultureVolume, hslString, 255);
WRITE_HITPICK_DATA.AddField("ProcessStep", ProcessStep, hslString, 255);
WRITE_HITPICK_DATA.SetDelimiter(";");
if( 0 == WRITE_HITPICK_DATA.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [SampleTrackingTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 219 1 0 "4efc2edf_0fed_4151_ae3b48961e602a0e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 220 1 0 "60c42220_37b4_4eb7_87f333ee72302964" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
arrSize=iArrSampleTrackingFiles.GetSize();
// }} ""
// {{ 221 1 0 "135344df_2513_4633_a829da13f7c5ab9f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourceBarcode = Translate("");
// }} ""
// {{ 222 1 0 "489a7100_8b3d_4843_95949084f9e6f7b8" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetBarcode = Translate("");
// }} ""
// {{ 223 1 0 "29580b50_91b9_4586_b0ed57b293e1a2ee" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousSourcePosID = Translate("");
// }} ""
// {{ 224 1 0 "a021abcc_e8f7_42f7_ae7fa8fba291e464" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
previousTargetPosID = Translate("");
// }} ""
// {{ 225 1 0 "21de5702_be44_41c6_976240002e438c45" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(arrIndex = 0; arrIndex < arrSize;)
{
arrIndex = arrIndex + 1;
// }} ""
// {{ 226 1 0 "d865a0cb_ec9b_4f9b_9ee8850ff7ca5130" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_SAMPLE_TRACKING_FILE.AddField("TRackBC", targetBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TPositionId", targetPosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SRackBC", sourceBarcode, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("SPositionId", sourcePosID, hslString, 255);
READ_SAMPLE_TRACKING_FILE.AddField("TSumStateDescription", statusSummary, hslString, 255);
if( 0 == READ_SAMPLE_TRACKING_FILE.Open(iArrSampleTrackingFiles.ElementAt( arrIndex -1) + " " + "ReportMapping$", hslRead, "SELECT DISTINCT [SPositionId], [SRackBC], [TRackBC], [TPositionID], [TSumStateDescription] FROM [ReportMapping]") )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iArrSampleTrackingFiles.ElementAt( arrIndex -1), "HxMetEdCompCmd");
}
// }} ""
// {{ 227 1 0 "64c5ed3b_3ae8_4584_b645f1125bd3ff55" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopcounter = 0;
while (
   (READ_SAMPLE_TRACKING_FILE.Eof() == 0)
)
{
loopcounter = loopcounter + 1;
// }} ""
// {{ 228 1 0 "3a265852_1653_4f79_974e0a71ab6915c1" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_SAMPLE_TRACKING_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 229 1 0 "255f9218_65ce_452c_9cc4860194502541" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (statusSummary != "Not used")
{
// }} ""
// {{{ 230 1 0 "3563c5f8_ef5a_4db9_9e5c757d8678052b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
sqlStatement = StrConcat12(Translate("SELECT DISTINCT [384w Plate Barcode], [384w Pos ID], [96w Plate Barcode], [96w Pos ID], [Terminal Study Plate Barcode], [96DW Plate Well ID], [Fed Batch Day 14 Titer (mg/L)] FROM [ExperimentData] WHERE "), Translate("[Terminal Study Plate Barcode] = '"), sourceBarcode, Translate("' AND [96DW Plate Well ID] = '"), sourcePosID, Translate("'"), Translate(""), Translate(""), Translate(""), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 231 1 0 "b0f6e5d5_1eb0_429d_9fbb48420b015e2e" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_WORKLIST_FILE.AddField("384w Plate Barcode", var384BC, hslString, 255);
READ_WORKLIST_FILE.AddField("384w Pos ID", var384PosID, hslString, 255);
READ_WORKLIST_FILE.AddField("96w Plate Barcode", var96BC, hslString, 255);
READ_WORKLIST_FILE.AddField("96w Pos ID", var96PosID, hslString, 255);
READ_WORKLIST_FILE.AddField("Terminal Study Plate Barcode", varTermBC, hslString, 255);
READ_WORKLIST_FILE.AddField("96DW Plate Well ID", varTermPosID, hslString, 255);
READ_WORKLIST_FILE.AddField("Fed Batch Day 14 Titer (mg/L)", day14titer, hslFloat);
if( 0 == READ_WORKLIST_FILE.Open(iSourceFile + " " + "ExperimentData$", hslRead, sqlStatement) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iSourceFile, "HxMetEdCompCmd");
}
// }} ""
// {{ 232 1 0 "6a68c82f_fd38_41a4_b7ee2d4d84ad4653" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_WORKLIST_FILE.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 233 1 0 "b22422bb_ccae_42b3_8ec5f11d22c68528" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 234 1 0 "166b1c4b_cd04_477d_924dee36e61a224a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var384BC != "None")
{
// }} ""
// {{{ 235 1 0 "04cc5925_39c1_42f1_b25b4f394ba1a18a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
cloneName = StrConcat4(var384BC, Translate("."), var384PosID, Translate(""));
// }} ""
// {{ 236 1 0 "166b1c4b_cd04_477d_924dee36e61a224a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{{ 237 1 0 "6fdcb1d9_e96e_464a_a0a3378f93c81e9b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
cloneName = StrConcat4(var96BC, Translate("."), var96PosID, Translate(""));
// }} ""
// {{ 238 1 0 "166b1c4b_cd04_477d_924dee36e61a224a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 239 1 0 "8edf5b3a_dd9b_4f4a_ae66caa78f5516c9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (sourceBarcode != "----------")
{
// }} ""
// {{ 240 1 0 "293697a6_c685_4597_83dd92f610d6c711" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_HITPICK_DATA.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 241 1 0 "8edf5b3a_dd9b_4f4a_ae66caa78f5516c9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 242 1 0 "34996740_b6d8_4291_ac78bb7efca4b05d" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_WORKLIST_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_WORKLIST_FILE.RemoveFields();
// }} ""
// {{ 243 1 0 "255f9218_65ce_452c_9cc4860194502541" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 244 1 0 "64c5ed3b_3ae8_4584_b645f1125bd3ff55" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 245 1 0 "673c372c_4b4f_423a_9447ef816ab617c5" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_SAMPLE_TRACKING_FILE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_SAMPLE_TRACKING_FILE.RemoveFields();
// }} ""
// {{ 246 1 0 "20f15be6_5194_4758_9cfa19ca420dfb8a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 247 1 0 "75939200_f941_4049_accd553ea4bb0ef2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLMapReport::DeleteFile(iArrSampleTrackingFiles.ElementAt( arrIndex -1));
// }} ""
// {{ 248 1 0 "21de5702_be44_41c6_976240002e438c45" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 249 1 0 "3580e617_d7a1_420b_a1079338e1ee0a1d" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_HITPICK_DATA.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_HITPICK_DATA.RemoveFields();
// }} ""
// {{{ 5 "AddFilterPlatePipettingDataToDB" "End"
}
// }} ""
// {{{ 5 "AddCellDensityMethodToDB" "Begin"
function AddCellDensityMethodToDB( variable iTestPlateBarcode, variable iAssayDay, variable iDilution, variable iDeviceSerialNumber, variable iResultLocation1, variable iAssaySpecificLot1, variable iAssaySpecificLot1Type, variable iAssaySpecificLot2, variable iAssaySpecificLot2Type ) void {
// }} ""
private variable iTestPlateType;
private variable AssayType;
private variable time;
private variable date;
private file WRITE_CELLAVISTA_METHOD_TABLE;
// {{ 5 "AddCellDensityMethodToDB" "InitLocals"
// }} ""
// {{{ 116 1 0 "0aa11230_5827_40b9_824efc0aeae652ec" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 117 1 0 "de5ec765_7f72_4ea8_82c6bc279d446017" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 118 1 0 "1746a1fa_723b_40a0_9d99b9186489e1a2" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 119 1 0 "03959fe2_8968_4920_9868ac0d8af4fea3" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
iTestPlateType = "384w";
AssayType = "CellViability_Hoechst-PI";
// {{ 121 1 0 "6861ed33_4058_4be3_af2189c8912a61b6" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_CELLAVISTA_METHOD_TABLE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("DateTime", date, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("SampleBarcode", iTestPlateBarcode, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("SampleVesselType", iTestPlateType, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("AssayType", AssayType, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("AssayDay", iAssayDay, hslInteger);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("Dilution", iDilution, hslFloat);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("AssaySpecificLotNum1", iAssaySpecificLot1, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("AssaySpecificLotNum1Type", iAssaySpecificLot1Type, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("AssaySpecificLotNum2", iAssaySpecificLot2, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("AssaySpecificLotNum2Type", iAssaySpecificLot2Type, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("DeviceSerialNumber", iDeviceSerialNumber, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("ResultsLocation1", iResultLocation1, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.SetDelimiter(";");
if( 0 == WRITE_CELLAVISTA_METHOD_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticMethodTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
Trace ("ExperimentID - ",SampleTrackingDB_glExperimentID);
Trace ("DateTime - ",date);
Trace ("SampleBC - ",iTestPlateBarcode);
Trace ("SampleVessel - ",iTestPlateType);
Trace ("AssayType - ",AssayType);
Trace ("AssayDay - ",iAssayDay);
Trace ("Dilution - ",iDilution);
Trace ("AssayLot1 - ",iAssaySpecificLot1);
Trace ("AssayLot1Type - ",iAssaySpecificLot1Type);
Trace ("AssayLot2 - ",iAssaySpecificLot2);
Trace ("AssayLot2Type - ",iAssaySpecificLot2Type);
Trace ("CV Serial - ",iDeviceSerialNumber);
Trace ("ResultLocation - ",iResultLocation1);
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 123 1 0 "811325ea_aab5_44e6_8a3d64b18b3d76e9" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_CELLAVISTA_METHOD_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 124 1 0 "7a883e71_72d9_4294_849dc0526e10b8e8" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_CELLAVISTA_METHOD_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_CELLAVISTA_METHOD_TABLE.RemoveFields();
// }} ""
// {{{ 5 "AddCellDensityMethodToDB" "End"
}
// }} ""
// {{{ 5 "AddConfluenceMethodToDB" "Begin"
function AddConfluenceMethodToDB( variable iTestPlateBarcode, variable iTestPlateType, variable iAssayDay, variable iDeviceSerialNumber, variable iResultLocation1 ) void {
// }} ""
private variable AssayType;
private variable time;
private variable date;
private file WRITE_CELLAVISTA_METHOD_TABLE;
// {{ 5 "AddConfluenceMethodToDB" "InitLocals"
// }} ""
// {{{ 179 1 0 "47a2fcc7_0593_42d3_b4296c95d7c5156e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 180 1 0 "726ce829_9913_4d15_9effbf2db10dba3a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 181 1 0 "03093089_db13_4d6b_b9c1f89d97a1eb47" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 182 1 0 "1d077311_19a5_4b72_91a8058c1282b9b5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
AssayType = "CellConfluence";
// {{ 184 1 0 "73cb5c62_9a3b_4665_9465ba819276e6a0" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_CELLAVISTA_METHOD_TABLE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("DateTime", date, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("SampleBarcode", iTestPlateBarcode, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("SampleVesselType", iTestPlateType, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("AssayType", AssayType, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("AssayDay", iAssayDay, hslInteger);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("DeviceSerialNumber", iDeviceSerialNumber, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.AddField("ResultsLocation1", iResultLocation1, hslString, 255);
WRITE_CELLAVISTA_METHOD_TABLE.SetDelimiter(";");
if( 0 == WRITE_CELLAVISTA_METHOD_TABLE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticMethodTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 185 1 0 "f3cc3d74_899b_45d2_ac70fd185480ad4c" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_CELLAVISTA_METHOD_TABLE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 186 1 0 "0eae3808_8fdf_4b7e_9e66c6d424335986" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_CELLAVISTA_METHOD_TABLE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_CELLAVISTA_METHOD_TABLE.RemoveFields();
// }} ""
// {{{ 5 "AddConfluenceMethodToDB" "End"
}
// }} ""
// {{{ 5 "XAddOctetResultDataToDB_Auto" "Begin"
private function XAddOctetResultDataToDB_Auto( variable & arrOctetBarcode[], variable & arrOctetDataDir[], variable NumSamplePlates, variable octetDilFactor, variable SampleVesselType ) void {
// }} ""
private dialog dialogHandle9CBF3A6F430B421bAA6EBE0808F7BCC3;
private dialog dialogHandle8E9595B71D544475A1705CC702C229FC;
private variable iOctetInputFile;
private variable octetPlateBarcode;
private variable row;
private variable shortDir;
private variable Directory;
private variable proteinTiterDil2;
private variable length;
private variable titerColumn;
private variable posID;
private variable lengthMid;
private variable loopCounter1;
private variable positionColumn;
private variable proteinTiterDil;
private variable start;
private variable readCounter;
private variable time;
private variable proteinTiter;
private variable date;
private timer timer3;
private file WRITE_OCTET_DATA_TO_DB;
private variable SampleID;
private variable iResultType;
private variable iResultUnits;
private variable AssayType;
private variable proteinBindingRate;
private dialog dialogHandle7CBD3ACB6464438b8378C9523E254DDE;
private variable BRColumn;
private file WRITE_OCTET_DATA_TO_DB_BINDINGRATE;
private variable NumSampleWells;
private variable NumOctetPlates;
// {{ 5 "XAddOctetResultDataToDB_Auto" "InitLocals"
// }} ""
// {{ 1450 1 0 "13e477c8_8742_4471_9213cc3a260f5444" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 1451 1 0 "951ba6c3_ec19_48a5_b20c77f1d70eaa02" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 1452 1 0 "73876e01_7744_47aa_979f2762f8c81d82" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 1453 1 0 "30a3252c_f980_4a2d_a6a7a1e3e9ab0dcb" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = 0;
// }} ""
// {{ 1454 1 0 "991ca628_590d_4bcb_95d13b28aba40543" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 1455 1 0 "f50d2f07_6a6f_4393_9ebbbf0c9f789869" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
AssayType = "Octet_ProteinA";
SampleID = "NA";
// {{ 1457 1 0 "8c2b27dc_85dd_44fb_b61a14273bf532a6" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1458 1 0 "817567ce_446f_42d6_806ad0ef1e3d4dff" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SampleVesselType == "384w_Octet")
{
// }} ""
// {{ 1459 1 0 "ebea97d8_e376_45f5_a1dea44aa9520c5c" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumOctetPlates = 1;
// }} ""
// {{ 1460 1 0 "9a396a77_11ea_4887_93e51cd96c0cf356" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
NumSampleWells = NumSamplePlates * 96;
// }} ""
// {{ 1461 1 0 "817567ce_446f_42d6_806ad0ef1e3d4dff" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1462 1 0 "05640b12_1d43_4db0_a886ef499586daca" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SampleVesselType == "96w_Octet")
{
// }} ""
// {{ 1463 1 0 "5b16f980_bb19_40c8_bf0833731ebaa2fc" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumOctetPlates = NumSamplePlates;
// }} ""
// {{ 1464 1 0 "9c9e3375_2ccf_4cd2_b6991bd0fa3342e9" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumSampleWells = 96;
// }} ""
// {{ 1465 1 0 "05640b12_1d43_4db0_a886ef499586daca" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 1466 1 0 "6e82bf6c_6832_495f_9f969ecf70491011" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 1467 1 0 "51867a01_e085_4678_bc85d1b4876b19cd" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
start = 46;
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 1468 1 0 "1eee689c_d189_458e_a49de9c02f874dae" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
start = 13;
// }} ""
// {{ 1469 1 0 "26a34f47_576d_47f1_9c89569a5459cbda" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 1470 1 0 "34d971fc_90d0_4b96_8c4c7bedd5f978c4" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_DATA_TO_DB.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("SampleID", SampleID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("SampleBarcode", octetPlateBarcode, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("SampleWell", posID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("SampleVesselType", SampleVesselType, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("Result", proteinTiter, hslFloat);
WRITE_OCTET_DATA_TO_DB.AddField("ResultUnits", iResultUnits, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("RestultType", iResultType, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("DateTime", date, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("AssayType", AssayType, hslString, 255);
WRITE_OCTET_DATA_TO_DB.SetDelimiter(";");
if( 0 == WRITE_OCTET_DATA_TO_DB.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1471 1 0 "28e674a8_fc92_4d36_ae4223b59c374554" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("SampleID", SampleID, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("SampleBarcode", octetPlateBarcode, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("SampleWell", posID, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("SampleVesselType", SampleVesselType, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("Result", proteinBindingRate, hslFloat);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("ResultUnits", iResultUnits, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("RestultType", iResultType, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("DateTime", date, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("AssayType", AssayType, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.SetDelimiter(";");
if( 0 == WRITE_OCTET_DATA_TO_DB_BINDINGRATE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 1472 1 0 "42bcf1d1_3abe_48fd_81731dcfe1b96290" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
positionColumn = 11;
// }} ""
// {{ 1473 1 0 "29d10d26_e977_4be0_bbf17c73afb41d85" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
titerColumn = 16;
// }} ""
// {{ 1474 1 0 "89ee7953_a832_463d_8e55900c092748b5" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
BRColumn = 14;
// }} ""
// {{ 1475 1 0 "66bfcfd3_f66e_4651_a05b8bffaeadb57a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < NumOctetPlates;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 1476 1 0 "1e6a2564_8c37_4810_a172cfafd8ba7648" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
Directory=arrOctetDataDir.GetAt(loopCounter1-1);
// }} ""
// {{ 1477 1 0 "05ebd8d8_dd0d_4672_a13f390e961cded6" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
octetPlateBarcode=arrOctetBarcode.GetAt(loopCounter1-1);
// }} ""
// {{{ 1478 1 0 "6ef51030_39ed_4ee1_879796b7fd86eba7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
length = StrGetLength(Directory);
// }} ""
// {{ 1479 1 0 "3be2ab5d_f97b_46c9_a63bea200530d5bb" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
lengthMid = length - start;
// }} ""
// {{{ 1480 1 0 "0ebebafc_7062_4e94_8d5b79b44c0042d8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
shortDir = StrMid(Directory, start, lengthMid);
// }} ""
iOctetInputFile = "Z:" + shortDir + "ExcelReport.xls";
// {{ 1482 1 0 "7c078f2b_ab78_46b7_a919fe77c86bda0b" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer3.SetTimer(5) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1483 1 0 "c2644c9d_26de_428e_ad1a61e6094ed793" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer3.WaitTimer(hslFalse, hslFalse) )
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 1484 1 0 "9def7721_581d_4a7a_8cfa9d24e6d27f32" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::Init();
// }} ""
// {{{ 1485 1 0 "87269bde_7268_4a19_9abd51a71f9423ff" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::OpenFile(iOctetInputFile);
// }} ""
// {{{ 1486 1 0 "15f76c54_0e4e_45fe_977d03a84221f04e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Octet data file: "), iOctetInputFile);
// }} ""
// {{{ 1487 1 0 "cd03b1ef_f4f0_4725_8592dbd0f1ffb638" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::SelectSheet(2);
// }} ""
// {{ 1488 1 0 "12a95159_1e2d_4bcc_80882fd8529c9320" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
row = 39;
// }} ""
// {{ 1489 1 0 "a9fd917c_fd55_4ce3_981ae05e274c8f5e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(readCounter = 0; readCounter < NumSampleWells;)
{
readCounter = readCounter + 1;
// }} ""
// {{ 1490 1 0 "7244858c_3592_49ff_bef5b7475bf5fcd4" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_C4DFE1B8A3FD43a2A5BFBAEBE08C7BE1 ;
err.Clear();
// }} ""
// {{{ 1491 1 0 "c968e80e_8609_492b_aba06b2f43379be0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(positionColumn, row, posID);
// }} ""
// {{ 1492 1 0 "7244858c_3592_49ff_bef5b7475bf5fcd4" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_C4DFE1B8A3FD43a2A5BFBAEBE08C7BE1 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1493 1 0 "75a5585b_6a06_4dab_a6de1fb8c93ffae4" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle8E9595B71D544475A1705CC702C229FC.SetOutput(Translate("Well Error\n"), octetPlateBarcode);
dialogHandle8E9595B71D544475A1705CC702C229FC.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1494 1 0 "7244858c_3592_49ff_bef5b7475bf5fcd4" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1495 1 0 "af13e0fa_f4ea_4b0d_aa0d991d91268ee7" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_7D8A34C13D6D4e29B07AF69939910B3F ;
err.Clear();
// }} ""
// {{{ 1496 1 0 "c8608ea6_f2e1_4096_9f04040cbf09fb45" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(titerColumn, row, proteinTiterDil2);
// }} ""
// {{ 1497 1 0 "af13e0fa_f4ea_4b0d_aa0d991d91268ee7" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_7D8A34C13D6D4e29B07AF69939910B3F : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1498 1 0 "1f42cb1b_4459_4a39_80c6a57e4cb73b9c" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle9CBF3A6F430B421bAA6EBE0808F7BCC3.SetOutput(Translate("Titer Error\n"), octetPlateBarcode);
dialogHandle9CBF3A6F430B421bAA6EBE0808F7BCC3.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1499 1 0 "af13e0fa_f4ea_4b0d_aa0d991d91268ee7" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{{ 1500 1 0 "caf4f6cc_3eee_4c09_bf03d18f3a71d148" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
proteinTiterDil = StrFVal(proteinTiterDil2);
// }} ""
// {{ 1501 1 0 "d5bf7fd9_8f94_4b66_bded675c010829c8" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
proteinTiter = octetDilFactor * proteinTiterDil;
// }} ""
// {{ 1502 1 0 "fba08bae_fcd6_49ad_91e1e1e89e84b246" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_489A4C34B89546d5B799A3717D46058A ;
err.Clear();
// }} ""
// {{{ 1503 1 0 "7fc1beda_c3e5_4f9d_bc6c19cd677d0853" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::GetCellValue(BRColumn, row, proteinBindingRate);
// }} ""
// {{ 1504 1 0 "fba08bae_fcd6_49ad_91e1e1e89e84b246" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_489A4C34B89546d5B799A3717D46058A : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 1505 1 0 "f887fba6_9f90_4986_8c2e49b8c7504785" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle7CBD3ACB6464438b8378C9523E254DDE.SetOutput(Translate("Binding Rate Error\n"), octetPlateBarcode);
dialogHandle7CBD3ACB6464438b8378C9523E254DDE.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 1506 1 0 "fba08bae_fcd6_49ad_91e1e1e89e84b246" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 1507 1 0 "3b380b1e_4ea1_4900_a73b39d2e0d66375" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
iResultUnits = "mg/L";
iResultType = "Titer";
// {{ 1509 1 0 "28b046f4_0b9c_4e45_be48845dac2d8f3a" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_DATA_TO_DB.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1510 1 0 "f1f833c5_b15b_4959_876ab697e58d0798" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
iResultUnits = "NA";
iResultType = "Binding Rate";
// {{ 1512 1 0 "8b8b358e_8fc4_446c_9b9267348e48a297" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_DATA_TO_DB_BINDINGRATE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 1513 1 0 "e110289a_c363_48ba_861b20a6eb4a4183" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
row = row + 1;
// }} ""
// {{ 1514 1 0 "a9fd917c_fd55_4ce3_981ae05e274c8f5e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 1515 1 0 "434e78ad_eb28_4832_a33ad397244b315f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
MicrosoftExcel::End();
// }} ""
// {{ 1516 1 0 "66bfcfd3_f66e_4651_a05b8bffaeadb57a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 1517 1 0 "55018d03_8116_4add_b4ba7530f2eb58ea" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_DATA_TO_DB.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_DATA_TO_DB.RemoveFields();
// }} ""
// {{ 1518 1 0 "8e23a526_a14f_4f6b_b0a476d56ee23a26" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_DATA_TO_DB_BINDINGRATE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.RemoveFields();
// }} ""
// {{{ 5 "XAddOctetResultDataToDB_Auto" "End"
}
// }} ""
// {{{ 5 "AddOctetProAResultDataToDB_Manual" "Begin"
function AddOctetProAResultDataToDB_Manual( variable octetPlateBarcode, variable iOctetInputFile, variable NumSamplePlates, variable SampleVesselType ) void {
// }} ""
private variable SampleID;
private variable iResultType;
private variable NumSampleWells;
private variable iResultUnits;
private variable AssayType;
private variable loopCounter1;
private variable NumOctetPlates;
private variable time;
private variable date;
private timer timer3;
private file WRITE_OCTET_DATA_TO_DB_BINDINGRATE;
private file WRITE_OCTET_DATA_TO_DB;
private variable flt_Concentration;
private variable loopCounter_OctetRead;
private variable flt_BindingRate;
private variable str_BindingRate;
private variable str_Well;
private variable str_Concentration;
private file OCTET_RESULT_FILE_READ;
private variable int_Convert;
// {{ 5 "AddOctetProAResultDataToDB_Manual" "InitLocals"
// }} ""
// {{ 260 1 0 "02cfd878_bddf_4dc5_af84edc4a6a7cf3a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 261 1 0 "4ccc37fd_0255_4e6e_b9a62e14e0a52955" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
date = TimGetFormattedDate(Translate("%m/%d/%y "));
// }} ""
// {{{ 262 1 0 "5d705956_75f3_4d3b_bd1f4c80c74e5b86" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
time = TimGetFormattedTime(Translate("%I:%M:%S %p"));
// }} ""
// {{ 263 1 0 "a0c56050_cdf8_450b_b862bf544a2c676c" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
flt_Concentration = 0;
// }} ""
// {{ 264 1 0 "efbec494_ebcd_415e_97cd530725c8a34b" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
flt_BindingRate = 0;
// }} ""
// {{ 265 1 0 "61a99478_1a45_4fa4_b0261dae1e0797ae" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
date = date + time;
// }} ""
// {{ 266 1 0 "903159fb_9008_4e74_af41099c94e92899" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
AssayType = "Octet_ProteinA";
SampleID = "NA";
// {{ 268 1 0 "efe6e3cf_9ffe_402f_b2523d6c5167a25f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 269 1 0 "88937c6d_dfe7_4158_b4b4a33daa821d68" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SampleVesselType == "384w_Octet")
{
// }} ""
// {{ 270 1 0 "34106d97_1153_41f5_84048b1e726c1c0d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumOctetPlates = 1;
// }} ""
// {{ 271 1 0 "04df9f30_97c2_46e4_a32ce33ae37ce8d6" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
NumSampleWells = NumSamplePlates * 96;
// }} ""
// {{ 272 1 0 "4bd68c30_164a_4a7c_971380bef3a578ff" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 273 1 0 "ed2fe4f6_b62d_483c_80a5e2bfcab7693c" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
NumSampleWells = NumSampleWells + 1;
// }} ""
// {{ 274 1 0 "88937c6d_dfe7_4158_b4b4a33daa821d68" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 275 1 0 "101c4fda_7481_467b_91c4bcf97157aa51" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (SampleVesselType == "96w_Octet")
{
// }} ""
// {{ 276 1 0 "7e2114f9_9fbd_42ac_9b5fdac3beea4234" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumOctetPlates = NumSamplePlates;
// }} ""
// {{ 277 1 0 "75c7d8f0_4a83_49df_87e8b8dad16b3fcf" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
NumSampleWells = 96;
// }} ""
// {{ 278 1 0 "101c4fda_7481_467b_91c4bcf97157aa51" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 279 1 0 "6ecb35d5_32f5_47b9_80665ca8614281ae" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 280 1 0 "7e8b397e_88bd_4a2b_8dca99ecceab361f" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_DATA_TO_DB.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("SampleID", SampleID, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("SampleBarcode", octetPlateBarcode, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("SampleWell", str_Well, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("SampleVesselType", SampleVesselType, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("Result", flt_Concentration, hslFloat);
WRITE_OCTET_DATA_TO_DB.AddField("ResultUnits", iResultUnits, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("ResultType", iResultType, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("DateTime", date, hslString, 255);
WRITE_OCTET_DATA_TO_DB.AddField("AssayType", AssayType, hslString, 255);
WRITE_OCTET_DATA_TO_DB.SetDelimiter(";");
if( 0 == WRITE_OCTET_DATA_TO_DB.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 281 1 0 "11a00d62_de1e_4ada_85d8a3f63e5bab56" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("ExperimentID", SampleTrackingDB_glExperimentID, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("SampleID", SampleID, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("SampleBarcode", octetPlateBarcode, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("SampleWell", str_Well, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("SampleVesselType", SampleVesselType, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("Result", flt_BindingRate, hslFloat);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("ResultUnits", iResultUnits, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("ResultType", iResultType, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("DateTime", date, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.AddField("AssayType", AssayType, hslString, 255);
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.SetDelimiter(";");
if( 0 == WRITE_OCTET_DATA_TO_DB_BINDINGRATE.Open(SampleTrackingDB_glDBName, hslAppend, "SELECT * FROM [AnalyticResultTable]", SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 282 1 0 "1f22fb3e_6bab_4d55_937b76af1c5bbf3c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < NumOctetPlates;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 283 1 0 "9e99ed3a_35af_47ca_b0266f9ce53b6495" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer3.SetTimer(5) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 284 1 0 "44e9a124_a3b2_45f6_bb1f215145639068" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
OCTET_RESULT_FILE_READ.SetExtendedProperties( "HDR=NO");
OCTET_RESULT_FILE_READ.AddField(6, str_Well, hslString, 255);
OCTET_RESULT_FILE_READ.AddField(9, str_BindingRate, hslString, 255);
OCTET_RESULT_FILE_READ.AddField(13, str_Concentration, hslString, 255);
OCTET_RESULT_FILE_READ.SetDelimiter(hslCSVDelimited);
if( 0 == OCTET_RESULT_FILE_READ.Open(iOctetInputFile, hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, iOctetInputFile, "HxMetEdCompCmd");
}
// }} ""
// {{ 285 1 0 "25c67066_0262_4c0d_bc15352515055a60" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter_OctetRead = 0; loopCounter_OctetRead < NumSampleWells;)
{
loopCounter_OctetRead = loopCounter_OctetRead + 1;
// }} ""
// {{ 286 1 0 "df5eaed1_d9d5_450c_8c6323779aa86a7e" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == OCTET_RESULT_FILE_READ.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 287 1 0 "fc3b9498_0acf_4661_a0305761290c1959" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 288 1 0 "ee4f4c73_72c6_4e57_b718052a60fc6986" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (loopCounter_OctetRead != 1)
{
// }} ""
// {{ 289 1 0 "79fdfd85_b710_4146_842611d649474670" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 290 1 0 "1088c97e_87e3_4103_8cea3ac8b71dd54c" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_3FF2342D9FE84d6f90CC0A8E5E1F5F19 ;
err.Clear();
// }} ""
// {{{ 291 1 0 "1397a76f_7001_4bbd_b57bc4083563f6f6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
flt_BindingRate = StrFVal(str_BindingRate);
// }} ""
// {{ 292 1 0 "1088c97e_87e3_4103_8cea3ac8b71dd54c" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_3FF2342D9FE84d6f90CC0A8E5E1F5F19 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{{ 293 1 0 "028a4de0_a96d_4c6d_aa6fb2677a090460" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Binding Rate Empty"), Translate(""));
// }} ""
// {{ 294 1 0 "556248c6_4f89_4bd9_be703f3cfbc1e012" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
flt_BindingRate = 0.0;
// }} ""
// {{ 295 1 0 "1088c97e_87e3_4103_8cea3ac8b71dd54c" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 296 1 0 "59b26a77_f339_48e2_9c5182072ead84bc" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 297 1 0 "858a2931_74fc_4bd5_93d2719f771a8240" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_16E4FDD6D65D43ec8DCE0AE574379867 ;
err.Clear();
// }} ""
// {{ 298 1 0 "84be2790_8715_4a8a_843cc78a40b50098" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
int_Convert = 1;
// }} ""
// {{ 299 1 0 "cfc65e07_1728_4d87_8528c62270d84500" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (str_Concentration == "Too High")
{
// }} ""
// {{{ 300 1 0 "32892a30_9172_4552_b27512f14fe2f1c2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Concentration Too High"), Translate(""));
// }} ""
// {{ 301 1 0 "87942256_ca9b_44b2_ae0a4f7383eeac29" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
flt_Concentration = 99999.99;
// }} ""
// {{ 302 1 0 "21f2e1dc_53aa_478b_b316548faa4de9e1" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
int_Convert = 0;
// }} ""
// {{ 303 1 0 "cfc65e07_1728_4d87_8528c62270d84500" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 304 1 0 "a9f2c787_6371_44dd_9637d75af05444af" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (str_Concentration == "Too Low")
{
// }} ""
// {{{ 305 1 0 "082b7454_05ae_4159_b56bda7214b44313" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Concentration Too Low"), Translate(""));
// }} ""
// {{ 306 1 0 "839b439f_eee6_4958_aa4988ca83b28410" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
flt_Concentration = 0.1;
// }} ""
// {{ 307 1 0 "8735708f_1092_4ce3_96eb0258fc45fd8a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
int_Convert = 0;
// }} ""
// {{ 308 1 0 "a9f2c787_6371_44dd_9637d75af05444af" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 309 1 0 "db36b715_6e69_4688_9ebff5a8ff0b8e50" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (int_Convert == 1)
{
// }} ""
// {{{ 310 1 0 "057f918d_2b91_4232_8716807daafd5fba" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
flt_Concentration = StrFVal(str_Concentration);
// }} ""
// {{ 311 1 0 "db36b715_6e69_4688_9ebff5a8ff0b8e50" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 312 1 0 "858a2931_74fc_4bd5_93d2719f771a8240" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_16E4FDD6D65D43ec8DCE0AE574379867 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{{ 313 1 0 "9cc8dfa1_c51b_42e1_b1b1844fb72916bc" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Concentration Empty"), Translate(""));
// }} ""
// {{ 314 1 0 "8dd36bfb_6880_4216_970b89c8471de308" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
flt_Concentration = 0.0;
// }} ""
// {{ 315 1 0 "858a2931_74fc_4bd5_93d2719f771a8240" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{{ 316 1 0 "e2ee1a13_56b5_45f5_a7f6a0bb8ed8abee" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace12(Translate("Well - "), str_Well, Translate(" -- BR - "), flt_BindingRate, Translate(" -- Conc - "), flt_Concentration, Translate(""), Translate(""), Translate(""), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 317 1 0 "ddca1141_39f5_4872_b95e01b06273a610" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
iResultUnits = "mg/L";
iResultType = "Titer";
// {{ 319 1 0 "0ceeccc9_eef3_4b02_8a493b9fb57a2357" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_DATA_TO_DB.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 320 1 0 "80ef1044_0350_486a_b84cf18542f7122f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
iResultUnits = "NA";
iResultType = "Binding Rate";
// {{ 322 1 0 "beb0d5b7_0ddf_4bcc_bec2fa30a3f4ea1a" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == WRITE_OCTET_DATA_TO_DB_BINDINGRATE.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 323 1 0 "ee4f4c73_72c6_4e57_b718052a60fc6986" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 324 1 0 "25c67066_0262_4c0d_bc15352515055a60" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 325 1 0 "1c98d147_1d20_4c03_bf4de482d4af391b" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != OCTET_RESULT_FILE_READ.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
OCTET_RESULT_FILE_READ.RemoveFields();
// }} ""
// {{ 326 1 0 "1f22fb3e_6bab_4d55_937b76af1c5bbf3c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 327 1 0 "6ea76d32_5838_40fd_a62f16954a843f47" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_DATA_TO_DB.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_DATA_TO_DB.RemoveFields();
// }} ""
// {{ 328 1 0 "b89e3899_5547_4f45_ae876a9730646ce7" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != WRITE_OCTET_DATA_TO_DB_BINDINGRATE.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
WRITE_OCTET_DATA_TO_DB_BINDINGRATE.RemoveFields();
// }} ""
// {{{ 5 "AddOctetProAResultDataToDB_Manual" "End"
}
// }} ""
// {{{ 5 "ConfluencePlateLookup" "Begin"
function ConfluencePlateLookup( variable i_int_QueryType, variable i_int_numConfPlates, variable i_str_platetype, variable & i_arr_LiconicBCList[], variable & o_arr_confluencebarcodes[], variable & str_BarcodeList, variable & o_int_ConfluencePlatesInDB, variable & o_int_GoodFlag ) void {
// }} ""
private variable sqlStatement;
private variable confluencePlateBarcode;
private variable loopCounter1;
private file READ_CONFLUENCE_PLATES;
private variable str_barcode;
private variable int_error;
// {{ 5 "ConfluencePlateLookup" "InitLocals"
str_BarcodeList = 0;
o_int_ConfluencePlatesInDB = 0;
o_int_GoodFlag = 0;
// }} ""
// {{ 546 1 0 "4b25326a_c969_4c6a_95789b23cb784f7e" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_int_GoodFlag = 1;
// }} ""
// {{ 547 1 0 "b55c65c5_6c85_4fc0_8d5344ad9a45a4f8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 548 1 0 "c0fe54bc_982c_441e_9f7c4e5c8659a481" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_int_QueryType == 0)
{
// }} ""
// {{ 549 1 0 "21c3457b_ccfd_446f_94908ff26eae791a" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
o_arr_confluencebarcodes.SetSize(0);
// }} ""
sqlStatement = "SELECT DISTINCT  ExperimentID, SampleBarcode, SampleVesselType, AssayType FROM AnalyticMethodTable " +
"WHERE ExperimentID = '" + SampleTrackingDB_glExperimentID + "' AND SampleVesselType = '" + i_str_platetype + "' AND AssayType = 'CellConfluence'";

Trace("sqlStatement = ", sqlStatement);
// {{ 551 1 0 "bdb35a13_1438_4f2e_a71b40595f63e19b" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_CONFLUENCE_PLATES.AddField("SampleBarcode", confluencePlateBarcode, hslString, 255);
READ_CONFLUENCE_PLATES.SetDelimiter(";");
if( 0 == READ_CONFLUENCE_PLATES.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 552 1 0 "5f496c9a_df05_4ff7_81aa24c658b66b4d" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (
   (READ_CONFLUENCE_PLATES.Eof() == 0)
)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 553 1 0 "1ba7f4cc_155c_4591_97c85029e5218e9e" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_CONFLUENCE_PLATES.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 554 1 0 "3e44da0e_3078_4f7f_892ad5bcfc242bdc" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 555 1 0 "f458d1d3_dca1_4d55_bde958213392fc07" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
o_arr_confluencebarcodes.AddAsLast(confluencePlateBarcode);
// }} ""
// {{ 556 1 0 "5f496c9a_df05_4ff7_81aa24c658b66b4d" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 557 1 0 "385a983b_57be_4c41_9c78d438bff48198" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_CONFLUENCE_PLATES.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_CONFLUENCE_PLATES.RemoveFields();
// }} ""
// {{ 558 1 0 "14619514_0dd8_4f8e_8031a15199b2ad26" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
o_int_ConfluencePlatesInDB=o_arr_confluencebarcodes.GetSize();
// }} ""
// {{ 559 1 0 "c0fe54bc_982c_441e_9f7c4e5c8659a481" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 560 1 0 "05ec27d8_2dc7_4c55_a9630dabba5f5878" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 561 1 0 "be52a905_7280_4926_978a5573359fd9bb" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_int_QueryType == 1)
{
// }} ""
// {{ 562 1 0 "95576b85_1862_499c_a7c9811d4bf04501" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
int_error = 0;
// }} ""
// {{ 563 1 0 "6039a293_029f_473d_b447d14758c0c789" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < i_int_numConfPlates;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 564 1 0 "fb2f98ba_6ec1_41ce_82ef006a239fa500" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
o_arr_confluencebarcodes.SetSize(0);
// }} ""
// {{ 565 1 0 "dc41da7b_e187_4693_9ece6f5769c782ca" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
str_barcode=i_arr_LiconicBCList.GetAt(loopCounter1-1);
// }} ""
// {{ 566 1 0 "b202746c_f330_487d_bdb40ee5ac9d82a1" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_A24FCE8A00854cd38DAE415E744048C2 ;
err.Clear();
// }} ""
sqlStatement = "SELECT DISTINCT  ExperimentID, SampleBarcode, SampleVesselType, AssayType FROM AnalyticMethodTable " +
"WHERE ExperimentID = '" + SampleTrackingDB_glExperimentID + "' AND SampleBarcode = '" + str_barcode +
"' AND SampleVesselType = '" + i_str_platetype + "' AND AssayType = 'CellConfluence'";

Trace("sqlStatement = ", sqlStatement);
// {{ 568 1 0 "dc3ab68b_1367_4d79_8f688a77052b955c" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
READ_CONFLUENCE_PLATES.AddField("SampleBarcode", confluencePlateBarcode, hslString, 255);
READ_CONFLUENCE_PLATES.SetDelimiter(";");
if( 0 == READ_CONFLUENCE_PLATES.Open(SampleTrackingDB_glDBName, hslRead, sqlStatement, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 569 1 0 "9fc22a86_06ed_4999_bdb8bda91776abcf" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == READ_CONFLUENCE_PLATES.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 570 1 0 "c9bc2b4b_ee5f_4a10_a1b32ef22b2fb4cc" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 571 1 0 "d8608a9a_a825_4378_b1634a67f7ca82c1" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
o_arr_confluencebarcodes.AddAsLast(confluencePlateBarcode);
// }} ""
// {{ 572 1 0 "9625d797_61a6_49f7_9a7f57f5c5db622b" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_CONFLUENCE_PLATES.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_CONFLUENCE_PLATES.RemoveFields();
// }} ""
// {{ 573 1 0 "b202746c_f330_487d_bdb40ee5ac9d82a1" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_A24FCE8A00854cd38DAE415E744048C2 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 574 1 0 "8cc1df02_18fd_4503_99d113bca2f225fd" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 575 1 0 "74b98ae5_02d7_40d1_bb5c28237ed5f28c" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != READ_CONFLUENCE_PLATES.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
READ_CONFLUENCE_PLATES.RemoveFields();
// }} ""
// {{ 576 1 0 "caabde33_3621_4835_bba5d8f37e004d18" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
int_error = int_error + 1;
// }} ""
// {{ 577 1 0 "85078c35_f1b5_4f0f_bb50ea16f7ff89f7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (int_error == 1)
{
// }} ""
// {{ 578 1 0 "595c1268_6cc0_4bc1_a505dfd535f187cd" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_BarcodeList = str_barcode;
// }} ""
// {{ 579 1 0 "85078c35_f1b5_4f0f_bb50ea16f7ff89f7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{{ 580 1 0 "cf010b5d_c35c_4397_a58a5787755bc91e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_BarcodeList = StrConcat4(str_BarcodeList, Translate(", "), str_barcode, Translate(""));
// }} ""
// {{ 581 1 0 "85078c35_f1b5_4f0f_bb50ea16f7ff89f7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 582 1 0 "8d35a61c_5282_4d47_ae00b408c809e165" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_int_GoodFlag = 0;
// }} ""
// {{ 583 1 0 "b202746c_f330_487d_bdb40ee5ac9d82a1" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 584 1 0 "6039a293_029f_473d_b447d14758c0c789" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 585 1 0 "6971b6dd_ab21_40bc_be4b1e4f08177eca" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
o_int_ConfluencePlatesInDB=o_arr_confluencebarcodes.GetSize();
// }} ""
// {{ 586 1 0 "be52a905_7280_4926_978a5573359fd9bb" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "ConfluencePlateLookup" "End"
}
// }} ""
// {{{ 5 "DDI_Confluence" "Begin"
function DDI_Confluence( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_int_WellNum ) void {
// }} ""
private variable int_BarcodeArraySize;
private variable str_Well_ID;
private variable str_DDIFileName;
private variable LC_BarcodeArraySize;
private variable str_Time;
private variable flt_Confluence;
private variable str_Date;
private variable str_sqlQuery;
private variable LC_DBRead;
private variable str_Barcode;
private variable str_DDIFolder;
private variable str_TimeForDDiFile;
private variable str_DateTimeForDDiFile;
private variable str_DateForDDiFile;
private file hnd_DDiFileToWriteTo;
private file hnd_ReadDatabaseFile;
private variable str_FilePathSchema;
private variable bln_Schema;
private variable blnPuma;
// {{ 5 "DDI_Confluence" "InitLocals"
// }} ""
// {{ 588 1 0 "22a25fb7_1cdb_4b87_b249a44b205b2b32" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("############################################\n             DDi CONFLUENCE FILE TRIGGER: START\n############################################"));
// }} ""
// {{ 589 1 0 "8e650803_9096_4804_afcc2ab221f277d0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 590 1 0 "00fd5d4e_4b34_411f_87ae627b5d307cda" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_DDIFolder = Translate("C:\\DataCapture\\upload\\");
// }} ""
// {{ 591 1 0 "e9e8764c_040f_4e93_ad28c02fe6156eb1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 592 1 0 "41ce2390_26d5_4698_b5936e655341ed01" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Date = TimGetFormattedDate(Translate("_%Y-%m-%d "));
// }} ""
// {{{ 593 1 0 "a6b91653_1618_4f08_80b48acf8dade2af" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Time = TimGetFormattedTime(Translate("%H-%M-%S"));
// }} ""
// {{ 594 1 0 "c51f128a_8de3_4d66_8d54f27216432531" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 595 1 0 "a786c66d_c7a4_476d_977eb329a9fbd84e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DDIFileName = StrConcat8(str_DDIFolder, Translate("CONF_"), i_str_ExperimentID, str_Date, str_Time, Translate(".csv"), Translate(""), Translate(""));
// }} ""
// {{{ 596 1 0 "301781d9_fa0c_413d_9791291a1a39a877" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("str_DDIFileName = "), str_DDIFileName);
// }} ""
// {{ 597 1 0 "686edaf0_58c9_46fe_a7ab128adc2b9283" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 598 1 0 "096ae5eb_4222_415d_8b0998f329f1f424" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateForDDiFile = TimGetFormattedDate(Translate("%Y-%m-%d"));
// }} ""
// {{{ 599 1 0 "a210dd6c_4306_4d46_b6fc7ef7de3845d6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_TimeForDDiFile = TimGetFormattedTime(Translate("%H:%M:%S"));
// }} ""
// {{{ 600 1 0 "421823fe_fae7_4d60_87e07857e1eb2f79" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateTimeForDDiFile = StrConcat4(str_DateForDDiFile, Translate(" "), str_TimeForDDiFile, Translate(""));
// }} ""
// {{ 601 1 0 "29de5514_50ce_4744_8c2436bc504b74e5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 602 1 0 "b6381349_a4e2_4ca3_8c45f5966120f439" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
int_BarcodeArraySize=i_arr_Barcodes.GetSize();
// }} ""
// {{{ 603 1 0 "83662f6b_07d5_4bc9_85fe1fe57bc4ed5e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("int_BarcodeArraySize = "), int_BarcodeArraySize);
// }} ""
// {{ 604 1 0 "c6878421_a167_4dc1_ac53f8cb6ed03b9e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 605 1 0 "9301cb99_45de_444c_a9991ee3ae46ce6a" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_DDiFileToWriteTo.SetExtendedProperties( "HDR=NO");
hnd_DDiFileToWriteTo.AddField("Container Barcode", str_Barcode, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Container Position", str_Well_ID, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Cell Confluence", flt_Confluence, hslFloat);
hnd_DDiFileToWriteTo.AddField("Time", str_DateTimeForDDiFile, hslString, 255);
hnd_DDiFileToWriteTo.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_DDiFileToWriteTo.Open(str_DDIFileName, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, str_DDIFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 606 1 0 "48a9d760_174f_48bb_a3b880f6f470e444" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 607 1 0 "7a2ce0e8_c694_4cae_825edf79830c0f13" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(LC_BarcodeArraySize = 0; LC_BarcodeArraySize < int_BarcodeArraySize;)
{
LC_BarcodeArraySize = LC_BarcodeArraySize + 1;
// }} ""
// {{ 608 1 0 "79e65dab_d4eb_41ce_b80580def4f535ff" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
str_Barcode=i_arr_Barcodes.GetAt(LC_BarcodeArraySize-1);
// }} ""
// {{ 609 1 0 "95425493_be2e_49c0_a9f6d896ee6b33ac" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 610 1 0 "2bfa781d_9fc0_4ec9_83df79c989715414" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQuery = StrConcat12(Translate("SELECT TOP ("), i_int_WellNum, Translate(") [ExperimentID], [DateTime], [SampleBarcode], [SampleWell], [SampleVesselType], [AssayType], [Result], [ResultType] FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[AnalyticResultTable] where ExperimentID = '"), i_str_ExperimentID, Translate("' AND SampleBarcode = '"), str_Barcode, Translate("' AND ResultType = 'Confluence' ORDER BY DateTime DESC"), Translate(""), Translate(""), Translate(""), Translate(""), Translate(""));
// }} ""
// {{{ 611 1 0 "b526658f_de6e_41c7_8f5df60a3ce917b5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQuery);
// }} ""
// {{ 612 1 0 "b8741efc_c5ac_40f3_8ab91bf56a45190d" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_ReadDatabaseFile.AddField("Result", flt_Confluence, hslFloat);
hnd_ReadDatabaseFile.AddField("SampleWell", str_Well_ID, hslString, 255);
hnd_ReadDatabaseFile.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_ReadDatabaseFile.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQuery, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 613 1 0 "0543cb40_e833_4ca0_8ecfe8e3856e295e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LC_DBRead = 0;
while (
   (hnd_ReadDatabaseFile.Eof() == 0)
)
{
LC_DBRead = LC_DBRead + 1;
// }} ""
// {{ 614 1 0 "49ba8d25_df90_4c4f_a0fa5d4d4683ea08" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_ReadDatabaseFile.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 615 1 0 "8aba2049_912e_4367_94e189bf0a9c31af" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_DDiFileToWriteTo.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 616 1 0 "0543cb40_e833_4ca0_8ecfe8e3856e295e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 617 1 0 "9cb01373_e2dc_46e0_aeb3f53074c0231d" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_ReadDatabaseFile.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_ReadDatabaseFile.RemoveFields();
// }} ""
// {{ 618 1 0 "7a2ce0e8_c694_4cae_825edf79830c0f13" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 619 1 0 "fe2613aa_6754_4302_bf94da74b146861e" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_DDiFileToWriteTo.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_DDiFileToWriteTo.RemoveFields();
// }} ""
// {{ 620 1 0 "e7eb9c92_8c96_4a18_a120006cf29b706f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 621 1 0 "b79a1187_43a7_4378_8f74faf87454726a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_FilePathSchema = Translate("C:\\DataCapture\\upload\\schema.ini");
// }} ""
// {{{ 622 1 0 "cb86ffb9_5761_4db2_b528897984a8e81d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
bln_Schema = FileDirectoryLib::CheckIfFileExists(str_FilePathSchema);
// }} ""
// {{ 623 1 0 "5c4e66a8_1e3d_460e_81fba3d417e6fe0d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (bln_Schema == 1)
{
// }} ""
// {{{ 624 1 0 "c227bb65_a45e_4f74_a534ff0fb3393702" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FileDirectoryLib::DeleteFile(str_FilePathSchema);
// }} ""
// {{ 625 1 0 "b193dc3f_70b0_47a5_be78a5cb64172210" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini deleted"));
// }} ""
// {{ 626 1 0 "5c4e66a8_1e3d_460e_81fba3d417e6fe0d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 627 1 0 "645418f1_675b_4f5d_9cf174d61fd3d3be" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini not found"));
// }} ""
// {{ 628 1 0 "5c4e66a8_1e3d_460e_81fba3d417e6fe0d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 629 1 0 "93b35da0_71ee_4c70_a04e9a989ef748fb" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 630 1 0 "04b47ef6_bc6e_4ffd_8ee276e2971a36b3" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
RemoveTextDelimitersFromAsciiTextFile(str_DDIFileName);
// }} ""
// {{ 631 1 0 "14de26b7_1df8_44f4_99fa03ab26959abb" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Start"));
// }} ""
// {{ 632 1 0 "b222bb6f_8fce_4828_a8947f4f0c570557" "{B31F3545-5D80-11d4-A5EB-0050DA737D89}"
{
event localDummyEvent1;
if( 0 == Shell("C:\\DataCapture\\DataCaptureStart.bat", hslShow, hslSynchronous, localDummyEvent1, blnPuma) )
{
    MECC::RaiseRuntimeErrorEx(-1238499072, MECC::IDS::stepNameShell, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
}
// }} ""
// {{ 633 1 0 "9206a43c_ee3d_4065_a4c6b59adf446dc6" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Complete"));
// }} ""
// {{ 634 1 0 "72809ada_e9a4_4698_874037c5bcde2756" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("############################################\n             DDi CONFLUENCE FILE TRIGGER: END\n############################################"));
// }} ""
// {{{ 5 "DDI_Confluence" "End"
}
// }} ""
// {{{ 5 "DDI_ViableCellCount" "Begin"
function DDI_ViableCellCount( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_int_WellNum ) void {
// }} ""
private variable flt_TCD;
private variable int_BarcodeArraySize;
private variable flt_VCD;
private variable str_DDIFolder;
private variable str_Well_ID;
private variable flt_Viability;
private variable str_DBTime;
private variable str_DDIFileName;
private variable LC_BarcodeArraySize;
private variable str_Time;
private variable str_Date;
private variable str_sqlQuery;
private variable LC_DBRead;
private variable str_Barcode;
private variable str_sqlQueryTCD;
private variable str_sqlQueryVCD;
private variable str_sqlQueryViability;
private file FILE_READDBTCD;
private file FILE_READDBVCD;
private file FILE_READDBVia;
private variable str_sqlQueryHoechstPI;
private variable str_TimeForDDiFile;
private variable str_DateTimeForDDiFile;
private variable str_DateForDDiFile;
private file hnd_DDiFileToWriteTo;
private file hnd_ReadDatabaseFile;
private variable bln_Schema;
private variable str_FilePathSchema;
private variable blnPuma;
// {{ 5 "DDI_ViableCellCount" "InitLocals"
// }} ""
// {{ 846 1 0 "1d769dc4_b1cb_4249_86262a31c7c09bc1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("##################################################\n             DDi VIABLE CELL COUNT FILE TRIGGER: START\n##################################################"));
// }} ""
// {{ 847 1 0 "4caba6ce_69d2_413d_97aac94c3ce7c9ed" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 848 1 0 "6ddb74a0_d2c1_414a_a3cbacd6bd6688b7" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_DDIFolder = Translate("C:\\DataCapture\\upload\\");
// }} ""
// {{ 849 1 0 "f8229ee7_6ebe_4243_9d9cf550272151ea" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 850 1 0 "61346173_c7e7_44b1_bc18566cc3fd0cec" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Date = TimGetFormattedDate(Translate("_%Y-%m-%d "));
// }} ""
// {{{ 851 1 0 "d65d4c0f_5cbf_4cb5_ac32cdffded856f0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Time = TimGetFormattedTime(Translate("%H-%M-%S"));
// }} ""
// {{ 852 1 0 "225a9597_4755_4b46_84234e5e84088d21" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 853 1 0 "ddd01999_fa4c_4f3a_9961663a116b8b2a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DDIFileName = StrConcat8(str_DDIFolder, Translate("CELL_"), i_str_ExperimentID, str_Date, str_Time, Translate(".csv"), Translate(""), Translate(""));
// }} ""
// {{{ 854 1 0 "b6016461_a9a8_46f4_a0eb0d46c0019be0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("str_DDIFileName = "), str_DDIFileName);
// }} ""
// {{ 855 1 0 "d1379466_87e7_49dd_ab3e76a25f2c1939" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 856 1 0 "c2dc12da_b65a_4685_8c4ec84fd1745f3f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateForDDiFile = TimGetFormattedDate(Translate("%Y-%m-%d"));
// }} ""
// {{{ 857 1 0 "b2621887_3514_4ed9_920481278741eb55" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_TimeForDDiFile = TimGetFormattedTime(Translate("%H:%M:%S"));
// }} ""
// {{{ 858 1 0 "f61d0a8f_6392_4bbb_9b4c330f8ad69507" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateTimeForDDiFile = StrConcat4(str_DateForDDiFile, Translate(" "), str_TimeForDDiFile, Translate(""));
// }} ""
// {{ 859 1 0 "18b7c88b_c024_4c37_9324fc78cf36ca5b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 860 1 0 "285c9818_4d27_4823_b2be7b711ce3d6b6" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
int_BarcodeArraySize=i_arr_Barcodes.GetSize();
// }} ""
// {{{ 861 1 0 "666aef7e_fc58_4525_b363ffc55dc02f16" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("int_BarcodeArraySize = "), int_BarcodeArraySize);
// }} ""
// {{ 862 1 0 "17717df0_04d0_4126_8d008793cf84e45e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 863 1 0 "2d705894_d855_4f8e_b4ccf65084cdd119" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_DDiFileToWriteTo.AddField("Container Barcode", str_Barcode, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Container Position", str_Well_ID, hslString, 255);
hnd_DDiFileToWriteTo.AddField("TCD", flt_TCD, hslFloat);
hnd_DDiFileToWriteTo.AddField("VCD", flt_VCD, hslFloat);
hnd_DDiFileToWriteTo.AddField("Viability", flt_Viability, hslFloat);
hnd_DDiFileToWriteTo.AddField("Time", str_DateTimeForDDiFile, hslString, 255);
hnd_DDiFileToWriteTo.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_DDiFileToWriteTo.Open(str_DDIFileName, hslWrite) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, str_DDIFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 864 1 0 "97225482_7e36_4a75_bdff1af57af9919a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 865 1 0 "58e8e0bb_7a0b_4cdb_b0dca17bcc45d487" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(LC_BarcodeArraySize = 0; LC_BarcodeArraySize < int_BarcodeArraySize;)
{
LC_BarcodeArraySize = LC_BarcodeArraySize + 1;
// }} ""
// {{ 866 1 0 "1f24e5b0_5619_4bf3_b3752e6adb5f6f5a" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
str_Barcode=i_arr_Barcodes.GetAt(LC_BarcodeArraySize-1);
// }} ""
// {{{ 867 1 0 "150d699a_4925_496c_96b2bc1258bac0a6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQueryHoechstPI = StrConcat12(Translate("SELECT TOP ("), i_int_WellNum, Translate(") PivotTable.[ExperimentID],PivotTable.[SampleID],PivotTable.[DateTime],PivotTable.[SampleBarcode],PivotTable.[SampleWell],PivotTable.[SampleVesselType],PivotTable.[AssayType],PivotTable.[TCD] as Result_TCD, PivotTable.[VCD] as Result_VCD, PivotTable.[VIABILITY] as Result_Viability "), Translate("FROM (SELECT [ExperimentID],[SampleID],[DateTime],[SampleBarcode],[SampleWell],[SampleVesselType],[AssayType], ResultType, Result "), Translate("FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[AnalyticResultTable]) AS T  "), Translate("PIVOT  (MAX(Result) FOR ResultType IN ([TCD], [VCD], [Viability])) AS PivotTable "), Translate("WHERE ExperimentID = '"), i_str_ExperimentID, Translate("' AND SampleBarcode ='"), str_Barcode, Translate("' AND AssayType = 'CellViability_Hoechst-PI' ORDER BY DateTime DESC"), Translate(""));
// }} ""
// {{{ 868 1 0 "50fdf25a_11d0_45e2_af0d3b323351bfbf" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQueryHoechstPI);
// }} ""
// {{ 869 1 0 "f4dafcbd_defa_42dd_89474690b4949461" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_ReadDatabaseFile.AddField("Result_TCD", flt_TCD, hslFloat);
hnd_ReadDatabaseFile.AddField("Result_VCD", flt_VCD, hslFloat);
hnd_ReadDatabaseFile.AddField("Result_Viability", flt_Viability, hslFloat);
hnd_ReadDatabaseFile.AddField("SampleWell", str_Well_ID, hslString, 255);
hnd_ReadDatabaseFile.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_ReadDatabaseFile.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQueryHoechstPI, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{{ 870 1 0 "e9e051f1_f7bc_470e_9b13d12661ab53af" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQueryTCD = StrConcat12(Translate("SELECT TOP ("), i_int_WellNum, Translate(") [ExperimentID], [DateTime], [SampleBarcode], [SampleWell], [SampleVesselType], [AssayType], [Result], [ResultType] FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[AnalyticResultTable] where ExperimentID = '"), i_str_ExperimentID, Translate("' AND SampleBarcode = '"), str_Barcode, Translate("' AND AssayType = 'CellViability_Hoechst-PI' AND ResultType = 'TCD' ORDER BY DateTime DESC"), Translate(""), Translate(""), Translate(""), Translate(""), Translate(""));
// }} ""
// {{{ 871 1 0 "49749a1b_bad9_45a8_bde97fa40973dd08" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQueryTCD);
// }} ""
// {{{ 872 1 0 "413ed27e_74af_45b0_95392596c9cb6986" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQueryVCD = StrConcat12(Translate("SELECT TOP ("), i_int_WellNum, Translate(") [ExperimentID], [DateTime], [SampleBarcode], [SampleWell], [SampleVesselType], [AssayType], [Result], [ResultType] FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[AnalyticResultTable] where ExperimentID = '"), i_str_ExperimentID, Translate("' AND SampleBarcode = '"), str_Barcode, Translate("' AND AssayType = 'CellViability_Hoechst-PI' AND ResultType = 'VCD' ORDER BY DateTime DESC"), Translate(""), Translate(""), Translate(""), Translate(""), Translate(""));
// }} ""
// {{{ 873 1 0 "b484b5f7_e8a4_4939_becbec60aabf7fff" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQueryVCD);
// }} ""
// {{{ 874 1 0 "67bb2741_a89f_4445_b8271fca6ed59a1b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQueryViability = StrConcat12(Translate("SELECT TOP ("), i_int_WellNum, Translate(") [ExperimentID], [DateTime], [SampleBarcode], [SampleWell], [SampleVesselType], [AssayType], [Result], [ResultType] FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[AnalyticResultTable] where ExperimentID = '"), i_str_ExperimentID, Translate("' AND SampleBarcode = '"), str_Barcode, Translate("' AND AssayType = 'CellViability_Hoechst-PI' AND ResultType = 'Viability' ORDER BY DateTime DESC"), Translate(""), Translate(""), Translate(""), Translate(""), Translate(""));
// }} ""
// {{{ 875 1 0 "be214e81_0a39_4aef_93572cf2cb4ed1d4" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQueryTCD);
// }} ""
// {{ 876 1 0 "ce0e6fd9_c4b3_4caf_986b272db96e0f2e" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
FILE_READDBTCD.AddField("Result", flt_TCD, hslFloat);
FILE_READDBTCD.AddField("DateTime", str_DBTime, hslString, 255);
FILE_READDBTCD.AddField("SampleWell", str_Well_ID, hslString, 255);
FILE_READDBTCD.SetDelimiter(";");
if( 0 == FILE_READDBTCD.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQueryTCD, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 877 1 0 "e248119e_daf2_4233_83e5859b2cffc9e2" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
FILE_READDBVCD.AddField("Result", flt_VCD, hslFloat);
FILE_READDBVCD.AddField("DateTime", str_DBTime, hslString, 255);
FILE_READDBVCD.AddField("SampleWell", str_Well_ID, hslString, 255);
FILE_READDBVCD.SetDelimiter(";");
if( 0 == FILE_READDBVCD.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQuery, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 878 1 0 "82407abe_5b7c_4ec7_98bfaff7ec5b7324" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
FILE_READDBVia.AddField("Result", flt_Viability, hslFloat);
FILE_READDBVia.AddField("DateTime", str_DBTime, hslString, 255);
FILE_READDBVia.AddField("SampleWell", str_Well_ID, hslString, 255);
FILE_READDBVia.SetDelimiter(";");
if( 0 == FILE_READDBVia.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQuery, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 879 1 0 "0237d643_dcf2_48e5_a1cb7560603ba3f9" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LC_DBRead = 0;
while (
   (hnd_ReadDatabaseFile.Eof() == 0)
)
{
LC_DBRead = LC_DBRead + 1;
// }} ""
// {{ 880 1 0 "2e8cc4d3_5275_420b_88894321cf359d3f" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_ReadDatabaseFile.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 881 1 0 "bedc6836_d00a_483a_bbd2a134c95328cb" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == FILE_READDBTCD.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 882 1 0 "e3b6a55d_4d7c_494a_93eb587fc5cb35e8" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == FILE_READDBVCD.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 883 1 0 "066a77a4_a68b_4605_886dd0fc888f4b0d" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == FILE_READDBVia.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 884 1 0 "63cf3d35_c381_49bb_b3c71469e21b5910" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_DDiFileToWriteTo.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 885 1 0 "0237d643_dcf2_48e5_a1cb7560603ba3f9" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 886 1 0 "108b021a_ee10_4f65_b11cf804432381a7" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_ReadDatabaseFile.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_ReadDatabaseFile.RemoveFields();
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 887 1 0 "54f0932d_322e_4dae_941a508bcb83cac0" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != FILE_READDBTCD.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
FILE_READDBTCD.RemoveFields();
// }} ""
// {{ 888 1 0 "94bb99c5_1921_4878_a817b428dc195aef" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != FILE_READDBVCD.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
FILE_READDBVCD.RemoveFields();
// }} ""
// {{ 889 1 0 "d228e345_ad59_4c96_b2e3d9d34bc9582c" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != FILE_READDBVia.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
FILE_READDBVia.RemoveFields();
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 890 1 0 "58e8e0bb_7a0b_4cdb_b0dca17bcc45d487" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 891 1 0 "97b4ca7a_047e_4a0e_aa8e1d3679268f5b" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_DDiFileToWriteTo.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_DDiFileToWriteTo.RemoveFields();
// }} ""
// {{ 892 1 0 "dcbdb4dc_97e8_4bd9_9074aa74bd98ee06" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 893 1 0 "50800eb7_77ab_4824_a50ee3dca39f27c9" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_FilePathSchema = Translate("C:\\DataCapture\\upload\\schema.ini");
// }} ""
// {{{ 894 1 0 "8d4563d6_664a_47be_a7f927e238d9f36e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
bln_Schema = FileDirectoryLib::CheckIfFileExists(str_FilePathSchema);
// }} ""
// {{ 895 1 0 "c38cce58_a46b_4746_913cd8f989630ee0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (bln_Schema == 1)
{
// }} ""
// {{{ 896 1 0 "6154753c_a8ff_4cf6_97518fb087b1ec87" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FileDirectoryLib::DeleteFile(str_FilePathSchema);
// }} ""
// {{ 897 1 0 "a7896459_a387_46ed_909d9dcb84b10e20" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini deleted"));
// }} ""
// {{ 898 1 0 "c38cce58_a46b_4746_913cd8f989630ee0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 899 1 0 "a54f2f2f_44f2_40f8_92e86fe682a7b6c7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini not found"));
// }} ""
// {{ 900 1 0 "c38cce58_a46b_4746_913cd8f989630ee0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 901 1 0 "4608eeaf_482e_4d3f_9a0be902b3ae41d1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 902 1 0 "87d13487_b831_4875_bf5cc493fff02d2f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
RemoveTextDelimitersFromAsciiTextFile(str_DDIFileName);
// }} ""
// {{ 903 1 0 "fe1fd508_faf8_42d9_8880a1e7cbe0c5b1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 904 1 0 "82c8026c_6b8e_4e2c_ab72c4948208b814" "{B31F3545-5D80-11d4-A5EB-0050DA737D89}"
{
event localDummyEvent1;
if( 0 == Shell("C:\\DataCapture\\DataCaptureStart.bat", hslShow, hslSynchronous, localDummyEvent1, blnPuma) )
{
    MECC::RaiseRuntimeErrorEx(-1238499072, MECC::IDS::stepNameShell, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
}
// }} ""
// {{ 905 1 0 "29785948_3bb0_4b6c_84581f1b4282c80b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 906 1 0 "806fe77a_be41_4c80_aadc13201f7490c9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("##################################################\n             DDi VIABLE CELL COUNT FILE TRIGGER: END\n##################################################"));
// }} ""
// {{{ 5 "DDI_ViableCellCount" "End"
}
// }} ""
// {{{ 5 "DDI_CriticalReagents" "Begin"
function DDI_CriticalReagents( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_str_ReagentName, variable i_str_ReagentLot, variable i_int_WellNum, variable i_str_ProcessStep ) void {
// }} ""
private variable int_BarcodeArraySize;
private variable str_DDIFolder;
private variable str_Well_ID;
private variable str_DDIFileName;
private variable LC_BarcodeArraySize;
private variable str_Time;
private variable str_Date;
private variable LC_DBRead;
private variable str_sqlQuery;
private variable flt_ReagentVol;
private variable str_Barcode;
private variable str_TimeForDDiFile;
private variable str_DateTimeForDDiFile;
private variable str_DateForDDiFile;
private file hnd_DDiFileToWriteTo;
private file hnd_ReadDatabaseFile;
private variable bln_Schema;
private variable str_FilePathSchema;
private variable blnPuma;
// {{ 5 "DDI_CriticalReagents" "InitLocals"
// }} ""
// {{ 636 1 0 "30f73430_83ed_42cf_aefa974be3559919" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("##################################################\n             DDi CRITICAL REAGENTS FILE TRIGGER: START\n##################################################"));
// }} ""
// {{ 637 1 0 "56891a15_f7f5_428e_a4faf81fe6b4f84d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 638 1 0 "bc345364_8041_4981_976b74b02d8502fc" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_DDIFolder = Translate("C:\\DataCapture\\upload\\");
// }} ""
// {{ 639 1 0 "cc92f041_be6a_4f46_a6b7a907a84a4de3" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 640 1 0 "9eb0bc44_1bfe_41fd_a4947758c9bc931d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Date = TimGetFormattedDate(Translate("_%Y-%m-%d "));
// }} ""
// {{{ 641 1 0 "ed24eb67_47b2_41b5_8f81a0e734f0c33d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Time = TimGetFormattedTime(Translate("%H-%M-%S"));
// }} ""
// {{ 642 1 0 "66faa06c_20d9_410f_a1b7161a4cf912b6" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 643 1 0 "26b002ca_efdc_4609_a5ec9201bede2d94" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DDIFileName = StrConcat8(str_DDIFolder, Translate("RT_"), i_str_ExperimentID, str_Date, str_Time, Translate(".csv"), Translate(""), Translate(""));
// }} ""
// {{{ 644 1 0 "404bf25e_b6e6_4a9b_8e9624620e066e4e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("str_DDIFileName = "), str_DDIFileName);
// }} ""
// {{ 645 1 0 "cf0c737f_7f13_443c_9a9dc3472514f05f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 646 1 0 "6ba28c65_f8d0_4ee5_84f86485ba1c8843" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateForDDiFile = TimGetFormattedDate(Translate("%Y-%m-%d"));
// }} ""
// {{{ 647 1 0 "8deb7692_5391_48db_b0ea61c022fa38ce" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_TimeForDDiFile = TimGetFormattedTime(Translate("%H:%M:%S"));
// }} ""
// {{{ 648 1 0 "6eb8d437_5e93_45b4_b6543e953837e30a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateTimeForDDiFile = StrConcat4(str_DateForDDiFile, Translate(" "), str_TimeForDDiFile, Translate(""));
// }} ""
// {{ 649 1 0 "0079127e_2edb_492f_a2953c8bb6df856b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 650 1 0 "9cecc53d_3e17_48c3_900544304ed731c7" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
int_BarcodeArraySize=i_arr_Barcodes.GetSize();
// }} ""
// {{{ 651 1 0 "172725a0_d3ff_4132_b5a7a021d7286580" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("int_BarcodeArraySize = "), int_BarcodeArraySize);
// }} ""
// {{ 652 1 0 "126ccfc7_9114_470d_8c7b1a0ca1ef572b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 653 1 0 "69617c4b_a9e1_464b_bf4961994f7c6563" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_DDiFileToWriteTo.SetExtendedProperties( "HDR=NO");
hnd_DDiFileToWriteTo.AddField("Destination Container", str_Barcode, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Destination Position", str_Well_ID, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Reagent Name", i_str_ReagentName, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Reagent Batch", i_str_ReagentLot, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Reagent Volume", flt_ReagentVol, hslFloat);
hnd_DDiFileToWriteTo.AddField("Time", str_DateTimeForDDiFile, hslString, 255);
hnd_DDiFileToWriteTo.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_DDiFileToWriteTo.Open(str_DDIFileName, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, str_DDIFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 654 1 0 "78fa2c91_da88_44e1_a983b15ec0645572" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 655 1 0 "39f4574c_f77b_46f1_9cf8aad7a3af1f1e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(LC_BarcodeArraySize = 0; LC_BarcodeArraySize < int_BarcodeArraySize;)
{
LC_BarcodeArraySize = LC_BarcodeArraySize + 1;
// }} ""
// {{ 656 1 0 "5c6770cf_743e_4405_9320c98551bcf812" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
str_Barcode=i_arr_Barcodes.GetAt(LC_BarcodeArraySize-1);
// }} ""
// {{ 657 1 0 "9a29a112_60ff_4f89_b2c11e6ee82c26fa" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 658 1 0 "61494922_b360_47c2_b2ea9bfb59156196" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQuery = StrConcat12(Translate("SELECT TOP ("), i_int_WellNum, Translate(") [ExperimentID],[DateTime],[SourceBarcode],[SourceWell],[SourceVesselType],[DestinationBarcode],[DestinationWell],[DestinationVesselType],[TotalVol],[SampleTransferVol],[Reagent1Vol],[Reagent1ID],[Reagent1Lot],[Reagent2Vol],[Reagent2ID],[Reagent2Lot],[ProcessStep] FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[SampleTrackingTable] where ExperimentID='"), i_str_ExperimentID, Translate("' AND DestinationBarcode='"), str_Barcode, Translate("' AND Reagent1ID='"), i_str_ReagentName, Translate("' AND Reagent1Lot ='"), i_str_ReagentLot, Translate("' AND ProcessStep ='"), i_str_ProcessStep);
// }} ""
// {{{ 659 1 0 "de95589a_38eb_46ea_b897820b6c4e8ace" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQuery = StrConcat4(str_sqlQuery, Translate("' order by DateTime DESC"), Translate(""), Translate(""));
// }} ""
// {{{ 660 1 0 "fa261cc3_81fd_47d9_b49ed50de3344afb" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQuery);
// }} ""
// {{ 661 1 0 "f40eaf11_cf3c_4ba0_bd33c9a6a30342f7" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_ReadDatabaseFile.AddField("Reagent1Vol", flt_ReagentVol, hslFloat);
hnd_ReadDatabaseFile.AddField("DestinationWell", str_Well_ID, hslString, 255);
hnd_ReadDatabaseFile.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_ReadDatabaseFile.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQuery, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 662 1 0 "2861f720_7a1b_46f6_89100118a729bd72" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LC_DBRead = 0;
while (
   (hnd_ReadDatabaseFile.Eof() == 0)
)
{
LC_DBRead = LC_DBRead + 1;
// }} ""
// {{ 663 1 0 "312915e6_cdf6_4829_a0e99dc5f221771f" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_ReadDatabaseFile.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 664 1 0 "285200d2_8d81_4bf1_a057b6b585c0407b" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_DDiFileToWriteTo.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 665 1 0 "2861f720_7a1b_46f6_89100118a729bd72" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 666 1 0 "1f8b8aac_1aad_4406_ba045ae97c5bd8f6" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_ReadDatabaseFile.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_ReadDatabaseFile.RemoveFields();
// }} ""
// {{ 667 1 0 "39f4574c_f77b_46f1_9cf8aad7a3af1f1e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 668 1 0 "791c62a6_63fa_44f2_a8cf388bf8f78475" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_DDiFileToWriteTo.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_DDiFileToWriteTo.RemoveFields();
// }} ""
// {{ 669 1 0 "b959623d_ef75_461c_9ad594916ed6c890" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 670 1 0 "c1ea4ed6_8b74_4d73_9921d54a4e45129b" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_FilePathSchema = Translate("C:\\DataCapture\\upload\\schema.ini");
// }} ""
// {{{ 671 1 0 "77e5ab3e_909a_4b88_bf27781f31784b1f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
bln_Schema = FileDirectoryLib::CheckIfFileExists(str_FilePathSchema);
// }} ""
// {{ 672 1 0 "6d85dbb6_4621_4511_8ca3496ab19799c4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (bln_Schema == 1)
{
// }} ""
// {{{ 673 1 0 "cf9663b8_4d82_4e27_ad1674e1706213aa" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FileDirectoryLib::DeleteFile(str_FilePathSchema);
// }} ""
// {{ 674 1 0 "ce5fddf0_f8e3_4ab4_82ae624b112cd66a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini deleted"));
// }} ""
// {{ 675 1 0 "6d85dbb6_4621_4511_8ca3496ab19799c4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 676 1 0 "fbd6a291_e5d4_446a_85376e91dab5cb25" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini not found"));
// }} ""
// {{ 677 1 0 "6d85dbb6_4621_4511_8ca3496ab19799c4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 678 1 0 "26d0bbc0_8df2_4af5_bc1a896b0978b625" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 679 1 0 "757a5aae_fae9_474b_ae42af03281d27a3" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
RemoveTextDelimitersFromAsciiTextFile(str_DDIFileName);
// }} ""
// {{ 680 1 0 "6e1d5012_3c4e_43e0_9611c0cf069d79bc" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Start"));
// }} ""
// {{ 681 1 0 "26aaed4d_218f_4fed_86131bb500787e5b" "{B31F3545-5D80-11d4-A5EB-0050DA737D89}"
{
event localDummyEvent1;
if( 0 == Shell("C:\\DataCapture\\DataCaptureStart.bat", hslShow, hslSynchronous, localDummyEvent1, blnPuma) )
{
    MECC::RaiseRuntimeErrorEx(-1238499072, MECC::IDS::stepNameShell, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
}
// }} ""
// {{ 682 1 0 "15ad41aa_32bf_4642_ad1c754f7925e5a3" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Complete"));
// }} ""
// {{ 683 1 0 "7831e5aa_30f4_4da3_8d84abca1a33be0c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("##################################################\n             DDi CRITICAL REAGENTS FILE TRIGGER: END\n##################################################"));
// }} ""
// {{{ 5 "DDI_CriticalReagents" "End"
}
// }} ""
// {{{ 5 "DDI_SampleTransfer" "Begin"
function DDI_SampleTransfer( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_int_DestWellNum, variable i_int_SourcetWellNum, variable i_str_ProcessStep ) void {
// }} ""
private variable int_BarcodeArraySize;
private variable str_DDIFolder;
private variable str_DDIFileName;
private variable LC_BarcodeArraySize;
private variable str_Time;
private variable str_Date;
private variable LC_DBRead;
private variable str_sqlQuery;
private variable str_SourceWell_ID;
private variable str_DestWell_ID;
private variable str_SourceBarcode;
private variable flt_Vol;
private variable str_DestBarcode;
private variable str_TimeForDDiFile;
private variable str_DateTimeForDDiFile;
private variable str_DateForDDiFile;
private file hnd_DDiFileToWriteTo;
private file hnd_ReadDatabaseFile;
private variable bln_Schema;
private variable str_FilePathSchema;
private variable blnPuma;
// {{ 5 "DDI_SampleTransfer" "InitLocals"
// }} ""
// {{ 798 1 0 "2e6bb84b_aa21_4d76_a9fe247ea28d67ee" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("##################################################\n             DDi SAMPLE TRANSFER FILE TRIGGER: START\n##################################################"));
// }} ""
// {{ 799 1 0 "c6f7842e_6046_49c3_98b1803a3da9c539" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 800 1 0 "c756b460_9731_485b_a8ac99768dd2b546" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_DDIFolder = Translate("C:\\DataCapture\\upload\\");
// }} ""
// {{ 801 1 0 "e3e12e6a_535f_4de1_b03b7880ba5830c5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 802 1 0 "5510feb3_b095_49e9_8c14d865f941fd3d" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
int_BarcodeArraySize=i_arr_Barcodes.GetSize();
// }} ""
// {{{ 803 1 0 "27aa9e8b_fec7_4f2b_be7e1fb277fb0f90" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("int_BarcodeArraySize = "), int_BarcodeArraySize);
// }} ""
// {{ 804 1 0 "9e2ac5eb_0644_46cc_bb55ad0b7ea57e89" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(LC_BarcodeArraySize = 0; LC_BarcodeArraySize < int_BarcodeArraySize;)
{
LC_BarcodeArraySize = LC_BarcodeArraySize + 1;
// }} ""
// {{ 805 1 0 "32a72ad5_3060_4529_b78375c2a29b9344" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
str_DestBarcode=i_arr_Barcodes.GetAt(LC_BarcodeArraySize-1);
// }} ""
// {{ 806 1 0 "a3358e88_69ad_4886_b740dcc5a2618590" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 807 1 0 "7e78ce03_9530_409a_bc4c80d99c5acd19" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Date = TimGetFormattedDate(Translate("_%Y-%m-%d "));
// }} ""
// {{{ 808 1 0 "7275a7e8_e204_41ab_8f9ff7704b883574" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Time = TimGetFormattedTime(Translate("%H-%M-%S"));
// }} ""
// {{ 809 1 0 "1f93163b_52b7_4bbb_97c9c5f2954711cb" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 810 1 0 "b2162df4_57e4_4e40_a3839661e3596f51" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DDIFileName = StrConcat8(str_DDIFolder, Translate("ST_"), str_DestBarcode, Translate("_"), i_str_ExperimentID, str_Date, str_Time, Translate(".csv"));
// }} ""
// {{{ 811 1 0 "9d017a93_ecb4_4223_ba0c61a3117b4d79" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("str_DDIFileName = "), str_DDIFileName);
// }} ""
// {{ 812 1 0 "fae65cbb_e72a_4ba4_879f9e661227ae5b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 813 1 0 "c96ce679_91e2_4d28_9a9cc2a08cd35bbd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateForDDiFile = TimGetFormattedDate(Translate("%Y-%m-%d"));
// }} ""
// {{{ 814 1 0 "4094c927_692e_4d01_ac6526c70b2fdee1" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_TimeForDDiFile = TimGetFormattedTime(Translate("%H:%M:%S"));
// }} ""
// {{{ 815 1 0 "335bc5c0_cf88_4257_88506ddce3beb035" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateTimeForDDiFile = StrConcat4(str_DateForDDiFile, Translate(" "), str_TimeForDDiFile, Translate(""));
// }} ""
// {{ 816 1 0 "cb301936_3173_4510_acdeb3f20f25f8db" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 817 1 0 "479989e9_0b8c_460b_9b1989a8b5dd3a32" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_DDiFileToWriteTo.SetExtendedProperties( "HDR=NO");
hnd_DDiFileToWriteTo.AddField("Destination Container", str_DestBarcode, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Destination Position", str_DestWell_ID, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Destination Size", i_int_DestWellNum, hslInteger);
hnd_DDiFileToWriteTo.AddField("Source Container", str_SourceBarcode, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Source Position", str_SourceWell_ID, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Source Size", i_int_SourcetWellNum, hslInteger);
hnd_DDiFileToWriteTo.AddField("Volume", flt_Vol, hslFloat);
hnd_DDiFileToWriteTo.AddField("Time", str_DateTimeForDDiFile, hslString, 255);
hnd_DDiFileToWriteTo.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_DDiFileToWriteTo.Open(str_DDIFileName, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, str_DDIFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 818 1 0 "30fb9c02_6f91_480f_a7cddd62fa0fae1b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 819 1 0 "816f8990_6532_4370_89d0c6b12a9b5b5d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 820 1 0 "de129cda_db86_4f75_a3b4199c3ac0d5f8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQuery = StrConcat12(Translate("SELECT TOP ("), i_int_DestWellNum, Translate(") [ExperimentID],[DateTime],[SourceBarcode],[SourceWell],[SourceVesselType],[DestinationBarcode],[DestinationWell],[DestinationVesselType],[TotalVol],[SampleTransferVol],[Reagent1Vol],[Reagent1ID],[Reagent1Lot],[Reagent2Vol],[Reagent2ID],[Reagent2Lot],[ProcessStep] FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[SampleTrackingTable] where ExperimentID='"), i_str_ExperimentID, Translate("' AND DestinationBarcode='"), str_DestBarcode, Translate("' AND ProcessStep ='"), i_str_ProcessStep, Translate("' order by DateTime DESC"), Translate(""), Translate(""), Translate(""));
// }} ""
// {{{ 821 1 0 "4e6096ae_8449_4200_a1c0cf0dc55d641c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQuery);
// }} ""
// {{ 822 1 0 "981f91a8_eb6f_4c67_9f9d1270affcbf74" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_ReadDatabaseFile.AddField("DestinationWell", str_DestWell_ID, hslString, 255);
hnd_ReadDatabaseFile.AddField("SourceBarcode", str_SourceBarcode, hslString, 255);
hnd_ReadDatabaseFile.AddField("SourceWell", str_SourceWell_ID, hslString, 255);
hnd_ReadDatabaseFile.AddField("SampleTransferVol", flt_Vol, hslFloat);
hnd_ReadDatabaseFile.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_ReadDatabaseFile.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQuery, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 823 1 0 "cb4632fa_a18d_41ef_8d96729e910d6650" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LC_DBRead = 0;
while (
   (hnd_ReadDatabaseFile.Eof() == 0)
)
{
LC_DBRead = LC_DBRead + 1;
// }} ""
// {{ 824 1 0 "94c950fc_7522_4f57_a49a2134aad61488" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_ReadDatabaseFile.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 825 1 0 "57d2dbd0_0f51_4422_95b47fd865140975" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_DDiFileToWriteTo.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 826 1 0 "cb4632fa_a18d_41ef_8d96729e910d6650" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 827 1 0 "e655ce91_86d2_4b13_87e0b82618cf6689" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_ReadDatabaseFile.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_ReadDatabaseFile.RemoveFields();
// }} ""
// {{ 828 1 0 "ea6ad9ad_1eb9_433d_b1922782195d750c" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_DDiFileToWriteTo.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_DDiFileToWriteTo.RemoveFields();
// }} ""
// {{ 829 1 0 "5b7c39f0_7e18_4192_96866c8f74b75866" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 830 1 0 "b16a6802_34c3_44e4_878aac471e2d4f2a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_FilePathSchema = Translate("C:\\DataCapture\\upload\\schema.ini");
// }} ""
// {{{ 831 1 0 "85a0a2f0_b2a4_4413_a7e495a4dbaa9fbc" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
bln_Schema = FileDirectoryLib::CheckIfFileExists(str_FilePathSchema);
// }} ""
// {{ 832 1 0 "33278a12_645c_40f9_b18febf7a1d92872" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (bln_Schema == 1)
{
// }} ""
// {{{ 833 1 0 "a77f39fd_f3a6_4c4d_bf1c472ce2700813" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FileDirectoryLib::DeleteFile(str_FilePathSchema);
// }} ""
// {{ 834 1 0 "4a122c94_449e_4efa_bc949f7f929b050d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini deleted"));
// }} ""
// {{ 835 1 0 "33278a12_645c_40f9_b18febf7a1d92872" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 836 1 0 "eb481132_f811_4fa6_8be7bebbd1032341" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini not found"));
// }} ""
// {{ 837 1 0 "33278a12_645c_40f9_b18febf7a1d92872" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 838 1 0 "db8310de_4a5a_4de6_b76c155e64d6b65b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 839 1 0 "60e36970_623a_4fbf_9deb17dc221dae61" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
RemoveTextDelimitersFromAsciiTextFile(str_DDIFileName);
// }} ""
// {{ 840 1 0 "9e2ac5eb_0644_46cc_bb55ad0b7ea57e89" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 841 1 0 "fe6c635c_0667_4c7a_9a10ab8818b9060b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Start"));
// }} ""
// {{ 842 1 0 "d3948cbc_500a_4929_9fa1c81593bb7ec2" "{B31F3545-5D80-11d4-A5EB-0050DA737D89}"
{
event localDummyEvent1;
if( 0 == Shell("C:\\DataCapture\\DataCaptureStart.bat", hslShow, hslSynchronous, localDummyEvent1, blnPuma) )
{
    MECC::RaiseRuntimeErrorEx(-1238499072, MECC::IDS::stepNameShell, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
}
// }} ""
// {{ 843 1 0 "4231178f_78c6_4a4f_abf5818feef47fe6" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Complete"));
// }} ""
// {{ 844 1 0 "a9110200_52ab_4292_b45d16e71880576b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("##################################################\n             DDi SAMPLE TRANSFER FILE TRIGGER: END\n##################################################"));
// }} ""
// {{{ 5 "DDI_SampleTransfer" "End"
}
// }} ""
// {{{ 5 "DDI_Octet" "Begin"
function DDI_Octet( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_int_WellNum ) void {
// }} ""
private variable int_BarcodeArraySize;
private variable str_sqlQueryOctet;
private variable str_DDIFolder;
private variable flt_BindingRate;
private variable str_Well_ID;
private variable flt_Titer;
private variable LC_BarcodeArraySize;
private variable str_DDIFileName;
private variable str_Time;
private variable str_Date;
private variable LC_DBRead;
private variable str_Barcode;
private variable str_TimeForDDiFile;
private variable str_DateTimeForDDiFile;
private variable str_DateForDDiFile;
private file hnd_DDiFileToWriteTo;
private file hnd_ReadDatabaseFile;
private variable bln_Schema;
private variable str_FilePathSchema;
private variable blnPuma;
// {{ 5 "DDI_Octet" "InitLocals"
// }} ""
// {{ 751 1 0 "814651f6_fa60_48b0_9bfbd75121421420" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("########################################\n             DDi OCTET  FILE TRIGGER: START\n########################################"));
// }} ""
// {{ 752 1 0 "b593570a_d19a_4733_ac610e9c904d7af1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 753 1 0 "2bf50075_99fd_461a_8e048c235cffa0b6" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_DDIFolder = Translate("C:\\DataCapture\\upload\\");
// }} ""
// {{ 754 1 0 "673dc1b2_7aa6_4964_a3bfc4413268ea5b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 755 1 0 "4afc0f06_ae1c_40d3_8b20d393d3e1d006" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Date = TimGetFormattedDate(Translate("_%Y-%m-%d "));
// }} ""
// {{{ 756 1 0 "a5652c91_a970_4fe7_b64d38d05194a2e7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Time = TimGetFormattedTime(Translate("%H-%M-%S"));
// }} ""
// {{ 757 1 0 "5818256b_38b3_4998_af7807a8ceaaf6d4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 758 1 0 "c6a375c4_b1df_41c9_9a4f1d3ecff2935e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DDIFileName = StrConcat8(str_DDIFolder, Translate("OCTET_"), i_str_ExperimentID, str_Date, str_Time, Translate(".csv"), Translate(""), Translate(""));
// }} ""
// {{{ 759 1 0 "8b974404_03d6_4758_b67bd61c1ca5fd3e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("DDI File - "), str_DDIFileName);
// }} ""
// {{ 760 1 0 "67c83776_428b_4ff7_9ba715cd2e051fec" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 761 1 0 "1571a6c4_c2f6_430c_986d820c9bd452d5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateForDDiFile = TimGetFormattedDate(Translate("%Y-%m-%d"));
// }} ""
// {{{ 762 1 0 "53d33f59_2b00_4c66_a82346c3d5c1cfa4" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_TimeForDDiFile = TimGetFormattedTime(Translate("%H:%M:%S"));
// }} ""
// {{{ 763 1 0 "86a53baf_eaf6_49d9_82d280b2592071eb" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateTimeForDDiFile = StrConcat4(str_DateForDDiFile, Translate(" "), str_TimeForDDiFile, Translate(""));
// }} ""
// {{ 764 1 0 "723418d6_c640_459a_84e2e2249758ace1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 765 1 0 "f904645b_a5d7_420f_b7db459b8695e3f1" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
int_BarcodeArraySize=i_arr_Barcodes.GetSize();
// }} ""
// {{{ 766 1 0 "c05db3cb_46a6_4c1f_abdb0fe2fbf7b692" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("int_BarcodeArraySize = "), int_BarcodeArraySize);
// }} ""
// {{ 767 1 0 "bd57e5d5_19df_4953_92ff561221e37d89" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 768 1 0 "63aa764e_1529_48d1_a2129889f33c7624" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_DDiFileToWriteTo.SetExtendedProperties( "HDR=NO");
hnd_DDiFileToWriteTo.AddField("Container Barcode", str_Barcode, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Container Position", str_Well_ID, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Titer", flt_Titer, hslFloat);
hnd_DDiFileToWriteTo.AddField("Binding Rate", flt_BindingRate, hslFloat);
hnd_DDiFileToWriteTo.AddField("Time", str_DateTimeForDDiFile, hslString, 255);
hnd_DDiFileToWriteTo.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_DDiFileToWriteTo.Open(str_DDIFileName, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, str_DDIFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 769 1 0 "cabd2733_5cee_429e_a9f5bdeb3f07efe9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 770 1 0 "8ef4ab2c_d2d7_4d88_b2dd86657de8d8ea" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(LC_BarcodeArraySize = 0; LC_BarcodeArraySize < int_BarcodeArraySize;)
{
LC_BarcodeArraySize = LC_BarcodeArraySize + 1;
// }} ""
// {{ 771 1 0 "579e6f00_139b_4502_b0e48f9799c13125" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
str_Barcode=i_arr_Barcodes.GetAt(LC_BarcodeArraySize-1);
// }} ""
// {{{ 772 1 0 "49d421d7_1f3f_4dc2_b63172706bc2104a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQueryOctet = StrConcat12(Translate("SELECT TOP ("), i_int_WellNum, Translate(") PivotTable.[ExperimentID],PivotTable.[SampleID],PivotTable.[DateTime],PivotTable.[SampleBarcode],PivotTable.[SampleWell],PivotTable.[SampleVesselType],PivotTable.[AssayType],PivotTable.[Titer] as Result_Titer, PivotTable.[Binding Rate] as Result_BR "), Translate("FROM (SELECT [ExperimentID],[SampleID],[DateTime],[SampleBarcode],[SampleWell],[SampleVesselType],[AssayType], ResultType, Result "), Translate("FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[AnalyticResultTable]) AS T  "), Translate("PIVOT  (MAX(Result) FOR ResultType IN ([Titer], [Binding Rate])) AS PivotTable "), Translate("WHERE ExperimentID = '"), i_str_ExperimentID, Translate("' AND SampleBarcode ='"), str_Barcode, Translate("' AND AssayType = 'Octet_ProteinA' ORDER BY DateTime DESC"), Translate(""));
// }} ""
// {{{ 773 1 0 "7cf3c689_5963_447b_ae538467a6b4a9cc" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQueryOctet);
// }} ""
// {{ 774 1 0 "19762064_e9d9_4dd8_812d10fa0d1d8141" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_ReadDatabaseFile.AddField("Result_Titer", flt_Titer, hslFloat);
hnd_ReadDatabaseFile.AddField("Result_BR", flt_BindingRate, hslFloat);
hnd_ReadDatabaseFile.AddField("SampleWell", str_Well_ID, hslString, 255);
hnd_ReadDatabaseFile.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_ReadDatabaseFile.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQueryOctet, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 775 1 0 "d068ff64_eb94_4fa3_b2ccba67ce4513c6" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LC_DBRead = 0;
while (
   (hnd_ReadDatabaseFile.Eof() == 0)
)
{
LC_DBRead = LC_DBRead + 1;
// }} ""
// {{ 776 1 0 "6dbce18b_9c8c_4e2c_bc296d6d47efc9c4" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_ReadDatabaseFile.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 777 1 0 "c770bf10_74e7_4aa7_b98cff3705d46cd8" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_DDiFileToWriteTo.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 778 1 0 "d068ff64_eb94_4fa3_b2ccba67ce4513c6" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 779 1 0 "528f7755_7ea7_48c7_b02f1255fbd26994" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_ReadDatabaseFile.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_ReadDatabaseFile.RemoveFields();
// }} ""
// {{ 780 1 0 "8ef4ab2c_d2d7_4d88_b2dd86657de8d8ea" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 781 1 0 "0c46db74_3b36_498c_b6d051c4f9d6091a" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_DDiFileToWriteTo.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_DDiFileToWriteTo.RemoveFields();
// }} ""
// {{ 782 1 0 "ad0c60eb_e6f9_4418_958206410debce3b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 783 1 0 "aeefdf31_5008_497d_b013674bdce52e14" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_FilePathSchema = Translate("C:\\DataCapture\\upload\\schema.ini");
// }} ""
// {{{ 784 1 0 "4adf25d4_9101_4b13_9f4fb84ed34e68df" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
bln_Schema = FileDirectoryLib::CheckIfFileExists(str_FilePathSchema);
// }} ""
// {{ 785 1 0 "2858f216_4b2a_4602_9f9709da037d2329" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (bln_Schema == 1)
{
// }} ""
// {{{ 786 1 0 "8c3ea9b7_830a_490f_9f351a1e0e33cf42" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FileDirectoryLib::DeleteFile(str_FilePathSchema);
// }} ""
// {{ 787 1 0 "534cab7d_39f1_4714_b74789930b27e8da" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini deleted"));
// }} ""
// {{ 788 1 0 "2858f216_4b2a_4602_9f9709da037d2329" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 789 1 0 "144af6b6_3e8e_4018_8938df79afbe763c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini not found"));
// }} ""
// {{ 790 1 0 "2858f216_4b2a_4602_9f9709da037d2329" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 791 1 0 "3b1cfec4_b8d2_4664_9e835c1665504270" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 792 1 0 "e58fc870_b4ca_4102_b0f91ed7727f5f84" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
RemoveTextDelimitersFromAsciiTextFile(str_DDIFileName);
// }} ""
// {{ 793 1 0 "a95a2d05_7317_4889_b5c4bfce49a5adb7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Start"));
// }} ""
// {{ 794 1 0 "5d20730f_4dbc_446b_a27da612176ec7e2" "{B31F3545-5D80-11d4-A5EB-0050DA737D89}"
{
event localDummyEvent1;
if( 0 == Shell("C:\\DataCapture\\DataCaptureStart.bat", hslShow, hslSynchronous, localDummyEvent1, blnPuma) )
{
    MECC::RaiseRuntimeErrorEx(-1238499072, MECC::IDS::stepNameShell, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
}
// }} ""
// {{ 795 1 0 "6c8d2c21_9aa6_4127_aee53e269a48769c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Complete"));
// }} ""
// {{ 796 1 0 "2eeb9a7d_695c_41d0_b4c91fea06c84af6" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("########################################\n             DDi OCTET  FILE TRIGGER: START\n########################################"));
// }} ""
// {{{ 5 "DDI_Octet" "End"
}
// }} ""
// {{{ 5 "DDI_CriticalReagents_Method4" "Begin"
function DDI_CriticalReagents_Method4( variable & i_arr_Barcodes[], variable i_str_ExperimentID, variable i_str_ReagentName, variable i_str_ReagentLot, variable i_int_WellNum, variable i_str_ProcessStep ) void {
// }} ""
private variable int_BarcodeArraySize;
private variable bln_Schema;
private variable str_DDIFolder;
private variable str_TimeForDDiFile;
private variable str_Well_ID;
private variable LC_BarcodeArraySize;
private variable str_DDIFileName;
private variable str_Time;
private variable str_FilePathSchema;
private variable str_Date;
private variable blnPuma;
private variable str_sqlQuery;
private variable LC_DBRead;
private variable str_DateTimeForDDiFile;
private variable flt_ReagentVol;
private variable str_DateForDDiFile;
private variable str_Barcode;
private file hnd_DDiFileToWriteTo;
private file hnd_ReadDatabaseFile;
// {{ 5 "DDI_CriticalReagents_Method4" "InitLocals"
// }} ""
// {{ 685 1 0 "fbbf8367_6946_46ac_9a70ab3962364267" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("###########################################################\n             DDi CRITICAL REAGENTS METHOD 4 FILE TRIGGER: START\n###########################################################"));
// }} ""
// {{ 686 1 0 "b524e9b4_cc31_48dd_96100162407c7ded" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 687 1 0 "17cca305_e5d7_4198_ba0907335e82a51c" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_DDIFolder = Translate("C:\\DataCapture\\upload\\");
// }} ""
// {{ 688 1 0 "d32d2804_2389_4e23_ac92c22699aa84e2" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 689 1 0 "a6afdae5_a613_4e79_b78665a5f945101c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Date = TimGetFormattedDate(Translate("_%Y-%m-%d "));
// }} ""
// {{{ 690 1 0 "ecaa452a_479c_4c33_a8bc7ecc5a9bca32" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_Time = TimGetFormattedTime(Translate("%H-%M-%S"));
// }} ""
// {{ 691 1 0 "e24b82ef_f410_4093_b189311eeab78a51" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 692 1 0 "79927131_be64_4110_bbc8918f6320dfe6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DDIFileName = StrConcat8(str_DDIFolder, Translate("RT_"), i_str_ExperimentID, str_Date, str_Time, Translate(".csv"), Translate(""), Translate(""));
// }} ""
// {{{ 693 1 0 "1ced76a7_707c_4e30_b059f4c8b97d28b3" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("str_DDIFileName = "), str_DDIFileName);
// }} ""
// {{ 694 1 0 "a6e66976_2e98_41bc_8035031c36c5c1f3" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 695 1 0 "63846aa3_4165_4ed0_8f7d7e30e301b9b3" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateForDDiFile = TimGetFormattedDate(Translate("%Y-%m-%d"));
// }} ""
// {{{ 696 1 0 "d7bc552a_3496_45ba_826096c439c41641" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_TimeForDDiFile = TimGetFormattedTime(Translate("%H:%M:%S"));
// }} ""
// {{{ 697 1 0 "1b077f33_e367_44e3_9bf08c769685c2f1" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_DateTimeForDDiFile = StrConcat4(str_DateForDDiFile, Translate(" "), str_TimeForDDiFile, Translate(""));
// }} ""
// {{ 698 1 0 "cfaa5c03_2621_48f5_aae69cfa203412af" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 699 1 0 "19416b08_2f69_44fb_8c230c63843167c0" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
int_BarcodeArraySize=i_arr_Barcodes.GetSize();
// }} ""
// {{{ 700 1 0 "9fc25f69_cd13_44da_ad690eee092d0b59" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("int_BarcodeArraySize = "), int_BarcodeArraySize);
// }} ""
// {{ 701 1 0 "f70555d5_6ad5_4569_b1114747a9560985" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 702 1 0 "7a8aafc1_79f5_4c40_830f4d9c4fdf9bc4" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_DDiFileToWriteTo.SetExtendedProperties( "HDR=NO");
hnd_DDiFileToWriteTo.AddField("Destination Container", str_Barcode, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Destination Position", str_Well_ID, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Reagent Name", i_str_ReagentName, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Reagent Batch", i_str_ReagentLot, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Reagent Volume", flt_ReagentVol, hslFloat);
hnd_DDiFileToWriteTo.AddField("Time", str_DateTimeForDDiFile, hslString, 255);
hnd_DDiFileToWriteTo.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_DDiFileToWriteTo.Open(str_DDIFileName, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, str_DDIFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 703 1 0 "93c62a69_435f_4518_842528ec2b171e5e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 704 1 0 "b735c251_37d6_43f8_8c507ba751aca172" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(LC_BarcodeArraySize = 0; LC_BarcodeArraySize < int_BarcodeArraySize;)
{
LC_BarcodeArraySize = LC_BarcodeArraySize + 1;
// }} ""
// {{ 705 1 0 "f6ce8f33_30e7_4263_b849d42f80ea5c9a" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
str_Barcode=i_arr_Barcodes.GetAt(LC_BarcodeArraySize-1);
// }} ""
// {{ 706 1 0 "9c299e98_5233_4613_b1fca733ea512298" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 707 1 0 "d1c5154b_ad41_4a52_acd59bfe9c4a869d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQuery = StrConcat12(Translate("SELECT TOP ("), i_int_WellNum, Translate(") [ExperimentID],[DateTime],[SourceBarcode],[SourceWell],[SourceVesselType],[DestinationBarcode],[DestinationWell],[DestinationVesselType],[TotalVol],[SampleTransferVol],[Reagent1Vol],[Reagent1ID],[Reagent1Lot],[Reagent2Vol],[Reagent2ID],[Reagent2Lot],[ProcessStep] FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[SampleTrackingTable] where ExperimentID='"), i_str_ExperimentID, Translate("' AND DestinationBarcode='"), str_Barcode, Translate("' AND Reagent1ID='"), i_str_ReagentName, Translate("' AND Reagent1Lot ='"), i_str_ReagentLot, Translate("' AND ProcessStep ='"), i_str_ProcessStep);
// }} ""
// {{{ 708 1 0 "074c0566_5909_4dcb_8ed3d0bf14c3daf2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQuery = StrConcat4(str_sqlQuery, Translate("' order by DateTime DESC"), Translate(""), Translate(""));
// }} ""
// {{{ 709 1 0 "b7f45eac_d731_4877_853add9297c72a77" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQuery);
// }} ""
// {{ 710 1 0 "3e3cb066_d8f9_4b90_a01335dc23d1dfa2" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_ReadDatabaseFile.AddField("Reagent1Vol", flt_ReagentVol, hslFloat);
hnd_ReadDatabaseFile.AddField("DestinationWell", str_Well_ID, hslString, 255);
hnd_ReadDatabaseFile.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_ReadDatabaseFile.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQuery, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 711 1 0 "5c14dc30_dc55_4dcf_ac14cb1b147eb195" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LC_DBRead = 0;
while (
   (hnd_ReadDatabaseFile.Eof() == 0)
)
{
LC_DBRead = LC_DBRead + 1;
// }} ""
// {{ 712 1 0 "a85fec35_2f13_4acf_bdaa78584cee8c73" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_ReadDatabaseFile.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 713 1 0 "dbb12e65_4748_4dc6_9b1030da9415fdea" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_DDiFileToWriteTo.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 714 1 0 "5c14dc30_dc55_4dcf_ac14cb1b147eb195" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 715 1 0 "2455318a_db5e_40af_8cda3f46bfef6cae" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_ReadDatabaseFile.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_ReadDatabaseFile.RemoveFields();
// }} ""
// {{ 716 1 0 "b735c251_37d6_43f8_8c507ba751aca172" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 717 1 0 "4ef3e099_27cc_4a4f_a80495d9460e0212" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_DDiFileToWriteTo.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_DDiFileToWriteTo.RemoveFields();
// }} ""
// {{ 718 1 0 "bfbc5765_ed7b_4a2c_ab3e780ad8a73936" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 719 1 0 "56b9a892_26ff_4254_a521520f937f91de" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_DDiFileToWriteTo.SetExtendedProperties( "HDR=NO");
hnd_DDiFileToWriteTo.AddField("Destination Container", str_Barcode, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Destination Position", str_Well_ID, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Reagent Name", i_str_ReagentName, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Reagent Batch", i_str_ReagentLot, hslString, 255);
hnd_DDiFileToWriteTo.AddField("Reagent Volume", flt_ReagentVol, hslFloat);
hnd_DDiFileToWriteTo.AddField("Time", str_DateTimeForDDiFile, hslString, 255);
hnd_DDiFileToWriteTo.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_DDiFileToWriteTo.Open(str_DDIFileName, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, str_DDIFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 720 1 0 "25e20cb0_4046_4dde_860bbd3a7b0663ee" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 721 1 0 "17fae6fd_b639_4e8b_b5484cbdad6f648c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(LC_BarcodeArraySize = 0; LC_BarcodeArraySize < int_BarcodeArraySize;)
{
LC_BarcodeArraySize = LC_BarcodeArraySize + 1;
// }} ""
// {{ 722 1 0 "db829189_d6c6_4e0b_81792dc1ee93b2d5" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
str_Barcode=i_arr_Barcodes.GetAt(LC_BarcodeArraySize-1);
// }} ""
// {{ 723 1 0 "8f8b66a8_ab83_48ad_8d46a81b577ec3b2" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 724 1 0 "375e76e6_c6b5_4e56_a4403300152fc399" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQuery = StrConcat12(Translate("SELECT TOP ("), i_int_WellNum, Translate(") [ExperimentID],[DateTime],[SourceBarcode],[SourceWell],[SourceVesselType],[DestinationBarcode],[DestinationWell],[DestinationVesselType],[TotalVol],[SampleTransferVol],[Reagent1Vol],[Reagent1ID],[Reagent1Lot],[Reagent2Vol],[Reagent2ID],[Reagent2Lot],[ProcessStep] FROM [MEDIMMUNESAMPLETRACKINGDB_2014_Data].[dbo].[SampleTrackingTable] where ExperimentID='"), i_str_ExperimentID, Translate("' AND DestinationBarcode='"), str_Barcode, Translate("' AND Reagent2ID='"), i_str_ReagentName, Translate("' AND Reagent2Lot ='"), i_str_ReagentLot, Translate("' AND ProcessStep ='"), i_str_ProcessStep);
// }} ""
// {{{ 725 1 0 "e01c6c4d_edbf_4263_8f640c5bde39f9b2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
str_sqlQuery = StrConcat4(str_sqlQuery, Translate("' order by DateTime DESC"), Translate(""), Translate(""));
// }} ""
// {{{ 726 1 0 "751dc0e7_45bb_44d0_91e65eccc65d2ea6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("sql Query - "), str_sqlQuery);
// }} ""
// {{ 727 1 0 "92f86eb3_fe02_4c9b_a85f5818dddd5e5b" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
hnd_ReadDatabaseFile.AddField("Reagent1Vol", flt_ReagentVol, hslFloat);
hnd_ReadDatabaseFile.AddField("DestinationWell", str_Well_ID, hslString, 255);
hnd_ReadDatabaseFile.SetDelimiter(hslCSVDelimited);
if( 0 == hnd_ReadDatabaseFile.Open(SampleTrackingDB_glDBName, hslRead, str_sqlQuery, SampleTrackingDB_glConnectionString) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, SampleTrackingDB_glDBName, "HxMetEdCompCmd");
}
// }} ""
// {{ 728 1 0 "0a0c6930_10d1_4dd4_9adf22b8ba58ee41" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LC_DBRead = 0;
while (
   (hnd_ReadDatabaseFile.Eof() == 0)
)
{
LC_DBRead = LC_DBRead + 1;
// }} ""
// {{ 729 1 0 "6f17854e_d1eb_4563_b90de11574c90753" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_ReadDatabaseFile.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 730 1 0 "72f5a429_eabf_48ee_b13f13ed9a02d7c4" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hnd_DDiFileToWriteTo.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 731 1 0 "0a0c6930_10d1_4dd4_9adf22b8ba58ee41" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 732 1 0 "f61147df_054b_4b9c_becdba6da9b96f5b" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_ReadDatabaseFile.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_ReadDatabaseFile.RemoveFields();
// }} ""
// {{ 733 1 0 "17fae6fd_b639_4e8b_b5484cbdad6f648c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 734 1 0 "a982817c_81e9_4c35_92ee1e474390daf6" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != hnd_DDiFileToWriteTo.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
hnd_DDiFileToWriteTo.RemoveFields();
// }} ""
// {{ 735 1 0 "b4985fad_f30e_41a7_a7cd3288adc434e0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 736 1 0 "5cb0ba5b_b079_439b_9b76f98810ef8b0a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
str_FilePathSchema = Translate("C:\\DataCapture\\upload\\schema.ini");
// }} ""
// {{{ 737 1 0 "d535da90_2ec0_4cc5_a7e61a19e1e1a218" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
bln_Schema = FileDirectoryLib::CheckIfFileExists(str_FilePathSchema);
// }} ""
// {{ 738 1 0 "b179e5ba_1278_4d47_acb5dd180f15e4e0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (bln_Schema == 1)
{
// }} ""
// {{{ 739 1 0 "f7593d2f_fa9e_44e6_87ba7ec4a7d62851" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FileDirectoryLib::DeleteFile(str_FilePathSchema);
// }} ""
// {{ 740 1 0 "01937b07_a871_4389_af0931eb49996334" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini deleted"));
// }} ""
// {{ 741 1 0 "b179e5ba_1278_4d47_acb5dd180f15e4e0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 742 1 0 "2cdecba5_7a2a_446f_b396a50d7e37dcfb" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Schema.ini not found"));
// }} ""
// {{ 743 1 0 "b179e5ba_1278_4d47_acb5dd180f15e4e0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 744 1 0 "c18d29ac_b1ec_4bd0_ba88955f73ff27c6" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 745 1 0 "2e043b69_9ca9_4143_bd504989a7c9b157" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
RemoveTextDelimitersFromAsciiTextFile(str_DDIFileName);
// }} ""
// {{ 746 1 0 "c615d0b6_d567_4104_b8f55e47114278b4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Start"));
// }} ""
// {{ 747 1 0 "5df0d1c2_db1e_432a_a094cedd6334abea" "{B31F3545-5D80-11d4-A5EB-0050DA737D89}"
{
event localDummyEvent1;
if( 0 == Shell("C:\\DataCapture\\DataCaptureStart.bat", hslShow, hslSynchronous, localDummyEvent1, blnPuma) )
{
    MECC::RaiseRuntimeErrorEx(-1238499072, MECC::IDS::stepNameShell, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
}
// }} ""
// {{ 748 1 0 "27c1854e_eb36_4282_90532ec5e268fa42" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("DDi Trigger Complete"));
// }} ""
// {{ 749 1 0 "cbe58dc0_b638_44a6_9a4b9200e0b46473" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("###########################################################\n             DDi CRITICAL REAGENTS METHOD 4 FILE TRIGGER: END\n###########################################################"));
// }} ""
// {{{ 5 "DDI_CriticalReagents_Method4" "End"
}
// }} ""
/* {{ 2 "SubmethodInsertLine" "" */ // }} ""
// {{{ 2 "LibraryNamespace" "End"
} // library namespace
// }} ""
// $$author=ch33$$valid=0$$time=2024-06-05 13:23$$checksum=354c38a2$$length=083$$