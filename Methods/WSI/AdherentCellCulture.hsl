 namespace _Method { #include "HSLML_STARLib.hsl" }
 namespace _Method { #include "WSI\\AswStatusDialog_WSI.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
 namespace _Method { #include "WSI\\SangerGeneral.hs_" } 
 namespace _Method { #include "HSLFileDirectoryLib.hsl" } 
 namespace _Method { #include "HSLFilLib.hsl" } 
 namespace _Method { #include "HSLTimLib.hsl" } 
 namespace _Method { #include "Unique_members.hs_" } 
 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Array.hsl" } 
 namespace _Method { #include "HSLDevLib.hsl" } 
 namespace _Method { #include "WSI\\TraceArray.hs_" } 
 namespace _Method { #include "WSI\\SCAP_STARplus.hs_" } 
 namespace _Method { #include "WSI\\UV_STARplus.hs_" } 
 namespace _Method { #include "WSI\\JSONSearch.hs_" } 
 namespace _Method { #include "ASWStandardDialogs\\ASWStandardDialogs.hsl" } 
 namespace _Method { #include "ASWStandard\\TraceLevel\\TraceLevel.hsl" } 
 namespace _Method { #include "WSI\\HSLGetSerialNumber_WSI.hsl" } 
 namespace _Method { #include "load_instructions.hs_" } 
 namespace _Method { #include "lookup.hs_" } 
 namespace _Method { #include "WSI\\SangerBarcoding\\HSLBarcodeReader_WSI.hsl" } 
 namespace _Method { #include "Hamilton Tilt Clamp Module\\Hamilton Tilt Clamp Module.hsl" } 
 namespace _Method { #include "VirtualLabware_V2.hsl" } 
 namespace _Method { #include "WSI\\FindDBPath.hs_" } 
 namespace _Method { #include "HSLUtilLib2.hsl" } 
 namespace _Method { #include "HSLDeckVisualize.hsl" } 
 namespace _Method { #include "MLSTARLiquidClassLib.hsl" } 
 namespace _Method { #include "HSLMthLib.hsl" } 
 namespace _Method { #include "ParallelProcessHandling.hs_" } 
 namespace _Method { #include "DataManager\\DataManagerInterface.hs_" } 
 namespace _Method { #include "HSLExtensions\\Array2D.hsl" } 
 namespace _Method { #include "Hamilton Heater Shaker\\HslHamHeaterShakerLib.hsl" } 
 namespace _Method { #include "HAMILTON\\HSLHamiltonMediaFillModule.hsl" } 
#include "STARplus_Deck.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable blnSimMode;
variable blnTipReload;
variable strProcessType;
variable strCurrentRunFolderPath;
variable intNumberOfSourcePlates;
variable intNumberOfDestinationPlates;
variable arrWorklist_SourceBarcodes[];
variable arrWorklist_SourceWellIDs[];
variable arrWorklist_DestinationBarcodes[];
variable arrWorklist_DestinationWellIDs[];
variable lpCount;
variable intCurrentRunNumber;
variable blnAdmin; // Pulled from the DB. Generated by IdentifyCurrentUser in A_MethodInit
variable frkHandle; // handle for the deck movement associated with the UV light cleaning
timer tmrUVLight; // Timer associated with how long the UV lights have been active
variable strImagePath;
variable strImageFilePath;
variable strImageFolderPath;
variable strUsersPreferredName;
variable arrInWorklistBarcodes[];
variable arrScannedBarcodes[];
variable intNumberOfActiveRequestFiles;
variable blnReturn;
variable strMethodFolderPath;
variable blnDirectoryExists;
variable arrWorkflow[];
variable strActiveRequestFolderPath;
variable devTilt_1;
variable devTilt_2;
variable lpCounter1;
dialog customDialogEADADE7DEC1B4fa5955C33C0BAC32C9B;
variable lpCounter;
variable strSourceLabwareType;
variable blnTesting; // "testing",
variable strTesting;
variable blnMethodProceed;
variable intTrace;
global device ML_STAR ("STARplus_Deck.lay", "ML_STAR", hslTrue);
variable strDestinationLabwareType;
variable intAngle;
variable intOffsetX;
variable intOffsetZ;
variable intDistanceToHingeX;
variable intDistanceToHingeZ;
variable arrConfigFilePaths[];
sequence arrAllSequences[];
variable intNumberOfSequences;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
 namespace _Method { #include "HSLSTCCLib.hs_" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
private variable arrActiveRequestFilePaths[];
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
SANGERGENERAL::_InitLibrary();
UNIQUE_MEMBERS::_InitLibrary();
TRACEARRAY::_InitLibrary();
SCAP_STARPLUS::_InitLibrary();
UV_STARPLUS::_InitLibrary();
JSONSEARCH::_InitLibrary();
LOAD_INSTRUCTIONS::_InitLibrary();
LOOKUP::_InitLibrary();
FINDDBPATH::_InitLibrary();
PARALLELPROCESSHANDLING::_InitLibrary();
DATAMANAGERINTERFACE::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "46e715ba_19ae_40d1_a350f34c86ae42e2" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*******************************************************************************************************************************************\n                                                            Method Details\n*******************************************************************************************************************************************\nMethod:                                            Cell Culturing for the MAVE_SGE project\nVersion:                                            0.1\nDescription:                                      Check SOPs \nSoftware:                                         Venus 4 (v 4.5.0.7977)\nAuthor:                                             Chris Henderson\nProcess Flow:                                  \n****************************************************************************************************************************************** "));
// }} ""
// {{ 2 1 0 "ed6f254b_f425_4804_b152d84f05da4b36" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 3 1 0 "90c32a31_45e8_4377_b61acdd5fec5c0ce" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
strTesting = Translate("testing");
// }} ""
// {{ 4 1 0 "e9e93201_6898_456c_a76f7b2e97285c16" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
blnTesting = 1;
// }} ""
// {{ 5 1 0 "11f17c6d_1972_4b32_88757278a6e1bab8" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
blnAdmin = 1;
// }} ""
// {{ 6 1 0 "7a321bb1_9723_40ed_8f1f6625038fc994" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intTrace = TRACE_LEVEL_DEBUG;
// }} ""
// {{ 7 1 0 "b1f751e8_6e90_463f_8665f7f29af5caf4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 8 1 0 "267e1f24_a0d3_4748_91a7017eb5cd7fc8" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
A_MethodInit(intTrace);
// }} ""
// {{ 9 1 0 "80fc2cf0_381f_40d3_b0f077cc1260fecf" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 10 1 0 "8418b09c_cbf5_4079_966f20f380042be2" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 11 1 0 "6446ef87_f260_475d_933cbf30e013ca1d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 12 1 0 "6fbe3585_bbd2_43f0_b15b4e45fdd376e8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_DEBUG, Translate(">>>>> Searching for past worklists <<<<<"), Translate(""));
// }} ""
// {{ 13 1 0 "4f9d9b82_dfb7_49c4_938b18f95e66c09b" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arrActiveRequestFilePaths.SetSize(0);
// }} ""
// {{ 14 1 0 "fa33b184_26d5_46b7_82fd8525deb9f7b7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 15 1 0 "a2a0e281_02a6_4d2f_85d989632318b62d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strMethodFolderPath = GetMethodFolder(0);
// }} ""
// {{{ 16 1 0 "4104c335_bbab_45ac_b54b1ea777fe6264" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strActiveRequestFolderPath = StrConcat2(strMethodFolderPath, Translate("Request Files\\"));
// }} ""
// {{{ 17 1 0 "52d5c0ee_e78b_47fa_bd84d36d7f0150de" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnDirectoryExists = FileDirectoryLib::CheckIfDirectoryExists(strActiveRequestFolderPath);
// }} ""
// {{{ 18 1 0 "30aa2b36_fd67_4ae5_998226f3127499a5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_DEBUG, Translate("// strActiveRequestFolderPath = "), strActiveRequestFolderPath);
// }} ""
// {{ 19 1 0 "a386788f_28bc_45c0_8411bd37f7ced5e5" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnDirectoryExists == 0)
{
// }} ""
// {{{ 20 1 0 "b578d769_c955_4287_90e44f0e03e18a34" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_DEBUG, Translate(">> Directory created"), Translate(""));
// }} ""
// {{{ 21 1 0 "15bd8282_eecd_4f96_858475c2ca033106" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FileDirectoryLib::CreateDirectory(strActiveRequestFolderPath);
// }} ""
// {{ 22 1 0 "a386788f_28bc_45c0_8411bd37f7ced5e5" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 23 1 0 "fd9ff235_a3f3_4290_a7a512802de49642" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 24 1 0 "5f71a4f3_d53f_4764_b56b24e0ebde509c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FileDirectoryLib::GetFilesInDirectory(strActiveRequestFolderPath, Translate("*"), arrActiveRequestFilePaths);
// }} ""
// {{ 25 1 0 "e62a1f5e_c597_4281_a4c9a2632f87c275" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
intNumberOfActiveRequestFiles=arrActiveRequestFilePaths.GetSize();
// }} ""
// {{ 26 1 0 "c9372407_b7da_45eb_88754a1a708a533c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intNumberOfActiveRequestFiles != 0)
{
// }} ""
// {{ 27 1 0 "ed744433_5f96_4fdd_a98890a2f24a2264" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 28 1 0 "a8b5c269_d4d9_4bc3_962b9cb13415dc42" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_DEBUG, Translate("// intNumberOfActiveRequestFiles = "), intNumberOfActiveRequestFiles);
// }} ""
// {{ 29 1 0 "fff150b5_33d9_4900_af3f0bc69e19a415" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(lpCounter1 = 0; lpCounter1 < intNumberOfActiveRequestFiles;)
{
lpCounter1 = lpCounter1 + 1;
// }} ""
// {{ 30 1 0 "0c8b3a7b_d100_47be_88090ec33a3cbae4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 31 1 0 "867a793b_b5d7_4142_be007c7c7c85b289" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = FileDirectoryLib::DeleteFile(arrActiveRequestFilePaths.ElementAt( lpCounter1 -1));
// }} ""
// {{ 32 1 0 "93d6cf06_7909_4568_9cd35ca089f54d3e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnReturn == 1)
{
// }} ""
// {{ 33 1 0 "47f15460_959a_4de5_9e553c3fa9a5dcab" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Error deleting past active files"));
// }} ""
// {{ 34 1 0 "ff7b4ebe_193e_4da6_a74a1260560bdd48" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 35 1 0 "93d6cf06_7909_4568_9cd35ca089f54d3e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 36 1 0 "fff150b5_33d9_4900_af3f0bc69e19a415" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 37 1 0 "839a13ce_eb60_4a38_ae2d00fd39b11e58" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_RELEASE, Translate("=== Deleted past worklists"), Translate(""));
// }} ""
// {{ 38 1 0 "c9372407_b7da_45eb_88754a1a708a533c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 39 1 0 "fe544a7c_6d67_41cc_95eb6b4669c1f2dd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_DEBUG, Translate(">>>>> Finished past worklist check <<<<<"), Translate(""));
// }} ""
// {{ 40 1 0 "8418b09c_cbf5_4079_966f20f380042be2" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 41 1 0 "fa66eb02_b978_454d_82227e40b89f7a51" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 42 1 0 "0a263dcb_3bf7_4138_9c3ce0af4d4c65d8" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
lpCounter = 0;
while (1 == 1)
{
lpCounter = lpCounter + 1;
// }} ""
// {{{ 43 1 0 "f80f694f_c5ce_4417_b1b2a1b77c3355e8" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
blnMethodProceed = B_GetWorklist(3, lpCounter);
// }} ""
// {{ 44 1 0 "079ad018_626d_48d8_87e94d91ebfe5c3c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnMethodProceed == 0)
{
// }} ""
// {{ 45 1 0 "1bbae86c_38d8_4a1a_bb385e7fbea003af" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 46 1 0 "079ad018_626d_48d8_87e94d91ebfe5c3c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 47 1 0 "71f6cfa1_3dc1_4bd6_ac955f7cbf605588" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 48 1 0 "24e3c406_c5c2_4c85_b2ad4f6d49a1a05e" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
C_CreateSeq();
// }} ""
// {{{ 49 1 0 "ca602ee5_8574_4873_9fb0268ac93d81f4" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
D_LoadInstructions();
// }} ""
// {{{ 50 1 0 "4223f04a_db6b_475b_aa4d1d2a24392a17" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
E_PipettingSteps();
// }} ""
// {{{ 51 1 0 "e764aac5_1652_4f52_a4ba465095849f46" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
F_EndOfRequest(lpCounter);
// }} ""
// {{ 52 1 0 "079ad018_626d_48d8_87e94d91ebfe5c3c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 53 1 0 "5b66f527_94b6_4b1a_9b2ea723139ccb06" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnTesting == 1)
{
// }} ""
// {{ 54 1 0 "a53a049d_123c_416f_9444a9114dc0d38c" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 55 1 0 "5b66f527_94b6_4b1a_9b2ea723139ccb06" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 56 1 0 "0a263dcb_3bf7_4138_9c3ce0af4d4c65d8" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 57 1 0 "b0f0ad01_d997_439d_921746133e7f3973" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
AswStatusDialog::Terminate();
// }} ""
// {{{ 58 1 0 "1406f710_a8a6_4647_a16310eb27f40bc0" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
SCAP_STARPLUS::Disconnect();
// }} ""
// {{ 59 1 0 "5d92cc20_47fe_4fba_acadbb9cd5b7368c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("############## Method Complete Successfully #################"));
// }} ""
// {{ 60 1 0 "ef436499_2eb5_489d_8081ea5486e619cd" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialogEADADE7DEC1B4fa5955C33C0BAC32C9B.InitCustomDialog( "ef436499_2eb5_489d_8081ea5486e619cd" );
customDialogEADADE7DEC1B4fa5955C33C0BAC32C9B.ShowCustomDialog();
// }} ""
// {{ 2 "AutoExitBlock" ""
SANGERGENERAL::_ExitLibrary();
UNIQUE_MEMBERS::_ExitLibrary();
TRACEARRAY::_ExitLibrary();
SCAP_STARPLUS::_ExitLibrary();
UV_STARPLUS::_ExitLibrary();
JSONSEARCH::_ExitLibrary();
LOAD_INSTRUCTIONS::_ExitLibrary();
LOOKUP::_ExitLibrary();
FINDDBPATH::_ExitLibrary();
PARALLELPROCESSHANDLING::_ExitLibrary();
DATAMANAGERINTERFACE::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=ch33$$valid=0$$time=2024-10-24 12:06$$checksum=9c2d67f5$$length=083$$